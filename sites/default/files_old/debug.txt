buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 2
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 3
)
buildFunction
buildExpression 1
while buildExpression 1
)
testing leave from buildExpression 1
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 1
NEW ==== testing leave from buildExpression AT END 1
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1
)
NEW ==== bye bye from buildExpression AT END 1
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 3
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 4
)
buildConditional
while buildConditional
(
buildExpression 2
while buildExpression 2
Array
(
    [0] => 307 (T_STRING)
    [1] => arg
    [2] => 4
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 3
while buildExpression 3
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 4
)
while buildExpression 3
)
HITTING RPARENS 3
NEW ==== testing leave from buildExpression AT END 3
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 3
)
NEW ==== bye bye from buildExpression AT END 3
while buildFunctionCall
)
LEAVING case T_STRING 2
NEW ==== testing leave from buildExpression AT END 2
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 2
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 2
Array
(
    [0] => 283 (T_IS_EQUAL)
    [1] => ==
    [2] => 4
)
while buildExpression 2
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 2
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator'
    [2] => 4
)
while buildExpression 2
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 2
Array
(
    [0] => 279 (T_BOOLEAN_AND)
    [1] => &&
    [2] => 4
)
testing leave from buildExpression 2
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 2
Array
(
    [0] => 279 (T_BOOLEAN_AND)
    [1] => &&
    [2] => 4
)
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => arg
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => 0
                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

    [operator] => ==
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'evacuator'
        )

)
PREVIOUS in buildExpression 2
while buildConditional
Array
(
    [0] => 279 (T_BOOLEAN_AND)
    [1] => &&
    [2] => 4
)
buildExpression 4
while buildExpression 4
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 4
Array
(
    [0] => 307 (T_STRING)
    [1] => arg
    [2] => 4
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 5
while buildExpression 5
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 4
)
while buildExpression 5
)
HITTING RPARENS 5
NEW ==== testing leave from buildExpression AT END 5
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 5
)
NEW ==== bye bye from buildExpression AT END 5
while buildFunctionCall
)
LEAVING case T_STRING 4
NEW ==== testing leave from buildExpression AT END 4
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 4
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 4
Array
(
    [0] => 283 (T_IS_EQUAL)
    [1] => ==
    [2] => 4
)
while buildExpression 4
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 4
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'new'
    [2] => 4
)
while buildExpression 4
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 4
)
while buildExpression 4
)
testing leave from buildExpression 4
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 4
NEW ==== testing leave from buildExpression AT END 4
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 4
)
NEW ==== bye bye from buildExpression AT END 4
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 5
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_add_js
    [2] => 5
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_add_js
    [2] => 5
)
buildExpression 6
while buildExpression 6
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_add_js
    [2] => 5
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 7
while buildExpression 7
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'http://maps.google.com/maps/api/js?sensor=false'
    [2] => 5
)
while buildExpression 7
,
testing leave from buildExpression 7
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 7
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'http://maps.google.com/maps/api/js?sensor=false'
        )

)
PREVIOUS in buildExpression 7
while buildFunctionCall
,
buildExpression 8
while buildExpression 8
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 5
)
while buildExpression 8
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'external'
    [2] => 5
)
while buildExpression 8
)
HITTING RPARENS 8
NEW ==== testing leave from buildExpression AT END 8
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 8
)
NEW ==== bye bye from buildExpression AT END 8
while buildFunctionCall
)
LEAVING case T_STRING 6
NEW ==== testing leave from buildExpression AT END 6
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 6
;
testing leave from buildExpression 6
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 6
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_add_js
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'http://maps.google.com/maps/api/js?sensor=false'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'external'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 6
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 5
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  drupal_add_html_head('<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>');

    [2] => 6
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 7
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_add_js
    [2] => 7
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_add_js
    [2] => 7
)
buildExpression 9
while buildExpression 9
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_add_js
    [2] => 7
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 10
while buildExpression 10
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_get_path
    [2] => 7
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 11
while buildExpression 11
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'module'
    [2] => 7
)
while buildExpression 11
,
testing leave from buildExpression 11
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 11
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'module'
        )

)
PREVIOUS in buildExpression 11
while buildFunctionCall
,
buildExpression 12
while buildExpression 12
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 7
)
while buildExpression 12
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'anket'
    [2] => 7
)
while buildExpression 12
)
HITTING RPARENS 12
NEW ==== testing leave from buildExpression AT END 12
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 12
)
NEW ==== bye bye from buildExpression AT END 12
while buildFunctionCall
)
LEAVING case T_STRING 10
NEW ==== testing leave from buildExpression AT END 10
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 10
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 7
)
while buildExpression 10
.
while buildExpression 10
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '/js/map.js'
    [2] => 7
)
while buildExpression 10
,
testing leave from buildExpression 10
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 10
,
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_get_path
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'module'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'anket'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

    [operator] => .
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '/js/map.js'
        )

)
PREVIOUS in buildExpression 10
while buildFunctionCall
,
buildExpression 13
while buildExpression 13
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 7
)
while buildExpression 13
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'file'
    [2] => 7
)
while buildExpression 13
)
HITTING RPARENS 13
NEW ==== testing leave from buildExpression AT END 13
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 13
)
NEW ==== bye bye from buildExpression AT END 13
while buildFunctionCall
)
LEAVING case T_STRING 9
NEW ==== testing leave from buildExpression AT END 9
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 9
;
testing leave from buildExpression 9
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 9
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_add_js
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPFunctionCall
                                (
                                    [parent] => PGPNode
                                        (
                                            [type-3] => 
                                        )

                                    [type] => 601
                                    [name] => Array
                                        (
                                            [type] => 307 (T_STRING)
                                            [value] => drupal_get_path
                                        )

                                    [noparens] => 0
                                    [parameters] => PGPList
                                        (
                                            [0] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'module'
                                                        )

                                                )

                                            [1] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'anket'
                                                        )

                                                )

                                        )

                                    [parentExpression] => PGPExpression
                                        (
                                            [type-1] => 
                                        )

                                    [debug] => 
                                )

                            [operator] => .
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '/js/map.js'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'file'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 9
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 7
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 8
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 9
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 11
)
buildFunction
buildExpression 14
while buildExpression 14
)
testing leave from buildExpression 14
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 14
NEW ==== testing leave from buildExpression AT END 14
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 14
)
NEW ==== bye bye from buildExpression AT END 14
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 11
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 336 (T_RETURN)
    [1] => return
    [2] => 12
)
buildFunctionCall
while buildFunctionCall
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 12
)
buildExpression 15
while buildExpression 15
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 12
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access anket form'
    [2] => 12
)
buildExpression 16
while buildExpression 16
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access anket form'
    [2] => 12
)
while buildExpression 16
)
testing leave from buildExpression 16
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 16
NEW ==== testing leave from buildExpression AT END 16
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 16
)
NEW ==== bye bye from buildExpression AT END 16
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 1, '1'
NEW ==== testing leave from buildExpression AT END 15
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 15
;
testing leave from buildExpression 15
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 15
;
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'access anket form'
                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 15
while buildFunctionCall
;
Hitting ; in while buildFunctionCall
PGPFunctionCall
(
    [parent] => PGPNode
        (
            [type-3] => 
        )

    [type] => 601
    [name] => Array
        (
            [type] => 336 (T_RETURN)
            [value] => return
        )

    [noparens] => 1
    [parameters] => PGPList
        (
            [0] => PGPExpression
                (
                    [operand] => PGPArray
                        (
                            [type] => 360 (T_ARRAY)
                            [multiline] => 
                            [original] => 
                            [preserve] => 1
                            [count] => 1
                            [commaCount] => 0
                            [values] => PGPList
                                (
                                    [lparens] => (
                                    [value] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'access anket form'
                                                )

                                        )

                                )

                            [debug] => 
                        )

                )

        )

    [debug] => 
)
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 12
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 13
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // По адресу 'evacuator/new' должен выводиться результат работы функции

    [2] => 15
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 16
)
buildFunction
buildExpression 17
while buildExpression 17
)
testing leave from buildExpression 17
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 17
NEW ==== testing leave from buildExpression AT END 17
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 17
)
NEW ==== bye bye from buildExpression AT END 17
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 16
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 17
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 17
)
buildExpression 18
while buildExpression 18
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 17
)
buildExpression 19
while buildExpression 19
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 17
)
while buildExpression 19
=
testing leave from buildExpression 19
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 19
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
)
PREVIOUS in buildExpression 19
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
)
LEAVING case T_VARIABLE 18
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 17
)
while buildExpression 18
=
while buildExpression 18
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 17
)
while buildExpression 18
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 17
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 0, ''
NEW ==== testing leave from buildExpression AT END 18
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 18
;
testing leave from buildExpression 18
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 18
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $items
        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 0
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 18
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 17
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 18
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 18
)
buildExpression 20
while buildExpression 20
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 18
)
buildExpression 21
while buildExpression 21
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 21 next token value = 'evacuator/new'
buildExpression 22
while buildExpression 22
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator/new'
    [2] => 18
)
while buildExpression 22
]
testing leave from buildExpression 22
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 22 next token value =  
NEW ==== testing leave from buildExpression AT END 22
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 22
]
NEW ==== bye bye from buildExpression AT END 22
while buildExpression 21
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 21 next token value =  
NEW ==== testing leave from buildExpression AT END 21
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 21
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 18
)
while buildExpression 21
=
testing leave from buildExpression 21
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 21
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator/new'
                )

        )

)
PREVIOUS in buildExpression 21
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator/new'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator/new'
                )

        )

)
LEAVING case T_VARIABLE 20
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 18
)
while buildExpression 20
=
while buildExpression 20
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 18
)
while buildExpression 20
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 18
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 18
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'title'
    [2] => 19
)
buildExpression 23
while buildExpression 23
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'title'
    [2] => 19
)
while buildExpression 23
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 19
)
while buildExpression 23
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 19
)
testing leave from buildExpression 23
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 23
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 19
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'title'
        )

)
PREVIOUS in buildExpression 23
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 19
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 19
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Добавить эвакуатор в каталог VEKEV.RU'
    [2] => 19
)
buildExpression 24
while buildExpression 24
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Добавить эвакуатор в каталог VEKEV.RU'
    [2] => 19
)
while buildExpression 24
,
testing leave from buildExpression 24
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 24
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Добавить эвакуатор в каталог VEKEV.RU'
        )

)
PREVIOUS in buildExpression 24
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 19
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'page callback'
    [2] => 20
)
buildExpression 25
while buildExpression 25
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'page callback'
    [2] => 20
)
while buildExpression 25
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 20
)
while buildExpression 25
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 20
)
testing leave from buildExpression 25
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 25
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 20
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'page callback'
        )

)
PREVIOUS in buildExpression 25
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 20
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 20
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'anket_form'
    [2] => 20
)
buildExpression 26
while buildExpression 26
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'anket_form'
    [2] => 20
)
while buildExpression 26
,
testing leave from buildExpression 26
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 26
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'anket_form'
        )

)
PREVIOUS in buildExpression 26
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 20
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access callback'
    [2] => 21
)
buildExpression 27
while buildExpression 27
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access callback'
    [2] => 21
)
while buildExpression 27
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 21
)
while buildExpression 27
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 21
)
testing leave from buildExpression 27
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 27
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 21
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'access callback'
        )

    [whitespace] =>   
)
PREVIOUS in buildExpression 27
inside default case return from buildExpression
ELSEIF deleteLast on T_DOUBLE_ARROW
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 21
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 21
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'user_access'
    [2] => 21
)
buildExpression 28
while buildExpression 28
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'user_access'
    [2] => 21
)
while buildExpression 28
,
testing leave from buildExpression 28
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 28
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'user_access'
        )

)
PREVIOUS in buildExpression 28
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 21
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access arguments'
    [2] => 22
)
buildExpression 29
while buildExpression 29
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access arguments'
    [2] => 22
)
while buildExpression 29
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 22
)
while buildExpression 29
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 22
)
testing leave from buildExpression 29
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 29
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 22
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'access arguments'
        )

)
PREVIOUS in buildExpression 29
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 22
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 22
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 22
)
buildExpression 30
while buildExpression 30
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 22
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access anket form'
    [2] => 22
)
buildExpression 31
while buildExpression 31
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'access anket form'
    [2] => 22
)
while buildExpression 31
)
testing leave from buildExpression 31
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 31
NEW ==== testing leave from buildExpression AT END 31
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 31
)
NEW ==== bye bye from buildExpression AT END 31
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 1, ''
NEW ==== testing leave from buildExpression AT END 30
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 30
,
testing leave from buildExpression 30
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 30
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'access anket form'
                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 30
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 22
)
while buildArray
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //'access arguments' => array('access content'),

    [2] => 23
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 24
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 24
)
buildExpression 32
while buildExpression 32
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 24
)
while buildExpression 32
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 24
)
while buildExpression 32
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 24
)
testing leave from buildExpression 32
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 32
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 24
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'description'
        )

)
PREVIOUS in buildExpression 32
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 24
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 24
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'My form'
    [2] => 24
)
buildExpression 33
while buildExpression 33
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'My form'
    [2] => 24
)
while buildExpression 33
,
testing leave from buildExpression 33
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 33
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'My form'
        )

)
PREVIOUS in buildExpression 33
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 24
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'type'
    [2] => 25
)
buildExpression 34
while buildExpression 34
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'type'
    [2] => 25
)
while buildExpression 34
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 25
)
while buildExpression 34
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 25
)
testing leave from buildExpression 34
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 34
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 25
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'type'
        )

)
PREVIOUS in buildExpression 34
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 25
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 25
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => MENU_CALLBACK
    [2] => 25
)
buildExpression 35
while buildExpression 35
Array
(
    [0] => 307 (T_STRING)
    [1] => MENU_CALLBACK
    [2] => 25
)
while buildExpression 35
,
testing leave from buildExpression 35
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 35
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => MENU_CALLBACK
        )

)
PREVIOUS in buildExpression 35
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 25
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 6, 6, ''
NEW ==== testing leave from buildExpression AT END 20
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 20
;
testing leave from buildExpression 20
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 20
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $items
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'evacuator/new'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 6
            [commaCount] => 6
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
    
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Добавить эвакуатор в каталог VEKEV.RU'
                                )

                        )

                    [whitespace] => 
    
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'page callback'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'anket_form'
                                )

                        )

                    [whitespace] => 
    
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'access callback'
                                )

                        )

                    [whitespace] =>   
                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'user_access'
                                )

                        )

                    [whitespace] => 
    
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'access arguments'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'access anket form'
                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
    
                    [comment] => Array
                        (
                            [type] => 366 (T_COMMENT)
                            [value] => //'access arguments' => array('access content'),
                            [append] => 0
                        )

                    [whitespace] => 
    
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'description'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'My form'
                                )

                        )

                    [whitespace] => 
    
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => MENU_CALLBACK
                                )

                        )

                    [whitespace] => 
  
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 20
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 26
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 336 (T_RETURN)
    [1] => return
    [2] => 27
)
buildFunctionCall
while buildFunctionCall
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 27
)
buildExpression 36
while buildExpression 36
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 27
)
buildExpression 37
while buildExpression 37
;
testing leave from buildExpression 37
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 37
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
)
PREVIOUS in buildExpression 37
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $items
)
LEAVING case T_VARIABLE 36
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $items
    [2] => 27
)
while buildExpression 36
;
testing leave from buildExpression 36
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 36
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $items
        )

)
PREVIOUS in buildExpression 36
while buildFunctionCall
;
Hitting ; in while buildFunctionCall
PGPFunctionCall
(
    [parent] => PGPNode
        (
            [type-3] => 
        )

    [type] => 601
    [name] => Array
        (
            [type] => 336 (T_RETURN)
            [value] => return
        )

    [noparens] => 1
    [parameters] => PGPList
        (
            [0] => PGPExpression
                (
                    [operand] => PGPOperand
                        (
                            [type] => 309 (T_VARIABLE)
                            [value] => $items
                        )

                )

        )

    [debug] => 
)
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 27
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 28
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // Эта функция вызывается каждый раз, когда мы посещаем страницу. 

    [2] => 30
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // Функция генерирует и возвращает нашу форму.

    [2] => 31
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 32
)
buildFunction
buildExpression 38
while buildExpression 38
)
testing leave from buildExpression 38
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 38
NEW ==== testing leave from buildExpression AT END 38
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 38
)
NEW ==== bye bye from buildExpression AT END 38
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 32
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 336 (T_RETURN)
    [1] => return
    [2] => 33
)
buildFunctionCall
while buildFunctionCall
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 33
)
buildExpression 39
while buildExpression 39
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_get_form
    [2] => 33
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 40
while buildExpression 40
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'anket_my_form'
    [2] => 33
)
while buildExpression 40
)
HITTING RPARENS 40
NEW ==== testing leave from buildExpression AT END 40
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 40
)
NEW ==== bye bye from buildExpression AT END 40
while buildFunctionCall
)
LEAVING case T_STRING 39
NEW ==== testing leave from buildExpression AT END 39
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 39
;
testing leave from buildExpression 39
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 39
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_get_form
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'anket_my_form'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 39
while buildFunctionCall
;
Hitting ; in while buildFunctionCall
PGPFunctionCall
(
    [parent] => PGPNode
        (
            [type-3] => 
        )

    [type] => 601
    [name] => Array
        (
            [type] => 336 (T_RETURN)
            [value] => return
        )

    [noparens] => 1
    [parameters] => PGPList
        (
            [0] => PGPExpression
                (
                    [operand] => PGPFunctionCall
                        (
                            [parent] => PGPNode
                                (
                                    [type-3] => 
                                )

                            [type] => 601
                            [name] => Array
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => drupal_get_form
                                )

                            [noparens] => 0
                            [parameters] => PGPList
                                (
                                    [0] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'anket_my_form'
                                                )

                                        )

                                )

                            [parentExpression] => PGPExpression
                                (
                                    [type-1] => 
                                )

                            [debug] => 
                        )

                )

        )

    [debug] => 
)
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 33
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 34
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // Функция-строитель нашей формы.

    [2] => 36
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 37
)
buildFunction
buildExpression 41
while buildExpression 41
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 37
)
buildExpression 42
while buildExpression 42
,
testing leave from buildExpression 42
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 42
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 42
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 41
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 37
)
while buildExpression 41
,
testing leave from buildExpression 41
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 41
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 41
buildExpression 43
while buildExpression 43
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 37
)
while buildExpression 43
&
while buildExpression 43
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 37
)
buildExpression 44
while buildExpression 44
)
testing leave from buildExpression 44
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 44
NEW ==== testing leave from buildExpression AT END 44
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 44
)
NEW ==== bye bye from buildExpression AT END 44
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
LEAVING case T_VARIABLE 43
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 37
)
while buildExpression 43
)
testing leave from buildExpression 43
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 43
NEW ==== testing leave from buildExpression AT END 43
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 43
)
NEW ==== bye bye from buildExpression AT END 43
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
 
    [2] => 37
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  drupal_set_message(print_r($form_state));

    [2] => 38
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 39
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $volume
    [2] => 39
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $volume
    [2] => 39
)
buildExpression 45
while buildExpression 45
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $volume
    [2] => 39
)
buildExpression 46
while buildExpression 46
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 46
=
testing leave from buildExpression 46
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 46
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $volume
)
PREVIOUS in buildExpression 46
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $volume
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $volume
)
LEAVING case T_VARIABLE 45
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 45
=
while buildExpression 45
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 45
(
while buildExpression 45
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 39
)
buildExpression 47
while buildExpression 47
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 47 next token value = 'values'
buildExpression 48
while buildExpression 48
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 39
)
while buildExpression 48
]
testing leave from buildExpression 48
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 48 next token value = [
NEW ==== testing leave from buildExpression AT END 48
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 48
]
NEW ==== bye bye from buildExpression AT END 48
while buildExpression 47
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 47 next token value = [
NEW ==== testing leave from buildExpression AT END 47
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 47
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 47 next token value = 'volume'
buildExpression 49
while buildExpression 49
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'volume'
    [2] => 39
)
while buildExpression 49
]
testing leave from buildExpression 49
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 49 next token value = )
NEW ==== testing leave from buildExpression AT END 49
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 49
]
NEW ==== bye bye from buildExpression AT END 49
while buildExpression 47
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 47 next token value = )
NEW ==== testing leave from buildExpression AT END 47
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 47
)
HITTING RPARENS 47
NEW ==== testing leave from buildExpression AT END 47
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 47
)
NEW ==== bye bye from buildExpression AT END 47
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
LEAVING case T_VARIABLE 45
]
NEW ==== testing leave from buildExpression AT END 45
lparens = 1 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 45
)
HITTING RPARENS 45
NEW ==== testing leave from buildExpression AT END 45
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 45
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 45
?
while buildExpression 45
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 45
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 39
)
buildExpression 50
while buildExpression 50
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 50 next token value = 'values'
buildExpression 51
while buildExpression 51
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 39
)
while buildExpression 51
]
testing leave from buildExpression 51
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 51 next token value = [
NEW ==== testing leave from buildExpression AT END 51
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 51
]
NEW ==== bye bye from buildExpression AT END 51
while buildExpression 50
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 50 next token value = [
NEW ==== testing leave from buildExpression AT END 50
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 50
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 50 next token value = 'volume'
buildExpression 52
while buildExpression 52
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'volume'
    [2] => 39
)
while buildExpression 52
]
testing leave from buildExpression 52
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 52 next token value =  
NEW ==== testing leave from buildExpression AT END 52
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 52
]
NEW ==== bye bye from buildExpression AT END 52
while buildExpression 50
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 50 next token value =  
NEW ==== testing leave from buildExpression AT END 50
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 50
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 50
:
testing leave from buildExpression 50
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 50
:
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
PREVIOUS in buildExpression 50
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
LEAVING case T_VARIABLE 45
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 45
:
while buildExpression 45
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 39
)
while buildExpression 45
Array
(
    [0] => 306 (T_DNUMBER)
    [1] => 2.5
    [2] => 39
)
while buildExpression 45
;
testing leave from buildExpression 45
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 45
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $volume
        )

    [assign] => =
    [lparens] => (
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'volume'
                        )

                )

        )

    [rparens] => )
    [operator] => ?
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'volume'
                        )

                )

        )

    [operator] => :
    [operand] => 2.5
)
PREVIOUS in buildExpression 45
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 39
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 40
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 40
)
buildExpression 53
while buildExpression 53
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 40
)
buildExpression 54
while buildExpression 54
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 54 next token value = 'volume'
buildExpression 55
while buildExpression 55
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'volume'
    [2] => 40
)
while buildExpression 55
]
testing leave from buildExpression 55
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 55 next token value =  
NEW ==== testing leave from buildExpression AT END 55
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 55
]
NEW ==== bye bye from buildExpression AT END 55
while buildExpression 54
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 54 next token value =  
NEW ==== testing leave from buildExpression AT END 54
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 54
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 40
)
while buildExpression 54
=
testing leave from buildExpression 54
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 54
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
PREVIOUS in buildExpression 54
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
LEAVING case T_VARIABLE 53
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 40
)
while buildExpression 53
=
while buildExpression 53
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 40
)
while buildExpression 53
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 40
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 40
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 41
)
buildExpression 56
while buildExpression 56
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 41
)
while buildExpression 56
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 41
)
while buildExpression 56
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 41
)
testing leave from buildExpression 56
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 56
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 41
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 56
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 41
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 41
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'select'
    [2] => 41
)
buildExpression 57
while buildExpression 57
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'select'
    [2] => 41
)
while buildExpression 57
,
testing leave from buildExpression 57
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 57
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'select'
        )

)
PREVIOUS in buildExpression 57
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 41
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#options'
    [2] => 42
)
buildExpression 58
while buildExpression 58
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#options'
    [2] => 42
)
while buildExpression 58
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 42
)
while buildExpression 58
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 42
)
testing leave from buildExpression 58
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 58
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 42
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#options'
        )

)
PREVIOUS in buildExpression 58
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 42
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 42
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 42
)
buildExpression 59
while buildExpression 59
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 42
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 42
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0,5'
    [2] => 43
)
buildExpression 60
while buildExpression 60
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0,5'
    [2] => 43
)
while buildExpression 60
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 43
)
while buildExpression 60
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 43
)
testing leave from buildExpression 60
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 60
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 43
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '0,5'
        )

)
PREVIOUS in buildExpression 60
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 43
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 43
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0,5'
    [2] => 43
)
buildExpression 61
while buildExpression 61
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0,5'
    [2] => 43
)
while buildExpression 61
,
testing leave from buildExpression 61
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 61
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '0,5'
        )

)
PREVIOUS in buildExpression 61
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 43
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 44
)
buildExpression 62
while buildExpression 62
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 44
)
while buildExpression 62
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 44
)
while buildExpression 62
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 44
)
testing leave from buildExpression 62
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 62
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 44
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1'
        )

)
PREVIOUS in buildExpression 62
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 44
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 44
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 44
)
buildExpression 63
while buildExpression 63
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 44
)
while buildExpression 63
,
testing leave from buildExpression 63
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 63
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1'
        )

)
PREVIOUS in buildExpression 63
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 44
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1,5'
    [2] => 45
)
buildExpression 64
while buildExpression 64
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1,5'
    [2] => 45
)
while buildExpression 64
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 45
)
while buildExpression 64
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 45
)
testing leave from buildExpression 64
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 64
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 45
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1,5'
        )

)
PREVIOUS in buildExpression 64
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 45
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 45
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1,5'
    [2] => 45
)
buildExpression 65
while buildExpression 65
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1,5'
    [2] => 45
)
while buildExpression 65
,
testing leave from buildExpression 65
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 65
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1,5'
        )

)
PREVIOUS in buildExpression 65
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 45
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 46
)
buildExpression 66
while buildExpression 66
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 46
)
while buildExpression 66
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 46
)
while buildExpression 66
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 46
)
testing leave from buildExpression 66
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 66
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 46
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2'
        )

)
PREVIOUS in buildExpression 66
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 46
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 46
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 46
)
buildExpression 67
while buildExpression 67
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 46
)
while buildExpression 67
,
testing leave from buildExpression 67
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 67
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2'
        )

)
PREVIOUS in buildExpression 67
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 46
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2,5'
    [2] => 47
)
buildExpression 68
while buildExpression 68
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2,5'
    [2] => 47
)
while buildExpression 68
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 47
)
while buildExpression 68
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 47
)
testing leave from buildExpression 68
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 68
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 47
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2,5'
        )

)
PREVIOUS in buildExpression 68
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 47
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 47
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2,5'
    [2] => 47
)
buildExpression 69
while buildExpression 69
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2,5'
    [2] => 47
)
while buildExpression 69
,
testing leave from buildExpression 69
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 69
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2,5'
        )

)
PREVIOUS in buildExpression 69
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 47
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 48
)
buildExpression 70
while buildExpression 70
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 48
)
while buildExpression 70
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 48
)
while buildExpression 70
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 48
)
testing leave from buildExpression 70
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 70
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 48
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3'
        )

)
PREVIOUS in buildExpression 70
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 48
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 48
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 48
)
buildExpression 71
while buildExpression 71
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 48
)
while buildExpression 71
,
testing leave from buildExpression 71
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 71
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3'
        )

)
PREVIOUS in buildExpression 71
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 48
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3,5'
    [2] => 49
)
buildExpression 72
while buildExpression 72
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3,5'
    [2] => 49
)
while buildExpression 72
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 49
)
while buildExpression 72
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 49
)
testing leave from buildExpression 72
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 72
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 49
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3,5'
        )

)
PREVIOUS in buildExpression 72
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 49
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 49
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3,5'
    [2] => 49
)
buildExpression 73
while buildExpression 73
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3,5'
    [2] => 49
)
while buildExpression 73
,
testing leave from buildExpression 73
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 73
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3,5'
        )

)
PREVIOUS in buildExpression 73
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 49
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 50
)
buildExpression 74
while buildExpression 74
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 50
)
while buildExpression 74
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 50
)
while buildExpression 74
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 50
)
testing leave from buildExpression 74
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 74
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 50
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4'
        )

)
PREVIOUS in buildExpression 74
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 50
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 50
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 50
)
buildExpression 75
while buildExpression 75
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 50
)
while buildExpression 75
,
testing leave from buildExpression 75
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 75
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4'
        )

)
PREVIOUS in buildExpression 75
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 50
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4,5'
    [2] => 51
)
buildExpression 76
while buildExpression 76
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4,5'
    [2] => 51
)
while buildExpression 76
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 51
)
while buildExpression 76
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 51
)
testing leave from buildExpression 76
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 76
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 51
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4,5'
        )

)
PREVIOUS in buildExpression 76
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 51
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 51
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4,5'
    [2] => 51
)
buildExpression 77
while buildExpression 77
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4,5'
    [2] => 51
)
while buildExpression 77
,
testing leave from buildExpression 77
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 77
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4,5'
        )

)
PREVIOUS in buildExpression 77
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 51
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 52
)
buildExpression 78
while buildExpression 78
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 52
)
while buildExpression 78
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 52
)
while buildExpression 78
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 52
)
testing leave from buildExpression 78
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 78
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 52
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '5'
        )

)
PREVIOUS in buildExpression 78
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 52
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 52
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 52
)
buildExpression 79
while buildExpression 79
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 52
)
while buildExpression 79
,
testing leave from buildExpression 79
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 79
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '5'
        )

)
PREVIOUS in buildExpression 79
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 52
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 53
)
buildExpression 80
while buildExpression 80
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 53
)
while buildExpression 80
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 53
)
while buildExpression 80
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 53
)
testing leave from buildExpression 80
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 80
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 53
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '6'
        )

)
PREVIOUS in buildExpression 80
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 53
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 53
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 53
)
buildExpression 81
while buildExpression 81
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 53
)
while buildExpression 81
,
testing leave from buildExpression 81
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 81
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '6'
        )

)
PREVIOUS in buildExpression 81
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 53
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 54
)
buildExpression 82
while buildExpression 82
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 54
)
while buildExpression 82
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 54
)
while buildExpression 82
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 54
)
testing leave from buildExpression 82
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 82
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 54
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '10'
        )

)
PREVIOUS in buildExpression 82
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 54
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 54
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 54
)
buildExpression 83
while buildExpression 83
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 54
)
while buildExpression 83
,
testing leave from buildExpression 83
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 83
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '10'
        )

)
PREVIOUS in buildExpression 83
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 54
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 55
)
buildExpression 84
while buildExpression 84
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 55
)
while buildExpression 84
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 55
)
while buildExpression 84
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 55
)
testing leave from buildExpression 84
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 84
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 55
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '15'
        )

)
PREVIOUS in buildExpression 84
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 55
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 55
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 55
)
buildExpression 85
while buildExpression 85
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 55
)
while buildExpression 85
,
testing leave from buildExpression 85
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 85
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '15'
        )

)
PREVIOUS in buildExpression 85
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 55
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '40'
    [2] => 56
)
buildExpression 86
while buildExpression 86
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '40'
    [2] => 56
)
while buildExpression 86
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 56
)
while buildExpression 86
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 56
)
testing leave from buildExpression 86
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 86
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 56
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '40'
        )

)
PREVIOUS in buildExpression 86
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 56
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 56
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '40'
    [2] => 56
)
buildExpression 87
while buildExpression 87
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '40'
    [2] => 56
)
while buildExpression 87
)
testing leave from buildExpression 87
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 87
NEW ==== testing leave from buildExpression AT END 87
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 87
)
NEW ==== bye bye from buildExpression AT END 87
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 14, 14, ''
NEW ==== testing leave from buildExpression AT END 59
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 59
,
testing leave from buildExpression 59
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 59
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 14
            [commaCount] => 13
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '0,5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '0,5'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1,5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1,5'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2,5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2,5'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3,5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3,5'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4,5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4,5'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '5'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '6'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '6'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '10'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '10'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '15'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '15'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '40'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '40'
                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 59
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 56
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 57
)
buildExpression 88
while buildExpression 88
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 57
)
while buildExpression 88
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 57
)
while buildExpression 88
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 57
)
testing leave from buildExpression 88
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 88
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 57
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 88
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 57
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 57
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $volume
    [2] => 57
)
buildExpression 89
while buildExpression 89
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $volume
    [2] => 57
)
buildExpression 90
while buildExpression 90
,
testing leave from buildExpression 90
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 90
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $volume
)
PREVIOUS in buildExpression 90
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $volume
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $volume
)
LEAVING case T_VARIABLE 89
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $volume
    [2] => 57
)
while buildExpression 89
,
testing leave from buildExpression 89
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 89
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $volume
        )

)
PREVIOUS in buildExpression 89
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 57
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 3, 3, ''
NEW ==== testing leave from buildExpression AT END 53
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 53
;
testing leave from buildExpression 53
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 53
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'volume'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 3
            [commaCount] => 3
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'select'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#options'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 1
                                    [preserve] => 1
                                    [count] => 14
                                    [commaCount] => 13
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '0,5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '0,5'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '1'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '1'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '1,5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '1,5'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '2'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '2'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '2,5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '2,5'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3,5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3,5'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4,5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4,5'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '5'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '6'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '6'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '10'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '10'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '15'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '15'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '40'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '40'
                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $volume
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 53
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 58
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // TODO: Надо сделать выбор из списка с возможностью добавления, если в списке нет

    [2] => 60
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 61
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 61
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 61
)
buildExpression 91
while buildExpression 91
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 61
)
buildExpression 92
while buildExpression 92
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 92 next token value = 'evacuator_name'
buildExpression 93
while buildExpression 93
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_name'
    [2] => 61
)
while buildExpression 93
]
testing leave from buildExpression 93
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 93 next token value =  
NEW ==== testing leave from buildExpression AT END 93
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 93
]
NEW ==== bye bye from buildExpression AT END 93
while buildExpression 92
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 92 next token value =  
NEW ==== testing leave from buildExpression AT END 92
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 92
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 61
)
while buildExpression 92
=
testing leave from buildExpression 92
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 92
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
PREVIOUS in buildExpression 92
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
LEAVING case T_VARIABLE 91
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 61
)
while buildExpression 91
=
while buildExpression 91
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 61
)
while buildExpression 91
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 61
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 61
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 62
)
buildExpression 94
while buildExpression 94
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 62
)
while buildExpression 94
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 62
)
while buildExpression 94
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 62
)
testing leave from buildExpression 94
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 94
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 62
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 94
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 62
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 62
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 62
)
buildExpression 95
while buildExpression 95
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 62
)
while buildExpression 95
,
testing leave from buildExpression 95
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 95
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 95
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 62
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 63
)
buildExpression 96
while buildExpression 96
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 63
)
while buildExpression 96
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 63
)
while buildExpression 96
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 63
)
testing leave from buildExpression 96
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 96
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 63
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 96
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 63
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 63
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1.1 Введите модель эвакуатора, грузоподъемность'
    [2] => 63
)
buildExpression 97
while buildExpression 97
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1.1 Введите модель эвакуатора, грузоподъемность'
    [2] => 63
)
while buildExpression 97
,
testing leave from buildExpression 97
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 97
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1.1 Введите модель эвакуатора, грузоподъемность'
        )

)
PREVIOUS in buildExpression 97
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 63
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 64
)
buildExpression 98
while buildExpression 98
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 64
)
while buildExpression 98
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 64
)
while buildExpression 98
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 64
)
testing leave from buildExpression 98
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 98
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 64
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 98
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 64
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 64
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 64
)
buildExpression 99
while buildExpression 99
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 64
)
while buildExpression 99
,
testing leave from buildExpression 99
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 99
,
PGPExpression
(
    [operand] => 20
)
PREVIOUS in buildExpression 99
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 64
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 65
)
buildExpression 100
while buildExpression 100
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 65
)
while buildExpression 100
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 65
)
while buildExpression 100
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 65
)
testing leave from buildExpression 100
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 100
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 65
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 100
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 65
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 65
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 65
)
buildExpression 101
while buildExpression 101
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 65
)
while buildExpression 101
,
testing leave from buildExpression 101
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 101
,
PGPExpression
(
    [operand] => 20
)
PREVIOUS in buildExpression 101
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 65
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 66
)
buildExpression 102
while buildExpression 102
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 66
)
while buildExpression 102
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 66
)
while buildExpression 102
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 66
)
testing leave from buildExpression 102
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 102
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 66
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 102
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 66
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 66
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 66
)
buildExpression 103
while buildExpression 103
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 66
)
buildExpression 104
while buildExpression 104
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 104 next token value = 'values'
buildExpression 105
while buildExpression 105
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 66
)
while buildExpression 105
]
testing leave from buildExpression 105
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 105 next token value = [
NEW ==== testing leave from buildExpression AT END 105
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 105
]
NEW ==== bye bye from buildExpression AT END 105
while buildExpression 104
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 104 next token value = [
NEW ==== testing leave from buildExpression AT END 104
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 104
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 104 next token value = 'evacuator_name'
buildExpression 106
while buildExpression 106
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_name'
    [2] => 66
)
while buildExpression 106
]
testing leave from buildExpression 106
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 106 next token value = ,
NEW ==== testing leave from buildExpression AT END 106
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 106
]
NEW ==== bye bye from buildExpression AT END 106
while buildExpression 104
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 104 next token value = ,
NEW ==== testing leave from buildExpression AT END 104
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 104
,
testing leave from buildExpression 104
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 104
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
PREVIOUS in buildExpression 104
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
LEAVING case T_VARIABLE 103
]
NEW ==== testing leave from buildExpression AT END 103
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 103
,
testing leave from buildExpression 103
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 103
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'evacuator_name'
                        )

                )

        )

)
PREVIOUS in buildExpression 103
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
        
    [2] => 66
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 67
)
buildExpression 107
while buildExpression 107
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 67
)
while buildExpression 107
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 67
)
while buildExpression 107
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 67
)
testing leave from buildExpression 107
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 107
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 67
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#required'
        )

)
PREVIOUS in buildExpression 107
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 67
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 67
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 67
)
buildExpression 108
while buildExpression 108
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 67
)
while buildExpression 108
,
testing leave from buildExpression 108
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 108
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => TRUE
        )

)
PREVIOUS in buildExpression 108
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 67
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 6, 6, ''
NEW ==== testing leave from buildExpression AT END 91
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 91
;
testing leave from buildExpression 91
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 91
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'evacuator_name'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 6
            [commaCount] => 6
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1.1 Введите модель эвакуатора, грузоподъемность'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 20
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 20
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'evacuator_name'
                                                )

                                        )

                                )

                        )

                    [whitespace] =>  
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#required'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => TRUE
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 91
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

   
    [2] => 68
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $options
    [2] => 70
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $options
    [2] => 70
)
buildExpression 109
while buildExpression 109
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $options
    [2] => 70
)
buildExpression 110
while buildExpression 110
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 110
=
testing leave from buildExpression 110
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 110
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $options
)
PREVIOUS in buildExpression 110
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $options
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $options
)
LEAVING case T_VARIABLE 109
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 109
=
while buildExpression 109
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 109
(
while buildExpression 109
Array
(
    [0] => 307 (T_STRING)
    [1] => is_array
    [2] => 70
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $options
        )

    [assign] => =
    [lparens] => (
    [3] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 111
while buildExpression 111
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 70
)
buildExpression 112
while buildExpression 112
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 112 next token value = 'values'
buildExpression 113
while buildExpression 113
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 70
)
while buildExpression 113
]
testing leave from buildExpression 113
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 113 next token value = [
NEW ==== testing leave from buildExpression AT END 113
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 113
]
NEW ==== bye bye from buildExpression AT END 113
while buildExpression 112
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 112 next token value = [
NEW ==== testing leave from buildExpression AT END 112
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 112
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 112 next token value = 'options'
buildExpression 114
while buildExpression 114
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 70
)
while buildExpression 114
]
testing leave from buildExpression 114
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 114 next token value = )
NEW ==== testing leave from buildExpression AT END 114
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 114
]
NEW ==== bye bye from buildExpression AT END 114
while buildExpression 112
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 112 next token value = )
NEW ==== testing leave from buildExpression AT END 112
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 112
)
HITTING RPARENS 112
NEW ==== testing leave from buildExpression AT END 112
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 112
)
NEW ==== bye bye from buildExpression AT END 112
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
LEAVING case T_VARIABLE 111
]
NEW ==== testing leave from buildExpression AT END 111
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 111
)
HITTING RPARENS 111
NEW ==== testing leave from buildExpression AT END 111
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 111
)
NEW ==== bye bye from buildExpression AT END 111
while buildFunctionCall
)
LEAVING case T_STRING 109
NEW ==== testing leave from buildExpression AT END 109
lparens = 1 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 109
)
HITTING RPARENS 109
NEW ==== testing leave from buildExpression AT END 109
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 109
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 109
?
while buildExpression 109
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 109
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 70
)
buildExpression 115
while buildExpression 115
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 115 next token value = 'values'
buildExpression 116
while buildExpression 116
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 70
)
while buildExpression 116
]
testing leave from buildExpression 116
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 116 next token value = [
NEW ==== testing leave from buildExpression AT END 116
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 116
]
NEW ==== bye bye from buildExpression AT END 116
while buildExpression 115
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 115 next token value = [
NEW ==== testing leave from buildExpression AT END 115
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 115
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 115 next token value = 'options'
buildExpression 117
while buildExpression 117
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 70
)
while buildExpression 117
]
testing leave from buildExpression 117
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 117 next token value =  
NEW ==== testing leave from buildExpression AT END 117
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 117
]
NEW ==== bye bye from buildExpression AT END 117
while buildExpression 115
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 115 next token value =  
NEW ==== testing leave from buildExpression AT END 115
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 115
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 115
:
testing leave from buildExpression 115
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 115
:
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
PREVIOUS in buildExpression 115
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
LEAVING case T_VARIABLE 109
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 109
:
while buildExpression 109
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 70
)
while buildExpression 109
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 70
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 0, ''
NEW ==== testing leave from buildExpression AT END 109
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 109
;
testing leave from buildExpression 109
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 109
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $options
        )

    [assign] => =
    [lparens] => (
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => is_array
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'options'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

    [rparens] => )
    [operator] => ?
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

        )

    [operator] => :
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 0
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 109
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 70
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 71
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 71
)
buildExpression 118
while buildExpression 118
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 71
)
buildExpression 119
while buildExpression 119
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 119 next token value = 'options'
buildExpression 120
while buildExpression 120
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 71
)
while buildExpression 120
]
testing leave from buildExpression 120
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 120 next token value =  
NEW ==== testing leave from buildExpression AT END 120
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 120
]
NEW ==== bye bye from buildExpression AT END 120
while buildExpression 119
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 119 next token value =  
NEW ==== testing leave from buildExpression AT END 119
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 119
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 71
)
while buildExpression 119
=
testing leave from buildExpression 119
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 119
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
PREVIOUS in buildExpression 119
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
LEAVING case T_VARIABLE 118
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 71
)
while buildExpression 118
=
while buildExpression 118
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 71
)
while buildExpression 118
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 71
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 71
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 72
)
buildExpression 121
while buildExpression 121
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 72
)
while buildExpression 121
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 72
)
while buildExpression 121
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 72
)
testing leave from buildExpression 121
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 121
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 72
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 121
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 72
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 72
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'checkboxes'
    [2] => 72
)
buildExpression 122
while buildExpression 122
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'checkboxes'
    [2] => 72
)
while buildExpression 122
,
testing leave from buildExpression 122
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 122
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'checkboxes'
        )

)
PREVIOUS in buildExpression 122
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 72
)
while buildArray
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //'#title' => 'Отметьте возможности Вашего эвакуатора',

    [2] => 73
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
    [2] => 74
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#options'
    [2] => 74
)
buildExpression 123
while buildExpression 123
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#options'
    [2] => 74
)
while buildExpression 123
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 74
)
while buildExpression 123
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 74
)
testing leave from buildExpression 123
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 123
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 74
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#options'
        )

)
PREVIOUS in buildExpression 123
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 74
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 74
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 74
)
buildExpression 124
while buildExpression 124
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 74
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 74
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 75
)
buildExpression 125
while buildExpression 125
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 75
)
while buildExpression 125
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 75
)
while buildExpression 125
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 75
)
testing leave from buildExpression 125
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 125
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 75
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1'
        )

)
PREVIOUS in buildExpression 125
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 75
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 75
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'сдвижная платформа'
    [2] => 75
)
buildExpression 126
while buildExpression 126
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'сдвижная платформа'
    [2] => 75
)
while buildExpression 126
,
testing leave from buildExpression 126
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 126
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'сдвижная платформа'
        )

)
PREVIOUS in buildExpression 126
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 75
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 76
)
buildExpression 127
while buildExpression 127
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 76
)
while buildExpression 127
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 76
)
while buildExpression 127
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 76
)
testing leave from buildExpression 127
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 127
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 76
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2'
        )

)
PREVIOUS in buildExpression 127
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 76
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 76
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'лебедка'
    [2] => 76
)
buildExpression 128
while buildExpression 128
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'лебедка'
    [2] => 76
)
while buildExpression 128
,
testing leave from buildExpression 128
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 128
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'лебедка'
        )

)
PREVIOUS in buildExpression 128
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 76
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 77
)
buildExpression 129
while buildExpression 129
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 77
)
while buildExpression 129
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 77
)
while buildExpression 129
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 77
)
testing leave from buildExpression 129
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 129
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 77
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3'
        )

)
PREVIOUS in buildExpression 129
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 77
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 77
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'кран-манипулятор'
    [2] => 77
)
buildExpression 130
while buildExpression 130
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'кран-манипулятор'
    [2] => 77
)
while buildExpression 130
,
testing leave from buildExpression 130
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 130
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'кран-манипулятор'
        )

)
PREVIOUS in buildExpression 130
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 77
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 78
)
buildExpression 131
while buildExpression 131
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 78
)
while buildExpression 131
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 78
)
while buildExpression 131
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 78
)
testing leave from buildExpression 131
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 131
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 78
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4'
        )

)
PREVIOUS in buildExpression 131
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 78
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 78
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'грузовой'
    [2] => 78
)
buildExpression 132
while buildExpression 132
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'грузовой'
    [2] => 78
)
while buildExpression 132
,
testing leave from buildExpression 132
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 132
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'грузовой'
        )

)
PREVIOUS in buildExpression 132
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 78
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 124
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 124
,
testing leave from buildExpression 124
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 124
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'сдвижная платформа'
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'лебедка'
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'кран-манипулятор'
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'грузовой'
                                )

                        )

                    [whitespace] => 
            
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 124
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 79
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 80
)
buildExpression 133
while buildExpression 133
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 80
)
while buildExpression 133
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 80
)
while buildExpression 133
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 80
)
testing leave from buildExpression 133
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 133
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 80
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 133
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 80
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 80
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $options
    [2] => 80
)
buildExpression 134
while buildExpression 134
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $options
    [2] => 80
)
buildExpression 135
while buildExpression 135
,
testing leave from buildExpression 135
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 135
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $options
)
PREVIOUS in buildExpression 135
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $options
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $options
)
LEAVING case T_VARIABLE 134
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $options
    [2] => 80
)
while buildExpression 134
,
testing leave from buildExpression 134
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 134
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $options
        )

)
PREVIOUS in buildExpression 134
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 80
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 3, 3, ''
NEW ==== testing leave from buildExpression AT END 118
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 118
;
testing leave from buildExpression 118
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 118
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 3
            [commaCount] => 3
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'checkboxes'
                                )

                        )

                    [whitespace] => 
        
                    [comment] => Array
                        (
                            [type] => 366 (T_COMMENT)
                            [value] => //'#title' => 'Отметьте возможности Вашего эвакуатора',
                            [append] => 0
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#options'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 1
                                    [preserve] => 1
                                    [count] => 4
                                    [commaCount] => 4
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '1'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'сдвижная платформа'
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '2'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'лебедка'
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'кран-манипулятор'
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'грузовой'
                                                        )

                                                )

                                            [whitespace] => 
            
                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $options
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 118
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 81
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 83
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 83
)
buildExpression 136
while buildExpression 136
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 83
)
buildExpression 137
while buildExpression 137
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 137 next token value = 'price'
buildExpression 138
while buildExpression 138
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price'
    [2] => 83
)
while buildExpression 138
]
testing leave from buildExpression 138
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 138 next token value =  
NEW ==== testing leave from buildExpression AT END 138
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 138
]
NEW ==== bye bye from buildExpression AT END 138
while buildExpression 137
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 137 next token value =  
NEW ==== testing leave from buildExpression AT END 137
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 137
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 83
)
while buildExpression 137
=
testing leave from buildExpression 137
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 137
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
PREVIOUS in buildExpression 137
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
LEAVING case T_VARIABLE 136
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 83
)
while buildExpression 136
=
while buildExpression 136
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 83
)
while buildExpression 136
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 83
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 83
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 84
)
buildExpression 139
while buildExpression 139
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 84
)
while buildExpression 139
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 84
)
while buildExpression 139
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 84
)
testing leave from buildExpression 139
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 139
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 84
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 139
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 84
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 84
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 84
)
buildExpression 140
while buildExpression 140
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 84
)
while buildExpression 140
,
testing leave from buildExpression 140
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 140
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 140
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 84
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 85
)
buildExpression 141
while buildExpression 141
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 85
)
while buildExpression 141
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 85
)
while buildExpression 141
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 85
)
testing leave from buildExpression 141
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 141
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 85
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 141
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 85
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 85
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 85
)
buildExpression 142
while buildExpression 142
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 85
)
while buildExpression 142
,
testing leave from buildExpression 142
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 142
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 142
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 85
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 86
)
buildExpression 143
while buildExpression 143
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 86
)
while buildExpression 143
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 86
)
while buildExpression 143
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 86
)
testing leave from buildExpression 143
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 143
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 86
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 143
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 86
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 86
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 86
)
buildExpression 144
while buildExpression 144
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 86
)
while buildExpression 144
,
testing leave from buildExpression 144
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 144
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 144
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 86
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 87
)
buildExpression 145
while buildExpression 145
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 87
)
while buildExpression 145
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 87
)
while buildExpression 145
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 87
)
testing leave from buildExpression 145
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 145
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 87
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 145
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 87
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 87
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 87
)
buildExpression 146
while buildExpression 146
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 87
)
buildExpression 147
while buildExpression 147
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 147 next token value = 'values'
buildExpression 148
while buildExpression 148
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 87
)
while buildExpression 148
]
testing leave from buildExpression 148
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 148 next token value = [
NEW ==== testing leave from buildExpression AT END 148
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 148
]
NEW ==== bye bye from buildExpression AT END 148
while buildExpression 147
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 147 next token value = [
NEW ==== testing leave from buildExpression AT END 147
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 147
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 147 next token value = 'price'
buildExpression 149
while buildExpression 149
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price'
    [2] => 87
)
while buildExpression 149
]
testing leave from buildExpression 149
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 149 next token value = ,
NEW ==== testing leave from buildExpression AT END 149
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 149
]
NEW ==== bye bye from buildExpression AT END 149
while buildExpression 147
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 147 next token value = ,
NEW ==== testing leave from buildExpression AT END 147
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 147
,
testing leave from buildExpression 147
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 147
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
PREVIOUS in buildExpression 147
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
LEAVING case T_VARIABLE 146
]
NEW ==== testing leave from buildExpression AT END 146
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 146
,
testing leave from buildExpression 146
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 146
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price'
                        )

                )

        )

)
PREVIOUS in buildExpression 146
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 87
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 136
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 136
;
testing leave from buildExpression 136
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 136
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 136
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 88
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 89
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 89
)
buildExpression 150
while buildExpression 150
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 89
)
buildExpression 151
while buildExpression 151
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 151 next token value = 'price1'
buildExpression 152
while buildExpression 152
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price1'
    [2] => 89
)
while buildExpression 152
]
testing leave from buildExpression 152
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 152 next token value =  
NEW ==== testing leave from buildExpression AT END 152
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 152
]
NEW ==== bye bye from buildExpression AT END 152
while buildExpression 151
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 151 next token value =  
NEW ==== testing leave from buildExpression AT END 151
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 151
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 89
)
while buildExpression 151
=
testing leave from buildExpression 151
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 151
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
PREVIOUS in buildExpression 151
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
LEAVING case T_VARIABLE 150
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 89
)
while buildExpression 150
=
while buildExpression 150
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 89
)
while buildExpression 150
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 89
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 89
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 90
)
buildExpression 153
while buildExpression 153
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 90
)
while buildExpression 153
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 90
)
while buildExpression 153
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 90
)
testing leave from buildExpression 153
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 153
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 90
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 153
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 90
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 90
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 90
)
buildExpression 154
while buildExpression 154
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 90
)
while buildExpression 154
,
testing leave from buildExpression 154
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 154
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 154
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 90
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 91
)
buildExpression 155
while buildExpression 155
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 91
)
while buildExpression 155
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 91
)
while buildExpression 155
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 91
)
testing leave from buildExpression 155
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 155
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 91
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 155
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 91
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 91
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 91
)
buildExpression 156
while buildExpression 156
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 91
)
while buildExpression 156
,
testing leave from buildExpression 156
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 156
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 156
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 91
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 92
)
buildExpression 157
while buildExpression 157
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 92
)
while buildExpression 157
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 92
)
while buildExpression 157
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 92
)
testing leave from buildExpression 157
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 157
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 92
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 157
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 92
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 92
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 92
)
buildExpression 158
while buildExpression 158
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 92
)
while buildExpression 158
,
testing leave from buildExpression 158
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 158
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 158
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 92
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 93
)
buildExpression 159
while buildExpression 159
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 93
)
while buildExpression 159
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 93
)
while buildExpression 159
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 93
)
testing leave from buildExpression 159
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 159
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 93
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 159
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 93
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 93
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 93
)
buildExpression 160
while buildExpression 160
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 93
)
buildExpression 161
while buildExpression 161
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 161 next token value = 'values'
buildExpression 162
while buildExpression 162
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 93
)
while buildExpression 162
]
testing leave from buildExpression 162
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 162 next token value = [
NEW ==== testing leave from buildExpression AT END 162
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 162
]
NEW ==== bye bye from buildExpression AT END 162
while buildExpression 161
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 161 next token value = [
NEW ==== testing leave from buildExpression AT END 161
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 161
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 161 next token value = 'price1'
buildExpression 163
while buildExpression 163
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price1'
    [2] => 93
)
while buildExpression 163
]
testing leave from buildExpression 163
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 163 next token value = ,
NEW ==== testing leave from buildExpression AT END 163
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 163
]
NEW ==== bye bye from buildExpression AT END 163
while buildExpression 161
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 161 next token value = ,
NEW ==== testing leave from buildExpression AT END 161
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 161
,
testing leave from buildExpression 161
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 161
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
PREVIOUS in buildExpression 161
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
LEAVING case T_VARIABLE 160
]
NEW ==== testing leave from buildExpression AT END 160
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 160
,
testing leave from buildExpression 160
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 160
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price1'
                        )

                )

        )

)
PREVIOUS in buildExpression 160
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 93
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 150
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 150
;
testing leave from buildExpression 150
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 150
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price1'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 150
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 94
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 96
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 96
)
buildExpression 164
while buildExpression 164
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 96
)
buildExpression 165
while buildExpression 165
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 165 next token value = 'price2'
buildExpression 166
while buildExpression 166
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price2'
    [2] => 96
)
while buildExpression 166
]
testing leave from buildExpression 166
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 166 next token value =  
NEW ==== testing leave from buildExpression AT END 166
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 166
]
NEW ==== bye bye from buildExpression AT END 166
while buildExpression 165
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 165 next token value =  
NEW ==== testing leave from buildExpression AT END 165
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 165
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 96
)
while buildExpression 165
=
testing leave from buildExpression 165
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 165
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
PREVIOUS in buildExpression 165
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
LEAVING case T_VARIABLE 164
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 96
)
while buildExpression 164
=
while buildExpression 164
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 96
)
while buildExpression 164
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 96
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 96
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 97
)
buildExpression 167
while buildExpression 167
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 97
)
while buildExpression 167
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 97
)
while buildExpression 167
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 97
)
testing leave from buildExpression 167
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 167
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 97
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 167
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 97
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 97
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 97
)
buildExpression 168
while buildExpression 168
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 97
)
while buildExpression 168
,
testing leave from buildExpression 168
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 168
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 168
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 97
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 98
)
buildExpression 169
while buildExpression 169
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 98
)
while buildExpression 169
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 98
)
while buildExpression 169
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 98
)
testing leave from buildExpression 169
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 169
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 98
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 169
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 98
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 98
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 98
)
buildExpression 170
while buildExpression 170
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 98
)
while buildExpression 170
,
testing leave from buildExpression 170
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 170
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 170
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 98
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 99
)
buildExpression 171
while buildExpression 171
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 99
)
while buildExpression 171
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 99
)
while buildExpression 171
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 99
)
testing leave from buildExpression 171
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 171
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 99
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 171
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 99
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 99
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 99
)
buildExpression 172
while buildExpression 172
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 99
)
while buildExpression 172
,
testing leave from buildExpression 172
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 172
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 172
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 99
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 100
)
buildExpression 173
while buildExpression 173
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 100
)
while buildExpression 173
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 100
)
while buildExpression 173
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 100
)
testing leave from buildExpression 173
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 173
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 100
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 173
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 100
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 100
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 100
)
buildExpression 174
while buildExpression 174
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 100
)
buildExpression 175
while buildExpression 175
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 175 next token value = 'values'
buildExpression 176
while buildExpression 176
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 100
)
while buildExpression 176
]
testing leave from buildExpression 176
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 176 next token value = [
NEW ==== testing leave from buildExpression AT END 176
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 176
]
NEW ==== bye bye from buildExpression AT END 176
while buildExpression 175
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 175 next token value = [
NEW ==== testing leave from buildExpression AT END 175
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 175
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 175 next token value = 'price2'
buildExpression 177
while buildExpression 177
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price2'
    [2] => 100
)
while buildExpression 177
]
testing leave from buildExpression 177
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 177 next token value = ,
NEW ==== testing leave from buildExpression AT END 177
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 177
]
NEW ==== bye bye from buildExpression AT END 177
while buildExpression 175
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 175 next token value = ,
NEW ==== testing leave from buildExpression AT END 175
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 175
,
testing leave from buildExpression 175
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 175
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
PREVIOUS in buildExpression 175
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
LEAVING case T_VARIABLE 174
]
NEW ==== testing leave from buildExpression AT END 174
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 174
,
testing leave from buildExpression 174
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 174
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price2'
                        )

                )

        )

)
PREVIOUS in buildExpression 174
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 100
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 164
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 164
;
testing leave from buildExpression 164
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 164
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price2'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 164
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 101
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 103
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 103
)
buildExpression 178
while buildExpression 178
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 103
)
buildExpression 179
while buildExpression 179
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 179 next token value = 'price3'
buildExpression 180
while buildExpression 180
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price3'
    [2] => 103
)
while buildExpression 180
]
testing leave from buildExpression 180
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 180 next token value =  
NEW ==== testing leave from buildExpression AT END 180
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 180
]
NEW ==== bye bye from buildExpression AT END 180
while buildExpression 179
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 179 next token value =  
NEW ==== testing leave from buildExpression AT END 179
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 179
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 103
)
while buildExpression 179
=
testing leave from buildExpression 179
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 179
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
PREVIOUS in buildExpression 179
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
LEAVING case T_VARIABLE 178
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 103
)
while buildExpression 178
=
while buildExpression 178
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 103
)
while buildExpression 178
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 103
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 103
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 104
)
buildExpression 181
while buildExpression 181
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 104
)
while buildExpression 181
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 104
)
while buildExpression 181
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 104
)
testing leave from buildExpression 181
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 181
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 104
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 181
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 104
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 104
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 104
)
buildExpression 182
while buildExpression 182
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 104
)
while buildExpression 182
,
testing leave from buildExpression 182
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 182
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 182
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 104
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 105
)
buildExpression 183
while buildExpression 183
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 105
)
while buildExpression 183
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 105
)
while buildExpression 183
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 105
)
testing leave from buildExpression 183
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 183
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 105
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 183
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 105
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 105
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 105
)
buildExpression 184
while buildExpression 184
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 105
)
while buildExpression 184
,
testing leave from buildExpression 184
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 184
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 184
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 105
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 106
)
buildExpression 185
while buildExpression 185
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 106
)
while buildExpression 185
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 106
)
while buildExpression 185
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 106
)
testing leave from buildExpression 185
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 185
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 106
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 185
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 106
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 106
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 106
)
buildExpression 186
while buildExpression 186
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 106
)
while buildExpression 186
,
testing leave from buildExpression 186
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 186
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 186
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 106
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 107
)
buildExpression 187
while buildExpression 187
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 107
)
while buildExpression 187
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 107
)
while buildExpression 187
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 107
)
testing leave from buildExpression 187
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 187
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 107
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 187
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 107
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 107
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 107
)
buildExpression 188
while buildExpression 188
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 107
)
buildExpression 189
while buildExpression 189
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 189 next token value = 'values'
buildExpression 190
while buildExpression 190
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 107
)
while buildExpression 190
]
testing leave from buildExpression 190
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 190 next token value = [
NEW ==== testing leave from buildExpression AT END 190
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 190
]
NEW ==== bye bye from buildExpression AT END 190
while buildExpression 189
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 189 next token value = [
NEW ==== testing leave from buildExpression AT END 189
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 189
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 189 next token value = 'price3'
buildExpression 191
while buildExpression 191
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price3'
    [2] => 107
)
while buildExpression 191
]
testing leave from buildExpression 191
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 191 next token value = ,
NEW ==== testing leave from buildExpression AT END 191
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 191
]
NEW ==== bye bye from buildExpression AT END 191
while buildExpression 189
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 189 next token value = ,
NEW ==== testing leave from buildExpression AT END 189
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 189
,
testing leave from buildExpression 189
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 189
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
PREVIOUS in buildExpression 189
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
LEAVING case T_VARIABLE 188
]
NEW ==== testing leave from buildExpression AT END 188
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 188
,
testing leave from buildExpression 188
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 188
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price3'
                        )

                )

        )

)
PREVIOUS in buildExpression 188
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 107
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 178
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 178
;
testing leave from buildExpression 178
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 178
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price3'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 178
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 108
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 110
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 110
)
buildExpression 192
while buildExpression 192
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 110
)
buildExpression 193
while buildExpression 193
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 193 next token value = 'price4'
buildExpression 194
while buildExpression 194
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price4'
    [2] => 110
)
while buildExpression 194
]
testing leave from buildExpression 194
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 194 next token value =  
NEW ==== testing leave from buildExpression AT END 194
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 194
]
NEW ==== bye bye from buildExpression AT END 194
while buildExpression 193
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 193 next token value =  
NEW ==== testing leave from buildExpression AT END 193
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 193
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 110
)
while buildExpression 193
=
testing leave from buildExpression 193
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 193
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
PREVIOUS in buildExpression 193
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
LEAVING case T_VARIABLE 192
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 110
)
while buildExpression 192
=
while buildExpression 192
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 110
)
while buildExpression 192
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 110
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 110
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 111
)
buildExpression 195
while buildExpression 195
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 111
)
while buildExpression 195
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 111
)
while buildExpression 195
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 111
)
testing leave from buildExpression 195
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 195
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 111
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 195
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 111
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 111
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 111
)
buildExpression 196
while buildExpression 196
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 111
)
while buildExpression 196
,
testing leave from buildExpression 196
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 196
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 196
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 111
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 112
)
buildExpression 197
while buildExpression 197
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 112
)
while buildExpression 197
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 112
)
while buildExpression 197
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 112
)
testing leave from buildExpression 197
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 197
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 112
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 197
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 112
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 112
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 112
)
buildExpression 198
while buildExpression 198
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 112
)
while buildExpression 198
,
testing leave from buildExpression 198
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 198
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 198
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 112
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 113
)
buildExpression 199
while buildExpression 199
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 113
)
while buildExpression 199
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 113
)
while buildExpression 199
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 113
)
testing leave from buildExpression 199
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 199
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 113
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 199
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 113
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 113
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 113
)
buildExpression 200
while buildExpression 200
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 113
)
while buildExpression 200
,
testing leave from buildExpression 200
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 200
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 200
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 113
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 114
)
buildExpression 201
while buildExpression 201
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 114
)
while buildExpression 201
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 114
)
while buildExpression 201
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 114
)
testing leave from buildExpression 201
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 201
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 114
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 201
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 114
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 114
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 114
)
buildExpression 202
while buildExpression 202
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 114
)
buildExpression 203
while buildExpression 203
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 203 next token value = 'values'
buildExpression 204
while buildExpression 204
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 114
)
while buildExpression 204
]
testing leave from buildExpression 204
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 204 next token value = [
NEW ==== testing leave from buildExpression AT END 204
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 204
]
NEW ==== bye bye from buildExpression AT END 204
while buildExpression 203
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 203 next token value = [
NEW ==== testing leave from buildExpression AT END 203
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 203
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 203 next token value = 'price4'
buildExpression 205
while buildExpression 205
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price4'
    [2] => 114
)
while buildExpression 205
]
testing leave from buildExpression 205
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 205 next token value = ,
NEW ==== testing leave from buildExpression AT END 205
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 205
]
NEW ==== bye bye from buildExpression AT END 205
while buildExpression 203
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 203 next token value = ,
NEW ==== testing leave from buildExpression AT END 203
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 203
,
testing leave from buildExpression 203
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 203
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
PREVIOUS in buildExpression 203
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
LEAVING case T_VARIABLE 202
]
NEW ==== testing leave from buildExpression AT END 202
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 202
,
testing leave from buildExpression 202
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 202
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price4'
                        )

                )

        )

)
PREVIOUS in buildExpression 202
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 114
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 192
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 192
;
testing leave from buildExpression 192
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 192
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price4'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price4'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 192
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 115
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 117
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 117
)
buildExpression 206
while buildExpression 206
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 117
)
buildExpression 207
while buildExpression 207
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 207 next token value = 'price5'
buildExpression 208
while buildExpression 208
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price5'
    [2] => 117
)
while buildExpression 208
]
testing leave from buildExpression 208
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 208 next token value =  
NEW ==== testing leave from buildExpression AT END 208
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 208
]
NEW ==== bye bye from buildExpression AT END 208
while buildExpression 207
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 207 next token value =  
NEW ==== testing leave from buildExpression AT END 207
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 207
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 117
)
while buildExpression 207
=
testing leave from buildExpression 207
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 207
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
PREVIOUS in buildExpression 207
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
LEAVING case T_VARIABLE 206
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 117
)
while buildExpression 206
=
while buildExpression 206
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 117
)
while buildExpression 206
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 117
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 117
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 118
)
buildExpression 209
while buildExpression 209
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 118
)
while buildExpression 209
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 118
)
while buildExpression 209
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 118
)
testing leave from buildExpression 209
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 209
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 118
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 209
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 118
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 118
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 118
)
buildExpression 210
while buildExpression 210
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 118
)
while buildExpression 210
,
testing leave from buildExpression 210
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 210
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 210
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 118
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 119
)
buildExpression 211
while buildExpression 211
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 119
)
while buildExpression 211
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 119
)
while buildExpression 211
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 119
)
testing leave from buildExpression 211
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 211
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 119
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 211
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 119
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 119
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 119
)
buildExpression 212
while buildExpression 212
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 119
)
while buildExpression 212
,
testing leave from buildExpression 212
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 212
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 212
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 119
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 120
)
buildExpression 213
while buildExpression 213
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 120
)
while buildExpression 213
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 120
)
while buildExpression 213
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 120
)
testing leave from buildExpression 213
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 213
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 120
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 213
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 120
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 120
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 120
)
buildExpression 214
while buildExpression 214
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 120
)
while buildExpression 214
,
testing leave from buildExpression 214
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 214
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 214
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 120
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 121
)
buildExpression 215
while buildExpression 215
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 121
)
while buildExpression 215
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 121
)
while buildExpression 215
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 121
)
testing leave from buildExpression 215
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 215
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 121
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 215
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 121
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 121
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 121
)
buildExpression 216
while buildExpression 216
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 121
)
buildExpression 217
while buildExpression 217
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 217 next token value = 'values'
buildExpression 218
while buildExpression 218
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 121
)
while buildExpression 218
]
testing leave from buildExpression 218
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 218 next token value = [
NEW ==== testing leave from buildExpression AT END 218
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 218
]
NEW ==== bye bye from buildExpression AT END 218
while buildExpression 217
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 217 next token value = [
NEW ==== testing leave from buildExpression AT END 217
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 217
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 217 next token value = 'price5'
buildExpression 219
while buildExpression 219
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price5'
    [2] => 121
)
while buildExpression 219
]
testing leave from buildExpression 219
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 219 next token value = ,
NEW ==== testing leave from buildExpression AT END 219
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 219
]
NEW ==== bye bye from buildExpression AT END 219
while buildExpression 217
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 217 next token value = ,
NEW ==== testing leave from buildExpression AT END 217
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 217
,
testing leave from buildExpression 217
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 217
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
PREVIOUS in buildExpression 217
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
LEAVING case T_VARIABLE 216
]
NEW ==== testing leave from buildExpression AT END 216
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 216
,
testing leave from buildExpression 216
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 216
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price5'
                        )

                )

        )

)
PREVIOUS in buildExpression 216
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 121
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 206
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 206
;
testing leave from buildExpression 206
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 206
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price5'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price5'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 206
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 122
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 124
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 124
)
buildExpression 220
while buildExpression 220
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 124
)
buildExpression 221
while buildExpression 221
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 221 next token value = 'price6'
buildExpression 222
while buildExpression 222
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price6'
    [2] => 124
)
while buildExpression 222
]
testing leave from buildExpression 222
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 222 next token value =  
NEW ==== testing leave from buildExpression AT END 222
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 222
]
NEW ==== bye bye from buildExpression AT END 222
while buildExpression 221
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 221 next token value =  
NEW ==== testing leave from buildExpression AT END 221
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 221
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 124
)
while buildExpression 221
=
testing leave from buildExpression 221
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 221
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
PREVIOUS in buildExpression 221
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
LEAVING case T_VARIABLE 220
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 124
)
while buildExpression 220
=
while buildExpression 220
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 124
)
while buildExpression 220
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 124
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 124
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 125
)
buildExpression 223
while buildExpression 223
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 125
)
while buildExpression 223
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 125
)
while buildExpression 223
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 125
)
testing leave from buildExpression 223
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 223
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 125
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 223
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 125
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 125
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 125
)
buildExpression 224
while buildExpression 224
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 125
)
while buildExpression 224
,
testing leave from buildExpression 224
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 224
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 224
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 125
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 126
)
buildExpression 225
while buildExpression 225
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 126
)
while buildExpression 225
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 126
)
while buildExpression 225
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 126
)
testing leave from buildExpression 225
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 225
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 126
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 225
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 126
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 126
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 126
)
buildExpression 226
while buildExpression 226
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 126
)
while buildExpression 226
,
testing leave from buildExpression 226
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 226
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 226
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 126
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 127
)
buildExpression 227
while buildExpression 227
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 127
)
while buildExpression 227
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 127
)
while buildExpression 227
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 127
)
testing leave from buildExpression 227
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 227
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 127
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 227
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 127
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 127
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 127
)
buildExpression 228
while buildExpression 228
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 127
)
while buildExpression 228
,
testing leave from buildExpression 228
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 228
,
PGPExpression
(
    [operand] => 4
)
PREVIOUS in buildExpression 228
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 127
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 128
)
buildExpression 229
while buildExpression 229
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 128
)
while buildExpression 229
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 128
)
while buildExpression 229
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 128
)
testing leave from buildExpression 229
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 229
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 128
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 229
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 128
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 128
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 128
)
buildExpression 230
while buildExpression 230
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 128
)
buildExpression 231
while buildExpression 231
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 231 next token value = 'values'
buildExpression 232
while buildExpression 232
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 128
)
while buildExpression 232
]
testing leave from buildExpression 232
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 232 next token value = [
NEW ==== testing leave from buildExpression AT END 232
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 232
]
NEW ==== bye bye from buildExpression AT END 232
while buildExpression 231
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 231 next token value = [
NEW ==== testing leave from buildExpression AT END 231
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 231
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 231 next token value = 'price6'
buildExpression 233
while buildExpression 233
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price6'
    [2] => 128
)
while buildExpression 233
]
testing leave from buildExpression 233
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 233 next token value = ,
NEW ==== testing leave from buildExpression AT END 233
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 233
]
NEW ==== bye bye from buildExpression AT END 233
while buildExpression 231
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 231 next token value = ,
NEW ==== testing leave from buildExpression AT END 231
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 231
,
testing leave from buildExpression 231
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 231
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
PREVIOUS in buildExpression 231
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
LEAVING case T_VARIABLE 230
]
NEW ==== testing leave from buildExpression AT END 230
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 230
,
testing leave from buildExpression 230
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 230
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price6'
                        )

                )

        )

)
PREVIOUS in buildExpression 230
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 128
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 220
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 220
;
testing leave from buildExpression 220
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 220
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price6'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 4
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price6'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 220
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
   
    [2] => 129
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $discount
    [2] => 130
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $discount
    [2] => 130
)
buildExpression 234
while buildExpression 234
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $discount
    [2] => 130
)
buildExpression 235
while buildExpression 235
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 235
=
testing leave from buildExpression 235
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 235
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $discount
)
PREVIOUS in buildExpression 235
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $discount
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $discount
)
LEAVING case T_VARIABLE 234
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 234
=
while buildExpression 234
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 234
(
while buildExpression 234
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 130
)
buildExpression 236
while buildExpression 236
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 236 next token value = 'values'
buildExpression 237
while buildExpression 237
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 130
)
while buildExpression 237
]
testing leave from buildExpression 237
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 237 next token value = [
NEW ==== testing leave from buildExpression AT END 237
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 237
]
NEW ==== bye bye from buildExpression AT END 237
while buildExpression 236
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 236 next token value = [
NEW ==== testing leave from buildExpression AT END 236
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 236
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 236 next token value = 'discount'
buildExpression 238
while buildExpression 238
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'discount'
    [2] => 130
)
while buildExpression 238
]
testing leave from buildExpression 238
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 238 next token value = )
NEW ==== testing leave from buildExpression AT END 238
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 238
]
NEW ==== bye bye from buildExpression AT END 238
while buildExpression 236
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 236 next token value = )
NEW ==== testing leave from buildExpression AT END 236
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 236
)
HITTING RPARENS 236
NEW ==== testing leave from buildExpression AT END 236
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 236
)
NEW ==== bye bye from buildExpression AT END 236
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
LEAVING case T_VARIABLE 234
]
NEW ==== testing leave from buildExpression AT END 234
lparens = 1 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 234
)
HITTING RPARENS 234
NEW ==== testing leave from buildExpression AT END 234
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 234
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 234
?
while buildExpression 234
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 234
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 130
)
buildExpression 239
while buildExpression 239
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 239 next token value = 'values'
buildExpression 240
while buildExpression 240
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 130
)
while buildExpression 240
]
testing leave from buildExpression 240
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 240 next token value = [
NEW ==== testing leave from buildExpression AT END 240
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 240
]
NEW ==== bye bye from buildExpression AT END 240
while buildExpression 239
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 239 next token value = [
NEW ==== testing leave from buildExpression AT END 239
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 239
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 239 next token value = 'discount'
buildExpression 241
while buildExpression 241
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'discount'
    [2] => 130
)
while buildExpression 241
]
testing leave from buildExpression 241
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 241 next token value =  
NEW ==== testing leave from buildExpression AT END 241
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 241
]
NEW ==== bye bye from buildExpression AT END 241
while buildExpression 239
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 239 next token value =  
NEW ==== testing leave from buildExpression AT END 239
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 239
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 239
:
testing leave from buildExpression 239
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 239
:
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
PREVIOUS in buildExpression 239
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
LEAVING case T_VARIABLE 234
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 234
:
while buildExpression 234
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 130
)
while buildExpression 234
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 5
    [2] => 130
)
while buildExpression 234
;
testing leave from buildExpression 234
lparens = 1 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 234
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $discount
        )

    [assign] => =
    [lparens] => (
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'discount'
                        )

                )

        )

    [rparens] => )
    [operator] => ?
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'discount'
                        )

                )

        )

    [operator] => :
    [operand] => 5
)
PREVIOUS in buildExpression 234
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 130
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 131
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 131
)
buildExpression 242
while buildExpression 242
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 131
)
buildExpression 243
while buildExpression 243
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 243 next token value = 'discount'
buildExpression 244
while buildExpression 244
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'discount'
    [2] => 131
)
while buildExpression 244
]
testing leave from buildExpression 244
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 244 next token value =  
NEW ==== testing leave from buildExpression AT END 244
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 244
]
NEW ==== bye bye from buildExpression AT END 244
while buildExpression 243
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 243 next token value =  
NEW ==== testing leave from buildExpression AT END 243
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 243
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 131
)
while buildExpression 243
=
testing leave from buildExpression 243
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 243
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
PREVIOUS in buildExpression 243
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
LEAVING case T_VARIABLE 242
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 131
)
while buildExpression 242
=
while buildExpression 242
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 131
)
while buildExpression 242
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 131
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 131
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 132
)
buildExpression 245
while buildExpression 245
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 132
)
while buildExpression 245
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 132
)
while buildExpression 245
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 132
)
testing leave from buildExpression 245
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 245
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 132
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 245
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 132
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 132
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'select'
    [2] => 132
)
buildExpression 246
while buildExpression 246
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'select'
    [2] => 132
)
while buildExpression 246
,
testing leave from buildExpression 246
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 246
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'select'
        )

)
PREVIOUS in buildExpression 246
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 132
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#options'
    [2] => 133
)
buildExpression 247
while buildExpression 247
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#options'
    [2] => 133
)
while buildExpression 247
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 133
)
while buildExpression 247
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 133
)
testing leave from buildExpression 247
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 247
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 133
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#options'
        )

)
PREVIOUS in buildExpression 247
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 133
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 133
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 133
)
buildExpression 248
while buildExpression 248
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 133
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 133
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 134
)
buildExpression 249
while buildExpression 249
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 134
)
while buildExpression 249
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 134
)
while buildExpression 249
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 134
)
testing leave from buildExpression 249
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 249
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 134
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '0'
        )

)
PREVIOUS in buildExpression 249
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 134
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 134
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 134
)
buildExpression 250
while buildExpression 250
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 134
)
while buildExpression 250
,
testing leave from buildExpression 250
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 250
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '0'
        )

)
PREVIOUS in buildExpression 250
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 134
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 135
)
buildExpression 251
while buildExpression 251
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 135
)
while buildExpression 251
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 135
)
while buildExpression 251
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 135
)
testing leave from buildExpression 251
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 251
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 135
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3'
        )

)
PREVIOUS in buildExpression 251
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 135
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 135
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 135
)
buildExpression 252
while buildExpression 252
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 135
)
while buildExpression 252
,
testing leave from buildExpression 252
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 252
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3'
        )

)
PREVIOUS in buildExpression 252
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 135
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 136
)
buildExpression 253
while buildExpression 253
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 136
)
while buildExpression 253
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 136
)
while buildExpression 253
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 136
)
testing leave from buildExpression 253
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 253
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 136
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4'
        )

)
PREVIOUS in buildExpression 253
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 136
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 136
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 136
)
buildExpression 254
while buildExpression 254
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 136
)
while buildExpression 254
,
testing leave from buildExpression 254
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 254
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '4'
        )

)
PREVIOUS in buildExpression 254
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 136
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 137
)
buildExpression 255
while buildExpression 255
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 137
)
while buildExpression 255
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 137
)
while buildExpression 255
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 137
)
testing leave from buildExpression 255
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 255
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 137
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '5'
        )

)
PREVIOUS in buildExpression 255
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 137
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 137
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 137
)
buildExpression 256
while buildExpression 256
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '5'
    [2] => 137
)
while buildExpression 256
,
testing leave from buildExpression 256
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 256
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '5'
        )

)
PREVIOUS in buildExpression 256
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 137
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 138
)
buildExpression 257
while buildExpression 257
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 138
)
while buildExpression 257
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 138
)
while buildExpression 257
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 138
)
testing leave from buildExpression 257
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 257
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 138
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '6'
        )

)
PREVIOUS in buildExpression 257
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 138
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 138
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 138
)
buildExpression 258
while buildExpression 258
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '6'
    [2] => 138
)
while buildExpression 258
,
testing leave from buildExpression 258
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 258
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '6'
        )

)
PREVIOUS in buildExpression 258
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 138
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '7'
    [2] => 139
)
buildExpression 259
while buildExpression 259
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '7'
    [2] => 139
)
while buildExpression 259
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 139
)
while buildExpression 259
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 139
)
testing leave from buildExpression 259
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 259
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 139
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '7'
        )

)
PREVIOUS in buildExpression 259
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 139
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 139
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '7'
    [2] => 139
)
buildExpression 260
while buildExpression 260
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '7'
    [2] => 139
)
while buildExpression 260
,
testing leave from buildExpression 260
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 260
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '7'
        )

)
PREVIOUS in buildExpression 260
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 139
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 140
)
buildExpression 261
while buildExpression 261
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 140
)
while buildExpression 261
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 140
)
while buildExpression 261
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 140
)
testing leave from buildExpression 261
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 261
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 140
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '10'
        )

)
PREVIOUS in buildExpression 261
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 140
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 140
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 140
)
buildExpression 262
while buildExpression 262
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '10'
    [2] => 140
)
while buildExpression 262
,
testing leave from buildExpression 262
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 262
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '10'
        )

)
PREVIOUS in buildExpression 262
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 140
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '11'
    [2] => 141
)
buildExpression 263
while buildExpression 263
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '11'
    [2] => 141
)
while buildExpression 263
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 141
)
while buildExpression 263
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 141
)
testing leave from buildExpression 263
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 263
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 141
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '11'
        )

)
PREVIOUS in buildExpression 263
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 141
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 141
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '11'
    [2] => 141
)
buildExpression 264
while buildExpression 264
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '11'
    [2] => 141
)
while buildExpression 264
,
testing leave from buildExpression 264
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 264
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '11'
        )

)
PREVIOUS in buildExpression 264
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 141
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '12'
    [2] => 142
)
buildExpression 265
while buildExpression 265
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '12'
    [2] => 142
)
while buildExpression 265
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 142
)
while buildExpression 265
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 142
)
testing leave from buildExpression 265
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 265
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 142
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '12'
        )

)
PREVIOUS in buildExpression 265
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 142
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 142
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '12'
    [2] => 142
)
buildExpression 266
while buildExpression 266
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '12'
    [2] => 142
)
while buildExpression 266
,
testing leave from buildExpression 266
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 266
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '12'
        )

)
PREVIOUS in buildExpression 266
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 142
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 143
)
buildExpression 267
while buildExpression 267
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 143
)
while buildExpression 267
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 143
)
while buildExpression 267
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 143
)
testing leave from buildExpression 267
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 267
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 143
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '15'
        )

)
PREVIOUS in buildExpression 267
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 143
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 143
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 143
)
buildExpression 268
while buildExpression 268
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '15'
    [2] => 143
)
while buildExpression 268
,
testing leave from buildExpression 268
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 268
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '15'
        )

)
PREVIOUS in buildExpression 268
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 143
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '20'
    [2] => 144
)
buildExpression 269
while buildExpression 269
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '20'
    [2] => 144
)
while buildExpression 269
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 144
)
while buildExpression 269
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 144
)
testing leave from buildExpression 269
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 269
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 144
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '20'
        )

)
PREVIOUS in buildExpression 269
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 144
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 144
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '20'
    [2] => 144
)
buildExpression 270
while buildExpression 270
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '20'
    [2] => 144
)
while buildExpression 270
,
testing leave from buildExpression 270
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 270
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '20'
        )

)
PREVIOUS in buildExpression 270
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
            
    [2] => 144
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '25'
    [2] => 145
)
buildExpression 271
while buildExpression 271
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '25'
    [2] => 145
)
while buildExpression 271
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 145
)
while buildExpression 271
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 145
)
testing leave from buildExpression 271
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 271
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 145
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '25'
        )

)
PREVIOUS in buildExpression 271
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 145
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 145
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '25'
    [2] => 145
)
buildExpression 272
while buildExpression 272
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '25'
    [2] => 145
)
while buildExpression 272
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 145
)
while buildExpression 272
)
testing leave from buildExpression 272
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 272
NEW ==== testing leave from buildExpression AT END 272
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 272
)
NEW ==== bye bye from buildExpression AT END 272
inside default case return from buildExpression
ELSEIF deleteLast on ')'
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 12, 12, ''
NEW ==== testing leave from buildExpression AT END 248
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 248
,
testing leave from buildExpression 248
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 248
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 12
            [commaCount] => 11
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '0'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '0'
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '4'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '5'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '5'
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '6'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '6'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '7'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '7'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '10'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '10'
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '11'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '11'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '12'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '12'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '15'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '15'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '20'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '20'
                                )

                        )

                    [whitespace] =>  
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '25'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '25'
                                )

                        )

                    [whitespace] => 
            
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 248
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 146
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 147
)
buildExpression 273
while buildExpression 273
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 147
)
while buildExpression 273
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 147
)
while buildExpression 273
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 147
)
testing leave from buildExpression 273
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 273
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 147
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 273
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 147
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 147
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $discount
    [2] => 147
)
buildExpression 274
while buildExpression 274
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $discount
    [2] => 147
)
buildExpression 275
while buildExpression 275
,
testing leave from buildExpression 275
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 275
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $discount
)
PREVIOUS in buildExpression 275
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $discount
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $discount
)
LEAVING case T_VARIABLE 274
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $discount
    [2] => 147
)
while buildExpression 274
,
testing leave from buildExpression 274
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 274
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $discount
        )

)
PREVIOUS in buildExpression 274
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 147
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 3, 3, ''
NEW ==== testing leave from buildExpression AT END 242
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 242
;
testing leave from buildExpression 242
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 242
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'discount'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 3
            [commaCount] => 3
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'select'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#options'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 1
                                    [preserve] => 1
                                    [count] => 12
                                    [commaCount] => 11
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '0'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '0'
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '3'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '4'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '5'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '5'
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '6'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '6'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '7'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '7'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '10'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '10'
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '11'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '11'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '12'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '12'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '15'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '15'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '20'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '20'
                                                        )

                                                )

                                            [whitespace] =>  
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '25'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => '25'
                                                        )

                                                )

                                            [whitespace] => 
            
                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $discount
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 242
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 148
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 150
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 150
)
buildExpression 276
while buildExpression 276
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 150
)
buildExpression 277
while buildExpression 277
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 277 next token value = 'gps_eq'
buildExpression 278
while buildExpression 278
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'gps_eq'
    [2] => 150
)
while buildExpression 278
]
testing leave from buildExpression 278
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 278 next token value =  
NEW ==== testing leave from buildExpression AT END 278
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 278
]
NEW ==== bye bye from buildExpression AT END 278
while buildExpression 277
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 277 next token value =  
NEW ==== testing leave from buildExpression AT END 277
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 277
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 150
)
while buildExpression 277
=
testing leave from buildExpression 277
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 277
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
PREVIOUS in buildExpression 277
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
LEAVING case T_VARIABLE 276
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 150
)
while buildExpression 276
=
while buildExpression 276
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 150
)
while buildExpression 276
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 150
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 150
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 151
)
buildExpression 279
while buildExpression 279
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 151
)
while buildExpression 279
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 151
)
while buildExpression 279
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 151
)
testing leave from buildExpression 279
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 279
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 151
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 279
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 151
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 151
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 151
)
buildExpression 280
while buildExpression 280
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 151
)
while buildExpression 280
,
testing leave from buildExpression 280
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 280
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 280
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 151
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 152
)
buildExpression 281
while buildExpression 281
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 152
)
while buildExpression 281
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 152
)
while buildExpression 281
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 152
)
testing leave from buildExpression 281
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 281
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 152
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 281
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 152
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 152
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 152
)
buildExpression 282
while buildExpression 282
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 152
)
buildExpression 283
while buildExpression 283
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 283 next token value = 'values'
buildExpression 284
while buildExpression 284
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 152
)
while buildExpression 284
]
testing leave from buildExpression 284
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 284 next token value = [
NEW ==== testing leave from buildExpression AT END 284
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 284
]
NEW ==== bye bye from buildExpression AT END 284
while buildExpression 283
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 283 next token value = [
NEW ==== testing leave from buildExpression AT END 283
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 283
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 283 next token value = 'gps_eq'
buildExpression 285
while buildExpression 285
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'gps_eq'
    [2] => 152
)
while buildExpression 285
]
testing leave from buildExpression 285
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 285 next token value = ,
NEW ==== testing leave from buildExpression AT END 285
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 285
]
NEW ==== bye bye from buildExpression AT END 285
while buildExpression 283
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 283 next token value = ,
NEW ==== testing leave from buildExpression AT END 283
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 283
,
testing leave from buildExpression 283
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 283
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
PREVIOUS in buildExpression 283
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
LEAVING case T_VARIABLE 282
]
NEW ==== testing leave from buildExpression AT END 282
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 282
,
testing leave from buildExpression 282
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 282
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'gps_eq'
                        )

                )

        )

)
PREVIOUS in buildExpression 282
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 152
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 153
)
buildExpression 286
while buildExpression 286
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 153
)
while buildExpression 286
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 153
)
while buildExpression 286
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 153
)
testing leave from buildExpression 286
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 286
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 153
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 286
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 153
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 153
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 40
    [2] => 153
)
buildExpression 287
while buildExpression 287
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 40
    [2] => 153
)
while buildExpression 287
,
testing leave from buildExpression 287
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 287
,
PGPExpression
(
    [operand] => 40
)
PREVIOUS in buildExpression 287
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 153
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 154
)
buildExpression 288
while buildExpression 288
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 154
)
while buildExpression 288
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 154
)
while buildExpression 288
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 154
)
testing leave from buildExpression 288
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 288
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 154
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 288
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 154
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 154
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 40
    [2] => 154
)
buildExpression 289
while buildExpression 289
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 40
    [2] => 154
)
while buildExpression 289
,
testing leave from buildExpression 289
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 289
,
PGPExpression
(
    [operand] => 40
)
PREVIOUS in buildExpression 289
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 154
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 276
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 276
;
testing leave from buildExpression 276
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 276
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'gps_eq'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'gps_eq'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 40
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 40
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 276
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 155
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 157
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 157
)
buildExpression 290
while buildExpression 290
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 157
)
buildExpression 291
while buildExpression 291
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 291 next token value = 'e_phone_1'
buildExpression 292
while buildExpression 292
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 157
)
while buildExpression 292
]
testing leave from buildExpression 292
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 292 next token value =  
NEW ==== testing leave from buildExpression AT END 292
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 292
]
NEW ==== bye bye from buildExpression AT END 292
while buildExpression 291
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 291 next token value =  
NEW ==== testing leave from buildExpression AT END 291
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 291
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 157
)
while buildExpression 291
=
testing leave from buildExpression 291
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 291
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
PREVIOUS in buildExpression 291
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
LEAVING case T_VARIABLE 290
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 157
)
while buildExpression 290
=
while buildExpression 290
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 157
)
while buildExpression 290
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 157
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 157
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 158
)
buildExpression 293
while buildExpression 293
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 158
)
while buildExpression 293
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 158
)
while buildExpression 293
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 158
)
testing leave from buildExpression 293
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 293
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 158
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 293
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 158
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 158
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 158
)
buildExpression 294
while buildExpression 294
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 158
)
while buildExpression 294
,
testing leave from buildExpression 294
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 294
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 294
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 158
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 159
)
buildExpression 295
while buildExpression 295
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 159
)
while buildExpression 295
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 159
)
while buildExpression 295
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 159
)
testing leave from buildExpression 295
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 295
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 159
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 295
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 159
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 159
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 159
)
buildExpression 296
while buildExpression 296
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 159
)
buildExpression 297
while buildExpression 297
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 297 next token value = 'values'
buildExpression 298
while buildExpression 298
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 159
)
while buildExpression 298
]
testing leave from buildExpression 298
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 298 next token value = [
NEW ==== testing leave from buildExpression AT END 298
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 298
]
NEW ==== bye bye from buildExpression AT END 298
while buildExpression 297
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 297 next token value = [
NEW ==== testing leave from buildExpression AT END 297
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 297
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 297 next token value = 'e_phone_1'
buildExpression 299
while buildExpression 299
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 159
)
while buildExpression 299
]
testing leave from buildExpression 299
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 299 next token value = ,
NEW ==== testing leave from buildExpression AT END 299
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 299
]
NEW ==== bye bye from buildExpression AT END 299
while buildExpression 297
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 297 next token value = ,
NEW ==== testing leave from buildExpression AT END 297
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 297
,
testing leave from buildExpression 297
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 297
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
PREVIOUS in buildExpression 297
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
LEAVING case T_VARIABLE 296
]
NEW ==== testing leave from buildExpression AT END 296
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 296
,
testing leave from buildExpression 296
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 296
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_1'
                        )

                )

        )

)
PREVIOUS in buildExpression 296
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 159
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 160
)
buildExpression 300
while buildExpression 300
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 160
)
while buildExpression 300
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 160
)
while buildExpression 300
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 160
)
testing leave from buildExpression 300
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 300
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 160
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 300
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 160
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 160
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 160
)
buildExpression 301
while buildExpression 301
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 160
)
while buildExpression 301
,
testing leave from buildExpression 301
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 301
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 301
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 160
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 161
)
buildExpression 302
while buildExpression 302
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 161
)
while buildExpression 302
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 161
)
while buildExpression 302
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 161
)
testing leave from buildExpression 302
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 302
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 161
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 302
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 161
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 161
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 161
)
buildExpression 303
while buildExpression 303
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 161
)
while buildExpression 303
,
testing leave from buildExpression 303
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 303
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 303
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
      
    [2] => 161
)
while buildArray
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  '#required' => TRUE,

    [2] => 162
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 163
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 290
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 290
;
testing leave from buildExpression 290
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 290
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'e_phone_1'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
      
                    [comment] => Array
                        (
                            [type] => 366 (T_COMMENT)
                            [value] => //  '#required' => TRUE,
                            [append] => 0
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 290
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 163
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 165
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 165
)
buildExpression 304
while buildExpression 304
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 165
)
buildExpression 305
while buildExpression 305
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 305 next token value = 'e_phone_2'
buildExpression 306
while buildExpression 306
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_2'
    [2] => 165
)
while buildExpression 306
]
testing leave from buildExpression 306
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 306 next token value =  
NEW ==== testing leave from buildExpression AT END 306
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 306
]
NEW ==== bye bye from buildExpression AT END 306
while buildExpression 305
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 305 next token value =  
NEW ==== testing leave from buildExpression AT END 305
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 305
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 165
)
while buildExpression 305
=
testing leave from buildExpression 305
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 305
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
PREVIOUS in buildExpression 305
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
LEAVING case T_VARIABLE 304
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 165
)
while buildExpression 304
=
while buildExpression 304
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 165
)
while buildExpression 304
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 165
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 165
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 166
)
buildExpression 307
while buildExpression 307
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 166
)
while buildExpression 307
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 166
)
while buildExpression 307
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 166
)
testing leave from buildExpression 307
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 307
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 166
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 307
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 166
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 166
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 166
)
buildExpression 308
while buildExpression 308
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 166
)
while buildExpression 308
,
testing leave from buildExpression 308
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 308
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 308
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 166
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 167
)
buildExpression 309
while buildExpression 309
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 167
)
while buildExpression 309
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 167
)
while buildExpression 309
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 167
)
testing leave from buildExpression 309
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 309
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 167
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 309
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 167
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 167
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 167
)
buildExpression 310
while buildExpression 310
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 167
)
buildExpression 311
while buildExpression 311
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 311 next token value = 'values'
buildExpression 312
while buildExpression 312
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 167
)
while buildExpression 312
]
testing leave from buildExpression 312
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 312 next token value = [
NEW ==== testing leave from buildExpression AT END 312
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 312
]
NEW ==== bye bye from buildExpression AT END 312
while buildExpression 311
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 311 next token value = [
NEW ==== testing leave from buildExpression AT END 311
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 311
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 311 next token value = 'e_phone_2'
buildExpression 313
while buildExpression 313
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_2'
    [2] => 167
)
while buildExpression 313
]
testing leave from buildExpression 313
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 313 next token value = ,
NEW ==== testing leave from buildExpression AT END 313
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 313
]
NEW ==== bye bye from buildExpression AT END 313
while buildExpression 311
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 311 next token value = ,
NEW ==== testing leave from buildExpression AT END 311
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 311
,
testing leave from buildExpression 311
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 311
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
PREVIOUS in buildExpression 311
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
LEAVING case T_VARIABLE 310
]
NEW ==== testing leave from buildExpression AT END 310
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 310
,
testing leave from buildExpression 310
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 310
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_2'
                        )

                )

        )

)
PREVIOUS in buildExpression 310
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 167
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 168
)
buildExpression 314
while buildExpression 314
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 168
)
while buildExpression 314
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 168
)
while buildExpression 314
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 168
)
testing leave from buildExpression 314
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 314
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 168
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 314
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 168
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 168
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 168
)
buildExpression 315
while buildExpression 315
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 168
)
while buildExpression 315
,
testing leave from buildExpression 315
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 315
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 315
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 168
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 169
)
buildExpression 316
while buildExpression 316
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 169
)
while buildExpression 316
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 169
)
while buildExpression 316
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 169
)
testing leave from buildExpression 316
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 316
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 169
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 316
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 169
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 169
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 169
)
buildExpression 317
while buildExpression 317
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 169
)
while buildExpression 317
,
testing leave from buildExpression 317
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 317
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 317
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 169
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 304
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 304
;
testing leave from buildExpression 304
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 304
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'e_phone_2'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 304
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 170
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 172
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 172
)
buildExpression 318
while buildExpression 318
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 172
)
buildExpression 319
while buildExpression 319
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 319 next token value = 'e_phone_3'
buildExpression 320
while buildExpression 320
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_3'
    [2] => 172
)
while buildExpression 320
]
testing leave from buildExpression 320
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 320 next token value =  
NEW ==== testing leave from buildExpression AT END 320
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 320
]
NEW ==== bye bye from buildExpression AT END 320
while buildExpression 319
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 319 next token value =  
NEW ==== testing leave from buildExpression AT END 319
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 319
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 172
)
while buildExpression 319
=
testing leave from buildExpression 319
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 319
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
PREVIOUS in buildExpression 319
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
LEAVING case T_VARIABLE 318
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 172
)
while buildExpression 318
=
while buildExpression 318
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 172
)
while buildExpression 318
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 172
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 172
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 173
)
buildExpression 321
while buildExpression 321
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 173
)
while buildExpression 321
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 173
)
while buildExpression 321
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 173
)
testing leave from buildExpression 321
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 321
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 173
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 321
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 173
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 173
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 173
)
buildExpression 322
while buildExpression 322
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 173
)
while buildExpression 322
,
testing leave from buildExpression 322
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 322
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 322
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 173
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 174
)
buildExpression 323
while buildExpression 323
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 174
)
while buildExpression 323
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 174
)
while buildExpression 323
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 174
)
testing leave from buildExpression 323
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 323
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 174
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 323
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 174
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 174
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 174
)
buildExpression 324
while buildExpression 324
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 174
)
buildExpression 325
while buildExpression 325
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 325 next token value = 'values'
buildExpression 326
while buildExpression 326
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 174
)
while buildExpression 326
]
testing leave from buildExpression 326
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 326 next token value = [
NEW ==== testing leave from buildExpression AT END 326
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 326
]
NEW ==== bye bye from buildExpression AT END 326
while buildExpression 325
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 325 next token value = [
NEW ==== testing leave from buildExpression AT END 325
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 325
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 325 next token value = 'e_phone_3'
buildExpression 327
while buildExpression 327
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_3'
    [2] => 174
)
while buildExpression 327
]
testing leave from buildExpression 327
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 327 next token value = ,
NEW ==== testing leave from buildExpression AT END 327
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 327
]
NEW ==== bye bye from buildExpression AT END 327
while buildExpression 325
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 325 next token value = ,
NEW ==== testing leave from buildExpression AT END 325
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 325
,
testing leave from buildExpression 325
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 325
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
PREVIOUS in buildExpression 325
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
LEAVING case T_VARIABLE 324
]
NEW ==== testing leave from buildExpression AT END 324
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 324
,
testing leave from buildExpression 324
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 324
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_3'
                        )

                )

        )

)
PREVIOUS in buildExpression 324
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 174
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 175
)
buildExpression 328
while buildExpression 328
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 175
)
while buildExpression 328
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 175
)
while buildExpression 328
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 175
)
testing leave from buildExpression 328
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 328
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 175
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 328
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 175
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 175
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 175
)
buildExpression 329
while buildExpression 329
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 175
)
while buildExpression 329
,
testing leave from buildExpression 329
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 329
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 329
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 175
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 176
)
buildExpression 330
while buildExpression 330
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 176
)
while buildExpression 330
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 176
)
while buildExpression 330
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 176
)
testing leave from buildExpression 330
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 330
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 176
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 330
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 176
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 176
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 176
)
buildExpression 331
while buildExpression 331
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 176
)
while buildExpression 331
,
testing leave from buildExpression 331
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 331
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 331
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 176
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 318
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 318
;
testing leave from buildExpression 318
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 318
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'e_phone_3'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 318
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     

    
    [2] => 177
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 179
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 179
)
buildExpression 332
while buildExpression 332
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 179
)
buildExpression 333
while buildExpression 333
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 333 next token value = 'latFld'
buildExpression 334
while buildExpression 334
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'latFld'
    [2] => 179
)
while buildExpression 334
]
testing leave from buildExpression 334
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 334 next token value =  
NEW ==== testing leave from buildExpression AT END 334
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 334
]
NEW ==== bye bye from buildExpression AT END 334
while buildExpression 333
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 333 next token value =  
NEW ==== testing leave from buildExpression AT END 333
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 333
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 179
)
while buildExpression 333
=
testing leave from buildExpression 333
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 333
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
PREVIOUS in buildExpression 333
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
LEAVING case T_VARIABLE 332
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 179
)
while buildExpression 332
=
while buildExpression 332
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 179
)
while buildExpression 332
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 179
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 179
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 180
)
buildExpression 335
while buildExpression 335
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 180
)
while buildExpression 335
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 180
)
while buildExpression 335
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 180
)
testing leave from buildExpression 335
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 335
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 180
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 335
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 180
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 180
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'hidden'
    [2] => 180
)
buildExpression 336
while buildExpression 336
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'hidden'
    [2] => 180
)
while buildExpression 336
,
testing leave from buildExpression 336
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 336
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'hidden'
        )

)
PREVIOUS in buildExpression 336
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 180
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 181
)
buildExpression 337
while buildExpression 337
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 181
)
while buildExpression 337
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 181
)
while buildExpression 337
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 181
)
testing leave from buildExpression 337
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 337
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 181
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 337
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 181
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 181
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1.7 Местоположение'
    [2] => 181
)
buildExpression 338
while buildExpression 338
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1.7 Местоположение'
    [2] => 181
)
while buildExpression 338
,
testing leave from buildExpression 338
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 338
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1.7 Местоположение'
        )

)
PREVIOUS in buildExpression 338
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 181
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 182
)
buildExpression 339
while buildExpression 339
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 182
)
while buildExpression 339
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 182
)
while buildExpression 339
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 182
)
testing leave from buildExpression 339
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 339
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 182
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 339
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 182
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 182
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 182
)
buildExpression 340
while buildExpression 340
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 182
)
buildExpression 341
while buildExpression 341
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 341 next token value = 'values'
buildExpression 342
while buildExpression 342
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 182
)
while buildExpression 342
]
testing leave from buildExpression 342
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 342 next token value = [
NEW ==== testing leave from buildExpression AT END 342
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 342
]
NEW ==== bye bye from buildExpression AT END 342
while buildExpression 341
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 341 next token value = [
NEW ==== testing leave from buildExpression AT END 341
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 341
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 341 next token value = 'latFld'
buildExpression 343
while buildExpression 343
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'latFld'
    [2] => 182
)
while buildExpression 343
]
testing leave from buildExpression 343
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 343 next token value = ,
NEW ==== testing leave from buildExpression AT END 343
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 343
]
NEW ==== bye bye from buildExpression AT END 343
while buildExpression 341
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 341 next token value = ,
NEW ==== testing leave from buildExpression AT END 341
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 341
,
testing leave from buildExpression 341
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 341
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
PREVIOUS in buildExpression 341
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
LEAVING case T_VARIABLE 340
]
NEW ==== testing leave from buildExpression AT END 340
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 340
,
testing leave from buildExpression 340
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 340
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'latFld'
                        )

                )

        )

)
PREVIOUS in buildExpression 340
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 182
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 183
)
buildExpression 344
while buildExpression 344
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 183
)
while buildExpression 344
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 183
)
while buildExpression 344
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 183
)
testing leave from buildExpression 344
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 344
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 183
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#required'
        )

)
PREVIOUS in buildExpression 344
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 183
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 183
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 183
)
buildExpression 345
while buildExpression 345
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 183
)
while buildExpression 345
,
testing leave from buildExpression 345
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 345
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => TRUE
        )

)
PREVIOUS in buildExpression 345
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 183
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 332
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 332
;
testing leave from buildExpression 332
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 332
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'latFld'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'hidden'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1.7 Местоположение'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'latFld'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#required'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => TRUE
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 332
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 184
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 186
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 186
)
buildExpression 346
while buildExpression 346
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 186
)
buildExpression 347
while buildExpression 347
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 347 next token value = 'lngFld'
buildExpression 348
while buildExpression 348
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'lngFld'
    [2] => 186
)
while buildExpression 348
]
testing leave from buildExpression 348
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 348 next token value =  
NEW ==== testing leave from buildExpression AT END 348
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 348
]
NEW ==== bye bye from buildExpression AT END 348
while buildExpression 347
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 347 next token value =  
NEW ==== testing leave from buildExpression AT END 347
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 347
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 186
)
while buildExpression 347
=
testing leave from buildExpression 347
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 347
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
PREVIOUS in buildExpression 347
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
LEAVING case T_VARIABLE 346
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 186
)
while buildExpression 346
=
while buildExpression 346
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 186
)
while buildExpression 346
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 186
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 186
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 187
)
buildExpression 349
while buildExpression 349
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 187
)
while buildExpression 349
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 187
)
while buildExpression 349
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 187
)
testing leave from buildExpression 349
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 349
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 187
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 349
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 187
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 187
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'hidden'
    [2] => 187
)
buildExpression 350
while buildExpression 350
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'hidden'
    [2] => 187
)
while buildExpression 350
,
testing leave from buildExpression 350
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 350
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'hidden'
        )

)
PREVIOUS in buildExpression 350
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 187
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 188
)
buildExpression 351
while buildExpression 351
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 188
)
while buildExpression 351
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 188
)
while buildExpression 351
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 188
)
testing leave from buildExpression 351
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 351
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 188
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 351
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 188
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 188
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 188
)
buildExpression 352
while buildExpression 352
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 188
)
buildExpression 353
while buildExpression 353
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 353 next token value = 'values'
buildExpression 354
while buildExpression 354
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 188
)
while buildExpression 354
]
testing leave from buildExpression 354
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 354 next token value = [
NEW ==== testing leave from buildExpression AT END 354
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 354
]
NEW ==== bye bye from buildExpression AT END 354
while buildExpression 353
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 353 next token value = [
NEW ==== testing leave from buildExpression AT END 353
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 353
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 353 next token value = 'lngFld'
buildExpression 355
while buildExpression 355
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'lngFld'
    [2] => 188
)
while buildExpression 355
]
testing leave from buildExpression 355
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 355 next token value = ,
NEW ==== testing leave from buildExpression AT END 355
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 355
]
NEW ==== bye bye from buildExpression AT END 355
while buildExpression 353
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 353 next token value = ,
NEW ==== testing leave from buildExpression AT END 353
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 353
,
testing leave from buildExpression 353
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 353
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
PREVIOUS in buildExpression 353
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
LEAVING case T_VARIABLE 352
]
NEW ==== testing leave from buildExpression AT END 352
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 352
,
testing leave from buildExpression 352
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 352
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'lngFld'
                        )

                )

        )

)
PREVIOUS in buildExpression 352
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 188
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 2, 2, ''
NEW ==== testing leave from buildExpression AT END 346
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 346
;
testing leave from buildExpression 346
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 346
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'lngFld'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 2
            [commaCount] => 2
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'hidden'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'lngFld'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 346
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 189
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // Личный данные

    [2] => 191
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 192
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 192
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 192
)
buildExpression 356
while buildExpression 356
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 192
)
buildExpression 357
while buildExpression 357
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 357 next token value = 'surname'
buildExpression 358
while buildExpression 358
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'surname'
    [2] => 192
)
while buildExpression 358
]
testing leave from buildExpression 358
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 358 next token value =  
NEW ==== testing leave from buildExpression AT END 358
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 358
]
NEW ==== bye bye from buildExpression AT END 358
while buildExpression 357
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 357 next token value =  
NEW ==== testing leave from buildExpression AT END 357
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 357
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 192
)
while buildExpression 357
=
testing leave from buildExpression 357
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 357
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
PREVIOUS in buildExpression 357
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
LEAVING case T_VARIABLE 356
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 192
)
while buildExpression 356
=
while buildExpression 356
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 192
)
while buildExpression 356
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 192
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 192
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 193
)
buildExpression 359
while buildExpression 359
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 193
)
while buildExpression 359
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 193
)
while buildExpression 359
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 193
)
testing leave from buildExpression 359
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 359
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 193
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 359
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 193
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 193
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 193
)
buildExpression 360
while buildExpression 360
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 193
)
while buildExpression 360
,
testing leave from buildExpression 360
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 360
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 360
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 193
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 194
)
buildExpression 361
while buildExpression 361
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 194
)
while buildExpression 361
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 194
)
while buildExpression 361
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 194
)
testing leave from buildExpression 361
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 361
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 194
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 361
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 194
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 194
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 194
)
buildExpression 362
while buildExpression 362
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 194
)
buildExpression 363
while buildExpression 363
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 363 next token value = 'values'
buildExpression 364
while buildExpression 364
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 194
)
while buildExpression 364
]
testing leave from buildExpression 364
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 364 next token value = [
NEW ==== testing leave from buildExpression AT END 364
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 364
]
NEW ==== bye bye from buildExpression AT END 364
while buildExpression 363
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 363 next token value = [
NEW ==== testing leave from buildExpression AT END 363
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 363
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 363 next token value = 'surname'
buildExpression 365
while buildExpression 365
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'surname'
    [2] => 194
)
while buildExpression 365
]
testing leave from buildExpression 365
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 365 next token value = ,
NEW ==== testing leave from buildExpression AT END 365
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 365
]
NEW ==== bye bye from buildExpression AT END 365
while buildExpression 363
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 363 next token value = ,
NEW ==== testing leave from buildExpression AT END 363
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 363
,
testing leave from buildExpression 363
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 363
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
PREVIOUS in buildExpression 363
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
LEAVING case T_VARIABLE 362
]
NEW ==== testing leave from buildExpression AT END 362
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 362
,
testing leave from buildExpression 362
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 362
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'surname'
                        )

                )

        )

)
PREVIOUS in buildExpression 362
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 194
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 195
)
buildExpression 366
while buildExpression 366
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 195
)
while buildExpression 366
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 195
)
while buildExpression 366
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 195
)
testing leave from buildExpression 366
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 366
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 195
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 366
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 195
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 195
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.1 Фамилия, имя, отчество'
    [2] => 195
)
buildExpression 367
while buildExpression 367
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.1 Фамилия, имя, отчество'
    [2] => 195
)
while buildExpression 367
,
testing leave from buildExpression 367
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 367
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2.1 Фамилия, имя, отчество'
        )

)
PREVIOUS in buildExpression 367
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 195
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 196
)
buildExpression 368
while buildExpression 368
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 196
)
while buildExpression 368
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 196
)
while buildExpression 368
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 196
)
testing leave from buildExpression 368
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 368
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 196
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#description'
        )

)
PREVIOUS in buildExpression 368
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 196
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 196
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Подскажите, как к Вам обращаться?<br/> Например, <strong>Иванов Иван Иванович</strong>.'
    [2] => 196
)
buildExpression 369
while buildExpression 369
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Подскажите, как к Вам обращаться?<br/> Например, <strong>Иванов Иван Иванович</strong>.'
    [2] => 196
)
while buildExpression 369
,
testing leave from buildExpression 369
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 369
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Подскажите, как к Вам обращаться?<br/> Например, <strong>Иванов Иван Иванович</strong>.'
        )

)
PREVIOUS in buildExpression 369
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 196
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 197
)
buildExpression 370
while buildExpression 370
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 197
)
while buildExpression 370
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 197
)
while buildExpression 370
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 197
)
testing leave from buildExpression 370
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 370
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 197
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 370
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 197
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 197
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 197
)
buildExpression 371
while buildExpression 371
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 197
)
while buildExpression 371
,
testing leave from buildExpression 371
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 371
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 371
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 197
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 198
)
buildExpression 372
while buildExpression 372
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 198
)
while buildExpression 372
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 198
)
while buildExpression 372
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 198
)
testing leave from buildExpression 372
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 372
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 198
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 372
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 198
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 198
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 30
    [2] => 198
)
buildExpression 373
while buildExpression 373
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 30
    [2] => 198
)
while buildExpression 373
,
testing leave from buildExpression 373
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 373
,
PGPExpression
(
    [operand] => 30
)
PREVIOUS in buildExpression 373
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 198
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 6, 6, ''
NEW ==== testing leave from buildExpression AT END 356
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 356
;
testing leave from buildExpression 356
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 356
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'surname'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 6
            [commaCount] => 6
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'surname'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2.1 Фамилия, имя, отчество'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#description'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Подскажите, как к Вам обращаться?<br/> Например, <strong>Иванов Иван Иванович</strong>.'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 30
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 356
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 199
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 201
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 201
)
buildExpression 374
while buildExpression 374
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 201
)
buildExpression 375
while buildExpression 375
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 375 next token value = 'mail'
buildExpression 376
while buildExpression 376
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 201
)
while buildExpression 376
]
testing leave from buildExpression 376
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 376 next token value =  
NEW ==== testing leave from buildExpression AT END 376
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 376
]
NEW ==== bye bye from buildExpression AT END 376
while buildExpression 375
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 375 next token value =  
NEW ==== testing leave from buildExpression AT END 375
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 375
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 201
)
while buildExpression 375
=
testing leave from buildExpression 375
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 375
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
PREVIOUS in buildExpression 375
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
LEAVING case T_VARIABLE 374
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 201
)
while buildExpression 374
=
while buildExpression 374
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 201
)
while buildExpression 374
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 201
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 201
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 202
)
buildExpression 377
while buildExpression 377
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 202
)
while buildExpression 377
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 202
)
while buildExpression 377
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 202
)
testing leave from buildExpression 377
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 377
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 202
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 377
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 202
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 202
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 202
)
buildExpression 378
while buildExpression 378
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 202
)
while buildExpression 378
,
testing leave from buildExpression 378
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 378
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 378
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 202
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 203
)
buildExpression 379
while buildExpression 379
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 203
)
while buildExpression 379
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 203
)
while buildExpression 379
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 203
)
testing leave from buildExpression 379
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 379
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 203
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 379
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 203
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 203
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.2 Ваша электронная почта'
    [2] => 203
)
buildExpression 380
while buildExpression 380
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.2 Ваша электронная почта'
    [2] => 203
)
while buildExpression 380
,
testing leave from buildExpression 380
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 380
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2.2 Ваша электронная почта'
        )

)
PREVIOUS in buildExpression 380
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 203
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 204
)
buildExpression 381
while buildExpression 381
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 204
)
while buildExpression 381
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 204
)
while buildExpression 381
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 204
)
testing leave from buildExpression 381
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 381
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 204
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 381
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 204
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 204
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 204
)
buildExpression 382
while buildExpression 382
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 204
)
while buildExpression 382
,
testing leave from buildExpression 382
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 382
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 382
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 204
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 205
)
buildExpression 383
while buildExpression 383
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 205
)
while buildExpression 383
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 205
)
while buildExpression 383
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 205
)
testing leave from buildExpression 383
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 383
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 205
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 383
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 205
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 205
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 30
    [2] => 205
)
buildExpression 384
while buildExpression 384
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 30
    [2] => 205
)
while buildExpression 384
,
testing leave from buildExpression 384
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 384
,
PGPExpression
(
    [operand] => 30
)
PREVIOUS in buildExpression 384
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 205
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 206
)
buildExpression 385
while buildExpression 385
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 206
)
while buildExpression 385
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 206
)
while buildExpression 385
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 206
)
testing leave from buildExpression 385
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 385
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 206
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 385
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 206
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 206
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 206
)
buildExpression 386
while buildExpression 386
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 206
)
buildExpression 387
while buildExpression 387
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 387 next token value = 'values'
buildExpression 388
while buildExpression 388
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 206
)
while buildExpression 388
]
testing leave from buildExpression 388
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 388 next token value = [
NEW ==== testing leave from buildExpression AT END 388
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 388
]
NEW ==== bye bye from buildExpression AT END 388
while buildExpression 387
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 387 next token value = [
NEW ==== testing leave from buildExpression AT END 387
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 387
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 387 next token value = 'mail'
buildExpression 389
while buildExpression 389
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 206
)
while buildExpression 389
]
testing leave from buildExpression 389
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 389 next token value = ,
NEW ==== testing leave from buildExpression AT END 389
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 389
]
NEW ==== bye bye from buildExpression AT END 389
while buildExpression 387
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 387 next token value = ,
NEW ==== testing leave from buildExpression AT END 387
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 387
,
testing leave from buildExpression 387
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 387
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
PREVIOUS in buildExpression 387
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
LEAVING case T_VARIABLE 386
]
NEW ==== testing leave from buildExpression AT END 386
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 386
,
testing leave from buildExpression 386
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 386
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

        )

)
PREVIOUS in buildExpression 386
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 206
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 207
)
buildExpression 390
while buildExpression 390
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 207
)
while buildExpression 390
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 207
)
while buildExpression 390
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 207
)
testing leave from buildExpression 390
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 390
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 207
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#required'
        )

)
PREVIOUS in buildExpression 390
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 207
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 207
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 207
)
buildExpression 391
while buildExpression 391
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 207
)
while buildExpression 391
,
testing leave from buildExpression 391
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 391
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => TRUE
        )

)
PREVIOUS in buildExpression 391
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 207
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 208
)
buildExpression 392
while buildExpression 392
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 208
)
while buildExpression 392
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 208
)
while buildExpression 392
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 208
)
testing leave from buildExpression 392
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 392
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 208
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#description'
        )

)
PREVIOUS in buildExpression 392
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 208
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 208
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Почта необходима на случай, если Вы забудете пароль.'
    [2] => 208
)
buildExpression 393
while buildExpression 393
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Почта необходима на случай, если Вы забудете пароль.'
    [2] => 208
)
while buildExpression 393
,
testing leave from buildExpression 393
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 393
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Почта необходима на случай, если Вы забудете пароль.'
        )

)
PREVIOUS in buildExpression 393
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 208
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 7, 7, ''
NEW ==== testing leave from buildExpression AT END 374
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 374
;
testing leave from buildExpression 374
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 374
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 7
            [commaCount] => 7
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2.2 Ваша электронная почта'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 30
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'mail'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#required'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => TRUE
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#description'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Почта необходима на случай, если Вы забудете пароль.'
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 374
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 209
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 211
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 211
)
buildExpression 394
while buildExpression 394
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 211
)
buildExpression 395
while buildExpression 395
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 395 next token value = 'pass'
buildExpression 396
while buildExpression 396
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 211
)
while buildExpression 396
]
testing leave from buildExpression 396
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 396 next token value =  
NEW ==== testing leave from buildExpression AT END 396
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 396
]
NEW ==== bye bye from buildExpression AT END 396
while buildExpression 395
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 395 next token value =  
NEW ==== testing leave from buildExpression AT END 395
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 395
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 211
)
while buildExpression 395
=
testing leave from buildExpression 395
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 395
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
PREVIOUS in buildExpression 395
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
LEAVING case T_VARIABLE 394
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 211
)
while buildExpression 394
=
while buildExpression 394
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 211
)
while buildExpression 394
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 211
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 211
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 212
)
buildExpression 397
while buildExpression 397
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 212
)
while buildExpression 397
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 212
)
while buildExpression 397
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 212
)
testing leave from buildExpression 397
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 397
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 212
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 397
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 212
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 212
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'password'
    [2] => 212
)
buildExpression 398
while buildExpression 398
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'password'
    [2] => 212
)
while buildExpression 398
,
testing leave from buildExpression 398
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 398
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'password'
        )

)
PREVIOUS in buildExpression 398
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 212
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 213
)
buildExpression 399
while buildExpression 399
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 213
)
while buildExpression 399
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 213
)
while buildExpression 399
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 213
)
testing leave from buildExpression 399
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 399
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 213
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 399
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 213
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 213
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.3 Придумайте пароль для входа в личный кабинет каталога'
    [2] => 213
)
buildExpression 400
while buildExpression 400
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.3 Придумайте пароль для входа в личный кабинет каталога'
    [2] => 213
)
while buildExpression 400
,
testing leave from buildExpression 400
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 400
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2.3 Придумайте пароль для входа в личный кабинет каталога'
        )

)
PREVIOUS in buildExpression 400
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 213
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 214
)
buildExpression 401
while buildExpression 401
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 214
)
while buildExpression 401
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 214
)
while buildExpression 401
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 214
)
testing leave from buildExpression 401
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 401
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 214
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 401
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 214
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 214
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 214
)
buildExpression 402
while buildExpression 402
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 214
)
while buildExpression 402
,
testing leave from buildExpression 402
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 402
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 402
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 214
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 215
)
buildExpression 403
while buildExpression 403
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 215
)
while buildExpression 403
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 215
)
while buildExpression 403
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 215
)
testing leave from buildExpression 403
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 403
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 215
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 403
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 215
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 215
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 215
)
buildExpression 404
while buildExpression 404
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 215
)
while buildExpression 404
,
testing leave from buildExpression 404
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 404
,
PGPExpression
(
    [operand] => 20
)
PREVIOUS in buildExpression 404
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 215
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 216
)
buildExpression 405
while buildExpression 405
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 216
)
while buildExpression 405
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 216
)
while buildExpression 405
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 216
)
testing leave from buildExpression 405
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 405
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 216
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 405
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 216
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 216
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 216
)
buildExpression 406
while buildExpression 406
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 216
)
buildExpression 407
while buildExpression 407
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 407 next token value = 'values'
buildExpression 408
while buildExpression 408
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 216
)
while buildExpression 408
]
testing leave from buildExpression 408
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 408 next token value = [
NEW ==== testing leave from buildExpression AT END 408
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 408
]
NEW ==== bye bye from buildExpression AT END 408
while buildExpression 407
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 407 next token value = [
NEW ==== testing leave from buildExpression AT END 407
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 407
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 407 next token value = 'pass'
buildExpression 409
while buildExpression 409
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 216
)
while buildExpression 409
]
testing leave from buildExpression 409
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 409 next token value = ,
NEW ==== testing leave from buildExpression AT END 409
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 409
]
NEW ==== bye bye from buildExpression AT END 409
while buildExpression 407
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 407 next token value = ,
NEW ==== testing leave from buildExpression AT END 407
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 407
,
testing leave from buildExpression 407
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 407
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
PREVIOUS in buildExpression 407
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
LEAVING case T_VARIABLE 406
]
NEW ==== testing leave from buildExpression AT END 406
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 406
,
testing leave from buildExpression 406
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 406
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass'
                        )

                )

        )

)
PREVIOUS in buildExpression 406
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 216
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 217
)
buildExpression 410
while buildExpression 410
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 217
)
while buildExpression 410
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 217
)
while buildExpression 410
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 217
)
testing leave from buildExpression 410
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 410
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 217
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#required'
        )

)
PREVIOUS in buildExpression 410
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 217
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 217
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 217
)
buildExpression 411
while buildExpression 411
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 217
)
while buildExpression 411
,
testing leave from buildExpression 411
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 411
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => TRUE
        )

)
PREVIOUS in buildExpression 411
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 217
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 6, 6, ''
NEW ==== testing leave from buildExpression AT END 394
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 394
;
testing leave from buildExpression 394
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 394
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 6
            [commaCount] => 6
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'password'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2.3 Придумайте пароль для входа в личный кабинет каталога'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 20
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'pass'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#required'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => TRUE
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 394
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 218
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 220
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 220
)
buildExpression 412
while buildExpression 412
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 220
)
buildExpression 413
while buildExpression 413
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 413 next token value = 'pass2'
buildExpression 414
while buildExpression 414
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass2'
    [2] => 220
)
while buildExpression 414
]
testing leave from buildExpression 414
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 414 next token value =  
NEW ==== testing leave from buildExpression AT END 414
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 414
]
NEW ==== bye bye from buildExpression AT END 414
while buildExpression 413
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 413 next token value =  
NEW ==== testing leave from buildExpression AT END 413
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 413
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 220
)
while buildExpression 413
=
testing leave from buildExpression 413
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 413
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
PREVIOUS in buildExpression 413
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
LEAVING case T_VARIABLE 412
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 220
)
while buildExpression 412
=
while buildExpression 412
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 220
)
while buildExpression 412
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 220
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 220
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 221
)
buildExpression 415
while buildExpression 415
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 221
)
while buildExpression 415
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 221
)
while buildExpression 415
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 221
)
testing leave from buildExpression 415
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 415
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 221
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 415
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 221
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 221
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'password'
    [2] => 221
)
buildExpression 416
while buildExpression 416
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'password'
    [2] => 221
)
while buildExpression 416
,
testing leave from buildExpression 416
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 416
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'password'
        )

)
PREVIOUS in buildExpression 416
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 221
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 222
)
buildExpression 417
while buildExpression 417
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 222
)
while buildExpression 417
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 222
)
while buildExpression 417
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 222
)
testing leave from buildExpression 417
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 417
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 222
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 417
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 222
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 222
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.4 Повторите пароль'
    [2] => 222
)
buildExpression 418
while buildExpression 418
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2.4 Повторите пароль'
    [2] => 222
)
while buildExpression 418
,
testing leave from buildExpression 418
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 418
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2.4 Повторите пароль'
        )

)
PREVIOUS in buildExpression 418
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 222
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 223
)
buildExpression 419
while buildExpression 419
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 223
)
while buildExpression 419
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 223
)
while buildExpression 419
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 223
)
testing leave from buildExpression 419
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 419
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 223
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 419
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 223
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 223
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 223
)
buildExpression 420
while buildExpression 420
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 223
)
while buildExpression 420
,
testing leave from buildExpression 420
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 420
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 420
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 223
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 224
)
buildExpression 421
while buildExpression 421
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 224
)
while buildExpression 421
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 224
)
while buildExpression 421
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 224
)
testing leave from buildExpression 421
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 421
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 224
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 421
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 224
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 224
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 224
)
buildExpression 422
while buildExpression 422
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 20
    [2] => 224
)
while buildExpression 422
,
testing leave from buildExpression 422
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 422
,
PGPExpression
(
    [operand] => 20
)
PREVIOUS in buildExpression 422
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 224
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 225
)
buildExpression 423
while buildExpression 423
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 225
)
while buildExpression 423
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 225
)
while buildExpression 423
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 225
)
testing leave from buildExpression 423
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 423
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 225
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 423
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 225
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 225
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 225
)
buildExpression 424
while buildExpression 424
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 225
)
buildExpression 425
while buildExpression 425
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 425 next token value = 'values'
buildExpression 426
while buildExpression 426
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 225
)
while buildExpression 426
]
testing leave from buildExpression 426
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 426 next token value = [
NEW ==== testing leave from buildExpression AT END 426
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 426
]
NEW ==== bye bye from buildExpression AT END 426
while buildExpression 425
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 425 next token value = [
NEW ==== testing leave from buildExpression AT END 425
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 425
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 425 next token value = 'pass2'
buildExpression 427
while buildExpression 427
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass2'
    [2] => 225
)
while buildExpression 427
]
testing leave from buildExpression 427
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 427 next token value = ,
NEW ==== testing leave from buildExpression AT END 427
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 427
]
NEW ==== bye bye from buildExpression AT END 427
while buildExpression 425
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 425 next token value = ,
NEW ==== testing leave from buildExpression AT END 425
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 425
,
testing leave from buildExpression 425
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 425
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
PREVIOUS in buildExpression 425
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
LEAVING case T_VARIABLE 424
]
NEW ==== testing leave from buildExpression AT END 424
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 424
,
testing leave from buildExpression 424
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 424
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass2'
                        )

                )

        )

)
PREVIOUS in buildExpression 424
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 225
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 226
)
buildExpression 428
while buildExpression 428
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 226
)
while buildExpression 428
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 226
)
while buildExpression 428
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 226
)
testing leave from buildExpression 428
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 428
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 226
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#required'
        )

)
PREVIOUS in buildExpression 428
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 226
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 226
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 226
)
buildExpression 429
while buildExpression 429
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 226
)
while buildExpression 429
,
testing leave from buildExpression 429
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 429
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => TRUE
        )

)
PREVIOUS in buildExpression 429
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 226
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 6, 6, ''
NEW ==== testing leave from buildExpression AT END 412
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 412
;
testing leave from buildExpression 412
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 412
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 6
            [commaCount] => 6
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'password'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2.4 Повторите пароль'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 20
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'pass2'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#required'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => TRUE
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 412
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
   
    [2] => 227
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  Данные о компании

    [2] => 228
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 229
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 229
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 229
)
buildExpression 430
while buildExpression 430
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 229
)
buildExpression 431
while buildExpression 431
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 431 next token value = 'company_name'
buildExpression 432
while buildExpression 432
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'company_name'
    [2] => 229
)
while buildExpression 432
]
testing leave from buildExpression 432
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 432 next token value =  
NEW ==== testing leave from buildExpression AT END 432
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 432
]
NEW ==== bye bye from buildExpression AT END 432
while buildExpression 431
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 431 next token value =  
NEW ==== testing leave from buildExpression AT END 431
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 431
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 229
)
while buildExpression 431
=
testing leave from buildExpression 431
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 431
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
PREVIOUS in buildExpression 431
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
LEAVING case T_VARIABLE 430
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 229
)
while buildExpression 430
=
while buildExpression 430
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 229
)
while buildExpression 430
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 229
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 229
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 230
)
buildExpression 433
while buildExpression 433
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 230
)
while buildExpression 433
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 230
)
while buildExpression 433
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 230
)
testing leave from buildExpression 433
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 433
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 230
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 433
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 230
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 230
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 230
)
buildExpression 434
while buildExpression 434
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 230
)
while buildExpression 434
,
testing leave from buildExpression 434
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 434
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 434
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 230
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 231
)
buildExpression 435
while buildExpression 435
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 231
)
while buildExpression 435
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 231
)
while buildExpression 435
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 231
)
testing leave from buildExpression 435
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 435
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 231
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 435
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 231
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 231
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 231
)
buildExpression 436
while buildExpression 436
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 231
)
while buildExpression 436
,
testing leave from buildExpression 436
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 436
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 436
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 231
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 232
)
buildExpression 437
while buildExpression 437
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 232
)
while buildExpression 437
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 232
)
while buildExpression 437
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 232
)
testing leave from buildExpression 437
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 437
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 232
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 437
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 232
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 232
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 232
)
buildExpression 438
while buildExpression 438
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 232
)
while buildExpression 438
,
testing leave from buildExpression 438
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 438
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 438
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
        
    [2] => 232
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 233
)
buildExpression 439
while buildExpression 439
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 233
)
while buildExpression 439
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 233
)
while buildExpression 439
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 233
)
testing leave from buildExpression 439
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 439
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 233
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 439
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 233
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 233
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3.1 Название Вашей компании'
    [2] => 233
)
buildExpression 440
while buildExpression 440
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3.1 Название Вашей компании'
    [2] => 233
)
while buildExpression 440
,
testing leave from buildExpression 440
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 440
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3.1 Название Вашей компании'
        )

)
PREVIOUS in buildExpression 440
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 233
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 234
)
buildExpression 441
while buildExpression 441
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 234
)
while buildExpression 441
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 234
)
while buildExpression 441
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 234
)
testing leave from buildExpression 441
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 441
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 234
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 441
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 234
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 234
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 234
)
buildExpression 442
while buildExpression 442
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 234
)
buildExpression 443
while buildExpression 443
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 443 next token value = 'values'
buildExpression 444
while buildExpression 444
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 234
)
while buildExpression 444
]
testing leave from buildExpression 444
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 444 next token value = [
NEW ==== testing leave from buildExpression AT END 444
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 444
]
NEW ==== bye bye from buildExpression AT END 444
while buildExpression 443
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 443 next token value = [
NEW ==== testing leave from buildExpression AT END 443
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 443
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 443 next token value = 'company_name'
buildExpression 445
while buildExpression 445
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'company_name'
    [2] => 234
)
while buildExpression 445
]
testing leave from buildExpression 445
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 445 next token value = ,
NEW ==== testing leave from buildExpression AT END 445
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 445
]
NEW ==== bye bye from buildExpression AT END 445
while buildExpression 443
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 443 next token value = ,
NEW ==== testing leave from buildExpression AT END 443
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 443
,
testing leave from buildExpression 443
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 443
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
PREVIOUS in buildExpression 443
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
LEAVING case T_VARIABLE 442
]
NEW ==== testing leave from buildExpression AT END 442
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 442
,
testing leave from buildExpression 442
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 442
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'company_name'
                        )

                )

        )

)
PREVIOUS in buildExpression 442
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 234
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 235
)
buildExpression 446
while buildExpression 446
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 235
)
while buildExpression 446
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 235
)
while buildExpression 446
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 235
)
testing leave from buildExpression 446
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 446
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 235
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#description'
        )

)
PREVIOUS in buildExpression 446
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 235
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 235
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Будет выводиться на странице информации о компании.'
    [2] => 235
)
buildExpression 447
while buildExpression 447
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Будет выводиться на странице информации о компании.'
    [2] => 235
)
while buildExpression 447
,
testing leave from buildExpression 447
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 447
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Будет выводиться на странице информации о компании.'
        )

)
PREVIOUS in buildExpression 447
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 235
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 236
)
buildExpression 448
while buildExpression 448
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#required'
    [2] => 236
)
while buildExpression 448
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 236
)
while buildExpression 448
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 236
)
testing leave from buildExpression 448
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 448
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 236
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#required'
        )

)
PREVIOUS in buildExpression 448
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 236
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 236
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 236
)
buildExpression 449
while buildExpression 449
Array
(
    [0] => 307 (T_STRING)
    [1] => TRUE
    [2] => 236
)
while buildExpression 449
,
testing leave from buildExpression 449
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 449
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => TRUE
        )

)
PREVIOUS in buildExpression 449
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 236
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 7, 7, ''
NEW ==== testing leave from buildExpression AT END 430
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 430
;
testing leave from buildExpression 430
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 430
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'company_name'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 7
            [commaCount] => 7
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] =>         
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3.1 Название Вашей компании'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'company_name'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#description'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Будет выводиться на странице информации о компании.'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#required'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => TRUE
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 430
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 237
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 239
)
buildConditional
while buildConditional
(
buildExpression 450
while buildExpression 450
Array
(
    [0] => 350 (T_ISSET)
    [1] => isset
    [2] => 239
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 451
while buildExpression 451
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 239
)
buildExpression 452
while buildExpression 452
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 452 next token value = 'values'
buildExpression 453
while buildExpression 453
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 239
)
while buildExpression 453
]
testing leave from buildExpression 453
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 453 next token value = [
NEW ==== testing leave from buildExpression AT END 453
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 453
]
NEW ==== bye bye from buildExpression AT END 453
while buildExpression 452
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 452 next token value = [
NEW ==== testing leave from buildExpression AT END 452
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 452
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 452 next token value = 'site'
buildExpression 454
while buildExpression 454
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site'
    [2] => 239
)
while buildExpression 454
]
testing leave from buildExpression 454
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 454 next token value = )
NEW ==== testing leave from buildExpression AT END 454
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 454
]
NEW ==== bye bye from buildExpression AT END 454
while buildExpression 452
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 452 next token value = )
NEW ==== testing leave from buildExpression AT END 452
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 452
)
HITTING RPARENS 452
NEW ==== testing leave from buildExpression AT END 452
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 452
)
NEW ==== bye bye from buildExpression AT END 452
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
LEAVING case T_VARIABLE 451
]
NEW ==== testing leave from buildExpression AT END 451
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 451
)
HITTING RPARENS 451
NEW ==== testing leave from buildExpression AT END 451
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 451
)
NEW ==== bye bye from buildExpression AT END 451
while buildFunctionCall
)
NEW ==== testing leave from buildExpression AT END 450
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 450
)
testing leave from buildExpression 450
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 450
NEW ==== testing leave from buildExpression AT END 450
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 450
)
NEW ==== bye bye from buildExpression AT END 450
while buildConditional
)
while buildConditional
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 239
)
while buildConditional
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 240
)
buildBody
Array
(
    [0] => ;
)
statements_to_return = 1 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 240
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 240
)
buildExpression 455
while buildExpression 455
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 240
)
buildExpression 456
while buildExpression 456
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 240
)
while buildExpression 456
=
testing leave from buildExpression 456
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 456
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
PREVIOUS in buildExpression 456
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
LEAVING case T_VARIABLE 455
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 240
)
while buildExpression 455
=
while buildExpression 455
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 240
)
while buildExpression 455
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 240
)
buildExpression 457
while buildExpression 457
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 457 next token value = 'values'
buildExpression 458
while buildExpression 458
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 240
)
while buildExpression 458
]
testing leave from buildExpression 458
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 458 next token value = [
NEW ==== testing leave from buildExpression AT END 458
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 458
]
NEW ==== bye bye from buildExpression AT END 458
while buildExpression 457
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 457 next token value = [
NEW ==== testing leave from buildExpression AT END 457
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 457
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 457 next token value = 'site'
buildExpression 459
while buildExpression 459
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site'
    [2] => 240
)
while buildExpression 459
]
testing leave from buildExpression 459
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 459 next token value = ;
NEW ==== testing leave from buildExpression AT END 459
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 459
]
NEW ==== bye bye from buildExpression AT END 459
while buildExpression 457
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 457 next token value = ;
NEW ==== testing leave from buildExpression AT END 457
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 457
;
testing leave from buildExpression 457
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 457
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
PREVIOUS in buildExpression 457
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
LEAVING case T_VARIABLE 455
]
NEW ==== testing leave from buildExpression AT END 455
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 455
;
testing leave from buildExpression 455
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 455
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $site_value
        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'site'
                        )

                )

        )

)
PREVIOUS in buildExpression 455
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 1 in buildBody
while buildBody
;
checking for appended comment before leaving buildBody
303 (T_ELSE)
371 (T_WHITESPACE)

    
leaving buildBody
;
while buildConditional
;
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 240
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 303 (T_ELSE)
    [1] => else
    [2] => 241
)
buildConditional
while buildConditional
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 241
)
while buildConditional
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 242
)
buildBody
Array
(
    [0] => ;
)
statements_to_return = 1 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 242
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 242
)
buildExpression 460
while buildExpression 460
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 242
)
buildExpression 461
while buildExpression 461
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 242
)
while buildExpression 461
=
testing leave from buildExpression 461
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 461
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
PREVIOUS in buildExpression 461
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
LEAVING case T_VARIABLE 460
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 242
)
while buildExpression 460
=
while buildExpression 460
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 242
)
while buildExpression 460
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'http://'
    [2] => 242
)
while buildExpression 460
;
testing leave from buildExpression 460
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 460
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $site_value
        )

    [assign] => =
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'http://'
        )

)
PREVIOUS in buildExpression 460
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 1 in buildBody
while buildBody
;
checking for appended comment before leaving buildBody
309 (T_VARIABLE)
371 (T_WHITESPACE)


    
leaving buildBody
;
while buildConditional
;
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 242
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 244
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 244
)
buildExpression 462
while buildExpression 462
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 244
)
buildExpression 463
while buildExpression 463
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 463 next token value = 'site'
buildExpression 464
while buildExpression 464
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site'
    [2] => 244
)
while buildExpression 464
]
testing leave from buildExpression 464
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 464 next token value =  
NEW ==== testing leave from buildExpression AT END 464
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 464
]
NEW ==== bye bye from buildExpression AT END 464
while buildExpression 463
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 463 next token value =  
NEW ==== testing leave from buildExpression AT END 463
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 463
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 244
)
while buildExpression 463
=
testing leave from buildExpression 463
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 463
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
PREVIOUS in buildExpression 463
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
LEAVING case T_VARIABLE 462
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 244
)
while buildExpression 462
=
while buildExpression 462
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 244
)
while buildExpression 462
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 244
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 244
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 245
)
buildExpression 465
while buildExpression 465
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 245
)
while buildExpression 465
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 245
)
while buildExpression 465
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 245
)
testing leave from buildExpression 465
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 465
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 245
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 465
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 245
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 245
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 245
)
buildExpression 466
while buildExpression 466
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 245
)
while buildExpression 466
,
testing leave from buildExpression 466
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 466
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 466
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 245
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 246
)
buildExpression 467
while buildExpression 467
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 246
)
while buildExpression 467
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 246
)
while buildExpression 467
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 246
)
testing leave from buildExpression 467
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 467
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 246
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 467
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 246
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 246
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 246
)
buildExpression 468
while buildExpression 468
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 246
)
while buildExpression 468
,
testing leave from buildExpression 468
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 468
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 468
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 246
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 247
)
buildExpression 469
while buildExpression 469
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 247
)
while buildExpression 469
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 247
)
while buildExpression 469
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 247
)
testing leave from buildExpression 469
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 469
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 247
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 469
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 247
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 247
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 247
)
buildExpression 470
while buildExpression 470
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 50
    [2] => 247
)
while buildExpression 470
,
testing leave from buildExpression 470
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 470
,
PGPExpression
(
    [operand] => 50
)
PREVIOUS in buildExpression 470
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
        
    [2] => 247
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 248
)
buildExpression 471
while buildExpression 471
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 248
)
while buildExpression 471
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 248
)
while buildExpression 471
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 248
)
testing leave from buildExpression 471
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 471
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 248
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 471
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 248
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 248
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3.2 Адрес сайта Вашей компании'
    [2] => 248
)
buildExpression 472
while buildExpression 472
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3.2 Адрес сайта Вашей компании'
    [2] => 248
)
while buildExpression 472
,
testing leave from buildExpression 472
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 472
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3.2 Адрес сайта Вашей компании'
        )

)
PREVIOUS in buildExpression 472
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 248
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 249
)
buildExpression 473
while buildExpression 473
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 249
)
while buildExpression 473
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 249
)
while buildExpression 473
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 249
)
testing leave from buildExpression 473
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 473
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 249
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 473
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 249
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 249
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 249
)
buildExpression 474
while buildExpression 474
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 249
)
buildExpression 475
while buildExpression 475
,
testing leave from buildExpression 475
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 475
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
PREVIOUS in buildExpression 475
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $site_value
)
LEAVING case T_VARIABLE 474
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $site_value
    [2] => 249
)
while buildExpression 474
,
testing leave from buildExpression 474
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 474
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $site_value
        )

)
PREVIOUS in buildExpression 474
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 249
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 250
)
buildExpression 476
while buildExpression 476
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#description'
    [2] => 250
)
while buildExpression 476
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 250
)
while buildExpression 476
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 250
)
testing leave from buildExpression 476
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 476
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 250
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#description'
        )

)
PREVIOUS in buildExpression 476
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 250
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 250
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Если у Вашей компании уже есть сайт, укажите его адрес, <br/>чтобы потенциальные клиенты смогли перейти на него.'
    [2] => 250
)
buildExpression 477
while buildExpression 477
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Если у Вашей компании уже есть сайт, укажите его адрес, <br/>чтобы потенциальные клиенты смогли перейти на него.'
    [2] => 250
)
while buildExpression 477
,
testing leave from buildExpression 477
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 477
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Если у Вашей компании уже есть сайт, укажите его адрес, <br/>чтобы потенциальные клиенты смогли перейти на него.'
        )

)
PREVIOUS in buildExpression 477
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 250
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 6, 6, ''
NEW ==== testing leave from buildExpression AT END 462
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 462
;
testing leave from buildExpression 462
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 462
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'site'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 6
            [commaCount] => 6
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 50
                        )

                    [whitespace] =>         
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3.2 Адрес сайта Вашей компании'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $site_value
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#description'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Если у Вашей компании уже есть сайт, укажите его адрес, <br/>чтобы потенциальные клиенты смогли перейти на него.'
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 462
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 251
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 253
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 253
)
buildExpression 478
while buildExpression 478
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 253
)
buildExpression 479
while buildExpression 479
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 479 next token value = 'phone_1'
buildExpression 480
while buildExpression 480
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_1'
    [2] => 253
)
while buildExpression 480
]
testing leave from buildExpression 480
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 480 next token value =  
NEW ==== testing leave from buildExpression AT END 480
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 480
]
NEW ==== bye bye from buildExpression AT END 480
while buildExpression 479
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 479 next token value =  
NEW ==== testing leave from buildExpression AT END 479
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 479
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 253
)
while buildExpression 479
=
testing leave from buildExpression 479
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 479
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
PREVIOUS in buildExpression 479
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
LEAVING case T_VARIABLE 478
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 253
)
while buildExpression 478
=
while buildExpression 478
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 253
)
while buildExpression 478
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 253
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 253
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 254
)
buildExpression 481
while buildExpression 481
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 254
)
while buildExpression 481
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 254
)
while buildExpression 481
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 254
)
testing leave from buildExpression 481
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 481
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 254
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 481
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 254
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 254
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 254
)
buildExpression 482
while buildExpression 482
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 254
)
while buildExpression 482
,
testing leave from buildExpression 482
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 482
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 482
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 254
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 255
)
buildExpression 483
while buildExpression 483
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 255
)
while buildExpression 483
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 255
)
while buildExpression 483
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 255
)
testing leave from buildExpression 483
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 483
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 255
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 483
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 255
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 255
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 255
)
buildExpression 484
while buildExpression 484
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 255
)
buildExpression 485
while buildExpression 485
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 485 next token value = 'values'
buildExpression 486
while buildExpression 486
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 255
)
while buildExpression 486
]
testing leave from buildExpression 486
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 486 next token value = [
NEW ==== testing leave from buildExpression AT END 486
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 486
]
NEW ==== bye bye from buildExpression AT END 486
while buildExpression 485
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 485 next token value = [
NEW ==== testing leave from buildExpression AT END 485
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 485
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 485 next token value = 'phone_1'
buildExpression 487
while buildExpression 487
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_1'
    [2] => 255
)
while buildExpression 487
]
testing leave from buildExpression 487
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 487 next token value = ,
NEW ==== testing leave from buildExpression AT END 487
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 487
]
NEW ==== bye bye from buildExpression AT END 487
while buildExpression 485
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 485 next token value = ,
NEW ==== testing leave from buildExpression AT END 485
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 485
,
testing leave from buildExpression 485
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 485
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
PREVIOUS in buildExpression 485
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
LEAVING case T_VARIABLE 484
]
NEW ==== testing leave from buildExpression AT END 484
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 484
,
testing leave from buildExpression 484
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 484
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_1'
                        )

                )

        )

)
PREVIOUS in buildExpression 484
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 255
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 256
)
buildExpression 488
while buildExpression 488
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 256
)
while buildExpression 488
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 256
)
while buildExpression 488
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 256
)
testing leave from buildExpression 488
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 488
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 256
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 488
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 256
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 256
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 256
)
buildExpression 489
while buildExpression 489
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 256
)
while buildExpression 489
,
testing leave from buildExpression 489
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 489
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 489
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 256
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 257
)
buildExpression 490
while buildExpression 490
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 257
)
while buildExpression 490
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 257
)
while buildExpression 490
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 257
)
testing leave from buildExpression 490
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 490
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 257
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 490
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 257
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 257
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 257
)
buildExpression 491
while buildExpression 491
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 257
)
while buildExpression 491
,
testing leave from buildExpression 491
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 491
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 491
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 257
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 478
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 478
;
testing leave from buildExpression 478
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 478
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_1'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 478
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 258
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 260
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 260
)
buildExpression 492
while buildExpression 492
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 260
)
buildExpression 493
while buildExpression 493
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 493 next token value = 'phone_2'
buildExpression 494
while buildExpression 494
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_2'
    [2] => 260
)
while buildExpression 494
]
testing leave from buildExpression 494
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 494 next token value =  
NEW ==== testing leave from buildExpression AT END 494
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 494
]
NEW ==== bye bye from buildExpression AT END 494
while buildExpression 493
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 493 next token value =  
NEW ==== testing leave from buildExpression AT END 493
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 493
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 260
)
while buildExpression 493
=
testing leave from buildExpression 493
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 493
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
PREVIOUS in buildExpression 493
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
LEAVING case T_VARIABLE 492
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 260
)
while buildExpression 492
=
while buildExpression 492
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 260
)
while buildExpression 492
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 260
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 260
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 261
)
buildExpression 495
while buildExpression 495
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 261
)
while buildExpression 495
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 261
)
while buildExpression 495
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 261
)
testing leave from buildExpression 495
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 495
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 261
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 495
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 261
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 261
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 261
)
buildExpression 496
while buildExpression 496
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 261
)
while buildExpression 496
,
testing leave from buildExpression 496
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 496
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 496
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 261
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 262
)
buildExpression 497
while buildExpression 497
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 262
)
while buildExpression 497
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 262
)
while buildExpression 497
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 262
)
testing leave from buildExpression 497
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 497
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 262
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 497
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 262
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 262
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 262
)
buildExpression 498
while buildExpression 498
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 262
)
buildExpression 499
while buildExpression 499
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 499 next token value = 'values'
buildExpression 500
while buildExpression 500
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 262
)
while buildExpression 500
]
testing leave from buildExpression 500
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 500 next token value = [
NEW ==== testing leave from buildExpression AT END 500
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 500
]
NEW ==== bye bye from buildExpression AT END 500
while buildExpression 499
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 499 next token value = [
NEW ==== testing leave from buildExpression AT END 499
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 499
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 499 next token value = 'phone_2'
buildExpression 501
while buildExpression 501
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_2'
    [2] => 262
)
while buildExpression 501
]
testing leave from buildExpression 501
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 501 next token value = ,
NEW ==== testing leave from buildExpression AT END 501
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 501
]
NEW ==== bye bye from buildExpression AT END 501
while buildExpression 499
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 499 next token value = ,
NEW ==== testing leave from buildExpression AT END 499
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 499
,
testing leave from buildExpression 499
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 499
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
PREVIOUS in buildExpression 499
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
LEAVING case T_VARIABLE 498
]
NEW ==== testing leave from buildExpression AT END 498
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 498
,
testing leave from buildExpression 498
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 498
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_2'
                        )

                )

        )

)
PREVIOUS in buildExpression 498
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 262
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 263
)
buildExpression 502
while buildExpression 502
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 263
)
while buildExpression 502
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 263
)
while buildExpression 502
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 263
)
testing leave from buildExpression 502
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 502
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 263
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 502
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 263
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 263
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 263
)
buildExpression 503
while buildExpression 503
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 263
)
while buildExpression 503
,
testing leave from buildExpression 503
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 503
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 503
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 263
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 264
)
buildExpression 504
while buildExpression 504
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 264
)
while buildExpression 504
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 264
)
while buildExpression 504
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 264
)
testing leave from buildExpression 504
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 504
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 264
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 504
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 264
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 264
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 264
)
buildExpression 505
while buildExpression 505
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 264
)
while buildExpression 505
,
testing leave from buildExpression 505
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 505
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 505
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 264
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 492
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 492
;
testing leave from buildExpression 492
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 492
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_2'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 492
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 265
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 267
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 267
)
buildExpression 506
while buildExpression 506
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 267
)
buildExpression 507
while buildExpression 507
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 507 next token value = 'phone_3'
buildExpression 508
while buildExpression 508
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_3'
    [2] => 267
)
while buildExpression 508
]
testing leave from buildExpression 508
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 508 next token value =  
NEW ==== testing leave from buildExpression AT END 508
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 508
]
NEW ==== bye bye from buildExpression AT END 508
while buildExpression 507
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 507 next token value =  
NEW ==== testing leave from buildExpression AT END 507
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 507
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 267
)
while buildExpression 507
=
testing leave from buildExpression 507
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 507
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
PREVIOUS in buildExpression 507
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
LEAVING case T_VARIABLE 506
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 267
)
while buildExpression 506
=
while buildExpression 506
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 267
)
while buildExpression 506
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 267
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 267
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 268
)
buildExpression 509
while buildExpression 509
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 268
)
while buildExpression 509
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 268
)
while buildExpression 509
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 268
)
testing leave from buildExpression 509
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 509
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 268
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 509
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 268
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 268
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 268
)
buildExpression 510
while buildExpression 510
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textfield'
    [2] => 268
)
while buildExpression 510
,
testing leave from buildExpression 510
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 510
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textfield'
        )

)
PREVIOUS in buildExpression 510
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 268
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 269
)
buildExpression 511
while buildExpression 511
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 269
)
while buildExpression 511
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 269
)
while buildExpression 511
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 269
)
testing leave from buildExpression 511
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 511
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 269
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 511
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 269
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 269
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 269
)
buildExpression 512
while buildExpression 512
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 269
)
buildExpression 513
while buildExpression 513
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 513 next token value = 'values'
buildExpression 514
while buildExpression 514
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 269
)
while buildExpression 514
]
testing leave from buildExpression 514
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 514 next token value = [
NEW ==== testing leave from buildExpression AT END 514
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 514
]
NEW ==== bye bye from buildExpression AT END 514
while buildExpression 513
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 513 next token value = [
NEW ==== testing leave from buildExpression AT END 513
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 513
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 513 next token value = 'phone_3'
buildExpression 515
while buildExpression 515
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_3'
    [2] => 269
)
while buildExpression 515
]
testing leave from buildExpression 515
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 515 next token value = ,
NEW ==== testing leave from buildExpression AT END 515
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 515
]
NEW ==== bye bye from buildExpression AT END 515
while buildExpression 513
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 513 next token value = ,
NEW ==== testing leave from buildExpression AT END 513
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 513
,
testing leave from buildExpression 513
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 513
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
PREVIOUS in buildExpression 513
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
LEAVING case T_VARIABLE 512
]
NEW ==== testing leave from buildExpression AT END 512
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 512
,
testing leave from buildExpression 512
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 512
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_3'
                        )

                )

        )

)
PREVIOUS in buildExpression 512
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 269
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 270
)
buildExpression 516
while buildExpression 516
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#size'
    [2] => 270
)
while buildExpression 516
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 270
)
while buildExpression 516
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 270
)
testing leave from buildExpression 516
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 516
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 270
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#size'
        )

)
PREVIOUS in buildExpression 516
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 270
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 270
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 270
)
buildExpression 517
while buildExpression 517
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 270
)
while buildExpression 517
,
testing leave from buildExpression 517
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 517
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 517
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 270
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 271
)
buildExpression 518
while buildExpression 518
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#maxlength'
    [2] => 271
)
while buildExpression 518
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 271
)
while buildExpression 518
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 271
)
testing leave from buildExpression 518
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 518
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 271
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#maxlength'
        )

)
PREVIOUS in buildExpression 518
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 271
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 271
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 271
)
buildExpression 519
while buildExpression 519
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 12
    [2] => 271
)
while buildExpression 519
,
testing leave from buildExpression 519
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 519
,
PGPExpression
(
    [operand] => 12
)
PREVIOUS in buildExpression 519
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 271
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 506
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 506
;
testing leave from buildExpression 506
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 506
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textfield'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_3'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#size'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#maxlength'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 12
                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 506
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 272
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 274
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 274
)
buildExpression 520
while buildExpression 520
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 274
)
buildExpression 521
while buildExpression 521
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 521 next token value = 'description'
buildExpression 522
while buildExpression 522
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 274
)
while buildExpression 522
]
testing leave from buildExpression 522
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 522 next token value =  
NEW ==== testing leave from buildExpression AT END 522
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 522
]
NEW ==== bye bye from buildExpression AT END 522
while buildExpression 521
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 521 next token value =  
NEW ==== testing leave from buildExpression AT END 521
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 521
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 274
)
while buildExpression 521
=
testing leave from buildExpression 521
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 521
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
PREVIOUS in buildExpression 521
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
LEAVING case T_VARIABLE 520
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 274
)
while buildExpression 520
=
while buildExpression 520
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 274
)
while buildExpression 520
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 274
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 274
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 275
)
buildExpression 523
while buildExpression 523
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 275
)
while buildExpression 523
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 275
)
while buildExpression 523
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 275
)
testing leave from buildExpression 523
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 523
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 275
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 523
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 275
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 275
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textarea'
    [2] => 275
)
buildExpression 524
while buildExpression 524
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'textarea'
    [2] => 275
)
while buildExpression 524
,
testing leave from buildExpression 524
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 524
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'textarea'
        )

)
PREVIOUS in buildExpression 524
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 275
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 276
)
buildExpression 525
while buildExpression 525
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#title'
    [2] => 276
)
while buildExpression 525
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 276
)
while buildExpression 525
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 276
)
testing leave from buildExpression 525
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 525
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 276
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#title'
        )

)
PREVIOUS in buildExpression 525
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 276
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 276
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3.4 Описание компании'
    [2] => 276
)
buildExpression 526
while buildExpression 526
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3.4 Описание компании'
    [2] => 276
)
while buildExpression 526
,
testing leave from buildExpression 526
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 526
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '3.4 Описание компании'
        )

)
PREVIOUS in buildExpression 526
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 276
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 277
)
buildExpression 527
while buildExpression 527
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#default_value'
    [2] => 277
)
while buildExpression 527
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 277
)
while buildExpression 527
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 277
)
testing leave from buildExpression 527
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 527
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 277
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#default_value'
        )

)
PREVIOUS in buildExpression 527
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 277
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 277
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 277
)
buildExpression 528
while buildExpression 528
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 277
)
buildExpression 529
while buildExpression 529
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 529 next token value = 'values'
buildExpression 530
while buildExpression 530
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 277
)
while buildExpression 530
]
testing leave from buildExpression 530
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 530 next token value = [
NEW ==== testing leave from buildExpression AT END 530
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 530
]
NEW ==== bye bye from buildExpression AT END 530
while buildExpression 529
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 529 next token value = [
NEW ==== testing leave from buildExpression AT END 529
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 529
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 529 next token value = 'description'
buildExpression 531
while buildExpression 531
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 277
)
while buildExpression 531
]
testing leave from buildExpression 531
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 531 next token value = ,
NEW ==== testing leave from buildExpression AT END 531
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 531
]
NEW ==== bye bye from buildExpression AT END 531
while buildExpression 529
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 529 next token value = ,
NEW ==== testing leave from buildExpression AT END 529
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 529
,
testing leave from buildExpression 529
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 529
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
PREVIOUS in buildExpression 529
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
LEAVING case T_VARIABLE 528
]
NEW ==== testing leave from buildExpression AT END 528
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 528
,
testing leave from buildExpression 528
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 528
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'description'
                        )

                )

        )

)
PREVIOUS in buildExpression 528
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 277
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 3, 3, ''
NEW ==== testing leave from buildExpression AT END 520
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 520
;
testing leave from buildExpression 520
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 520
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'description'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 3
            [commaCount] => 3
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'textarea'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '3.4 Описание компании'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#default_value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'values'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'description'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 520
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 278
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //темизация всей формы в местоде attach_template

    [2] => 280
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 281
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 281
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 281
)
buildExpression 532
while buildExpression 532
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 281
)
buildExpression 533
while buildExpression 533
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 533 next token value = '#theme'
buildExpression 534
while buildExpression 534
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#theme'
    [2] => 281
)
while buildExpression 534
]
testing leave from buildExpression 534
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 534 next token value =  
NEW ==== testing leave from buildExpression AT END 534
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 534
]
NEW ==== bye bye from buildExpression AT END 534
while buildExpression 533
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 533 next token value =  
NEW ==== testing leave from buildExpression AT END 533
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 533
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 281
)
while buildExpression 533
=
testing leave from buildExpression 533
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 533
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#theme'
                )

        )

)
PREVIOUS in buildExpression 533
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#theme'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#theme'
                )

        )

)
LEAVING case T_VARIABLE 532
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 281
)
while buildExpression 532
=
while buildExpression 532
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 281
)
while buildExpression 532
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'attach_template'
    [2] => 281
)
while buildExpression 532
;
testing leave from buildExpression 532
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 532
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#theme'
                        )

                )

        )

    [assign] => =
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'attach_template'
        )

)
PREVIOUS in buildExpression 532
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 281
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 283
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 283
)
buildExpression 535
while buildExpression 535
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 283
)
buildExpression 536
while buildExpression 536
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 536 next token value = 'submit'
buildExpression 537
while buildExpression 537
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'submit'
    [2] => 283
)
while buildExpression 537
]
testing leave from buildExpression 537
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 537 next token value =  
NEW ==== testing leave from buildExpression AT END 537
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 537
]
NEW ==== bye bye from buildExpression AT END 537
while buildExpression 536
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 536 next token value =  
NEW ==== testing leave from buildExpression AT END 536
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 536
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 283
)
while buildExpression 536
=
testing leave from buildExpression 536
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 536
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
PREVIOUS in buildExpression 536
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
LEAVING case T_VARIABLE 535
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 283
)
while buildExpression 535
=
while buildExpression 535
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 283
)
while buildExpression 535
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 283
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 283
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 284
)
buildExpression 538
while buildExpression 538
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#type'
    [2] => 284
)
while buildExpression 538
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 284
)
while buildExpression 538
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 284
)
testing leave from buildExpression 538
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 538
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 284
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#type'
        )

)
PREVIOUS in buildExpression 538
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 284
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 284
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'submit'
    [2] => 284
)
buildExpression 539
while buildExpression 539
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'submit'
    [2] => 284
)
while buildExpression 539
,
testing leave from buildExpression 539
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 539
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'submit'
        )

)
PREVIOUS in buildExpression 539
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 284
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 285
)
buildExpression 540
while buildExpression 540
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 285
)
while buildExpression 540
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 285
)
while buildExpression 540
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 285
)
testing leave from buildExpression 540
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 540
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 285
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '#value'
        )

)
PREVIOUS in buildExpression 540
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 285
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 285
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => t
    [2] => 285
)
buildExpression 541
while buildExpression 541
Array
(
    [0] => 307 (T_STRING)
    [1] => t
    [2] => 285
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 542
while buildExpression 542
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Submit'
    [2] => 285
)
while buildExpression 542
)
HITTING RPARENS 542
NEW ==== testing leave from buildExpression AT END 542
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 542
)
NEW ==== bye bye from buildExpression AT END 542
while buildFunctionCall
)
LEAVING case T_STRING 541
NEW ==== testing leave from buildExpression AT END 541
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 541
,
testing leave from buildExpression 541
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 541
,
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => t
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Submit'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 541
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 285
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 2, 2, ''
NEW ==== testing leave from buildExpression AT END 535
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 535
;
testing leave from buildExpression 535
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 535
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'submit'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 2
            [commaCount] => 2
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'submit'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '#value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPFunctionCall
                                (
                                    [parent] => PGPNode
                                        (
                                            [type-3] => 
                                        )

                                    [type] => 601
                                    [name] => Array
                                        (
                                            [type] => 307 (T_STRING)
                                            [value] => t
                                        )

                                    [noparens] => 0
                                    [parameters] => PGPList
                                        (
                                            [0] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'Submit'
                                                        )

                                                )

                                        )

                                    [parentExpression] => PGPExpression
                                        (
                                            [type-1] => 
                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
    
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 535
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 286
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 287
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 287
)
buildExpression 543
while buildExpression 543
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 287
)
buildExpression 544
while buildExpression 544
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 544 next token value = '#redirect'
buildExpression 545
while buildExpression 545
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#redirect'
    [2] => 287
)
while buildExpression 545
]
testing leave from buildExpression 545
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 545 next token value =  
NEW ==== testing leave from buildExpression AT END 545
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 545
]
NEW ==== bye bye from buildExpression AT END 545
while buildExpression 544
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 544 next token value =  
NEW ==== testing leave from buildExpression AT END 544
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 544
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 287
)
while buildExpression 544
=
testing leave from buildExpression 544
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 544
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#redirect'
                )

        )

)
PREVIOUS in buildExpression 544
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#redirect'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#redirect'
                )

        )

)
LEAVING case T_VARIABLE 543
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 287
)
while buildExpression 543
=
while buildExpression 543
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 287
)
while buildExpression 543
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'moj-evakuator/all'
    [2] => 287
)
while buildExpression 543
;
testing leave from buildExpression 543
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 543
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#redirect'
                        )

                )

        )

    [assign] => =
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'moj-evakuator/all'
        )

)
PREVIOUS in buildExpression 543
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
 
    
    [2] => 287
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 336 (T_RETURN)
    [1] => return
    [2] => 289
)
buildFunctionCall
while buildFunctionCall
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 289
)
buildExpression 546
while buildExpression 546
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 289
)
buildExpression 547
while buildExpression 547
;
testing leave from buildExpression 547
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 547
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 547
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 546
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 289
)
while buildExpression 546
;
testing leave from buildExpression 546
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 546
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 546
while buildFunctionCall
;
Hitting ; in while buildFunctionCall
PGPFunctionCall
(
    [parent] => PGPNode
        (
            [type-3] => 
        )

    [type] => 601
    [name] => Array
        (
            [type] => 336 (T_RETURN)
            [value] => return
        )

    [noparens] => 1
    [parameters] => PGPList
        (
            [0] => PGPExpression
                (
                    [operand] => PGPOperand
                        (
                            [type] => 309 (T_VARIABLE)
                            [value] => $form
                        )

                )

        )

    [debug] => 
)
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 289
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 290
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 292
)
buildFunction
buildExpression 548
while buildExpression 548
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 292
)
buildExpression 549
while buildExpression 549
,
testing leave from buildExpression 549
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 549
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 549
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 548
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 292
)
while buildExpression 548
,
testing leave from buildExpression 548
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 548
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 548
buildExpression 550
while buildExpression 550
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 292
)
while buildExpression 550
&
while buildExpression 550
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 292
)
buildExpression 551
while buildExpression 551
)
testing leave from buildExpression 551
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 551
NEW ==== testing leave from buildExpression AT END 551
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 551
)
NEW ==== bye bye from buildExpression AT END 551
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
LEAVING case T_VARIABLE 550
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 292
)
while buildExpression 550
)
testing leave from buildExpression 550
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 550
NEW ==== testing leave from buildExpression AT END 550
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 550
)
NEW ==== bye bye from buildExpression AT END 550
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 292
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 294
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 294
)
buildExpression 552
while buildExpression 552
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 294
)
buildExpression 553
while buildExpression 553
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 294
)
setting add_whitespace
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 552
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 294
)
while buildExpression 552
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 294
)
while buildExpression 552
=
while buildExpression 552
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 294
)
while buildExpression 552
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 294
)
buildExpression 554
while buildExpression 554
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 554 next token value = 'values'
buildExpression 555
while buildExpression 555
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 294
)
while buildExpression 555
]
testing leave from buildExpression 555
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 555 next token value = [
NEW ==== testing leave from buildExpression AT END 555
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 555
]
NEW ==== bye bye from buildExpression AT END 555
while buildExpression 554
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 554 next token value = [
NEW ==== testing leave from buildExpression AT END 554
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 554
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 554 next token value = 'pass'
buildExpression 556
while buildExpression 556
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 294
)
while buildExpression 556
]
testing leave from buildExpression 556
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 556 next token value = ;
NEW ==== testing leave from buildExpression AT END 556
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 556
]
NEW ==== bye bye from buildExpression AT END 556
while buildExpression 554
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 554 next token value = ;
NEW ==== testing leave from buildExpression AT END 554
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 554
;
testing leave from buildExpression 554
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 554
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
PREVIOUS in buildExpression 554
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
LEAVING case T_VARIABLE 552
]
NEW ==== testing leave from buildExpression AT END 552
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 552
;
testing leave from buildExpression 552
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 552
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $pass
        )

    [whitespace] =>   
    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass'
                        )

                )

        )

)
PREVIOUS in buildExpression 552
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 294
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass2
    [2] => 295
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass2
    [2] => 295
)
buildExpression 557
while buildExpression 557
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass2
    [2] => 295
)
buildExpression 558
while buildExpression 558
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 295
)
while buildExpression 558
=
testing leave from buildExpression 558
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 558
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass2
)
PREVIOUS in buildExpression 558
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass2
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass2
)
LEAVING case T_VARIABLE 557
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 295
)
while buildExpression 557
=
while buildExpression 557
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 295
)
while buildExpression 557
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 295
)
buildExpression 559
while buildExpression 559
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 559 next token value = 'values'
buildExpression 560
while buildExpression 560
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 295
)
while buildExpression 560
]
testing leave from buildExpression 560
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 560 next token value = [
NEW ==== testing leave from buildExpression AT END 560
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 560
]
NEW ==== bye bye from buildExpression AT END 560
while buildExpression 559
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 559 next token value = [
NEW ==== testing leave from buildExpression AT END 559
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 559
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 559 next token value = 'pass2'
buildExpression 561
while buildExpression 561
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass2'
    [2] => 295
)
while buildExpression 561
]
testing leave from buildExpression 561
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 561 next token value = ;
NEW ==== testing leave from buildExpression AT END 561
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 561
]
NEW ==== bye bye from buildExpression AT END 561
while buildExpression 559
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 559 next token value = ;
NEW ==== testing leave from buildExpression AT END 559
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 559
;
testing leave from buildExpression 559
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 559
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
PREVIOUS in buildExpression 559
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
LEAVING case T_VARIABLE 557
]
NEW ==== testing leave from buildExpression AT END 557
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 557
;
testing leave from buildExpression 557
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 557
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $pass2
        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass2'
                        )

                )

        )

)
PREVIOUS in buildExpression 557
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 295
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $e_phone_1
    [2] => 296
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $e_phone_1
    [2] => 296
)
buildExpression 562
while buildExpression 562
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $e_phone_1
    [2] => 296
)
buildExpression 563
while buildExpression 563
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 296
)
while buildExpression 563
=
testing leave from buildExpression 563
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 563
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $e_phone_1
)
PREVIOUS in buildExpression 563
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $e_phone_1
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $e_phone_1
)
LEAVING case T_VARIABLE 562
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 296
)
while buildExpression 562
=
while buildExpression 562
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 296
)
while buildExpression 562
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 296
)
buildExpression 564
while buildExpression 564
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 564 next token value = 'values'
buildExpression 565
while buildExpression 565
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 296
)
while buildExpression 565
]
testing leave from buildExpression 565
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 565 next token value = [
NEW ==== testing leave from buildExpression AT END 565
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 565
]
NEW ==== bye bye from buildExpression AT END 565
while buildExpression 564
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 564 next token value = [
NEW ==== testing leave from buildExpression AT END 564
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 564
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 564 next token value = 'e_phone_1'
buildExpression 566
while buildExpression 566
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 296
)
while buildExpression 566
]
testing leave from buildExpression 566
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 566 next token value = ;
NEW ==== testing leave from buildExpression AT END 566
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 566
]
NEW ==== bye bye from buildExpression AT END 566
while buildExpression 564
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 564 next token value = ;
NEW ==== testing leave from buildExpression AT END 564
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 564
;
testing leave from buildExpression 564
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 564
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
PREVIOUS in buildExpression 564
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
LEAVING case T_VARIABLE 562
]
NEW ==== testing leave from buildExpression AT END 562
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 562
;
testing leave from buildExpression 562
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 562
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $e_phone_1
        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_1'
                        )

                )

        )

)
PREVIOUS in buildExpression 562
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 296
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 298
)
buildConditional
while buildConditional
(
buildExpression 567
while buildExpression 567
!
while buildExpression 567
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $e_phone_1
    [2] => 298
)
buildExpression 568
while buildExpression 568
)
testing leave from buildExpression 568
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 568
NEW ==== testing leave from buildExpression AT END 568
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 568
)
NEW ==== bye bye from buildExpression AT END 568
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $e_phone_1
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $e_phone_1
)
LEAVING case T_VARIABLE 567
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $e_phone_1
    [2] => 298
)
while buildExpression 567
)
testing leave from buildExpression 567
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 567
NEW ==== testing leave from buildExpression AT END 567
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 567
)
NEW ==== bye bye from buildExpression AT END 567
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 298
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 299
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 299
)
buildExpression 569
while buildExpression 569
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 299
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 570
while buildExpression 570
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 299
)
while buildExpression 570
,
testing leave from buildExpression 570
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 570
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'e_phone_1'
        )

)
PREVIOUS in buildExpression 570
while buildFunctionCall
,
buildExpression 571
while buildExpression 571
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 299
)
while buildExpression 571
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Поле 1.6 Телефон водителя эвакуатора обязательно для заполнения!'
    [2] => 299
)
while buildExpression 571
)
HITTING RPARENS 571
NEW ==== testing leave from buildExpression AT END 571
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 571
)
NEW ==== bye bye from buildExpression AT END 571
while buildFunctionCall
)
LEAVING case T_STRING 569
NEW ==== testing leave from buildExpression AT END 569
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 569
;
testing leave from buildExpression 569
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 569
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => form_set_error
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'e_phone_1'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Поле 1.6 Телефон водителя эвакуатора обязательно для заполнения!'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 569
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 299
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 300
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 301
)
buildConditional
while buildConditional
(
buildExpression 572
while buildExpression 572
Array
(
    [0] => 307 (T_STRING)
    [1] => strlen
    [2] => 301
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 573
while buildExpression 573
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 301
)
buildExpression 574
while buildExpression 574
)
HITTING RPARENS 574
NEW ==== testing leave from buildExpression AT END 574
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 574
)
NEW ==== bye bye from buildExpression AT END 574
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 573
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 301
)
while buildExpression 573
)
HITTING RPARENS 573
NEW ==== testing leave from buildExpression AT END 573
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 573
)
NEW ==== bye bye from buildExpression AT END 573
while buildFunctionCall
)
LEAVING case T_STRING 572
NEW ==== testing leave from buildExpression AT END 572
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 572
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 301
)
while buildExpression 572
<
while buildExpression 572
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 301
)
while buildExpression 572
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 5
    [2] => 301
)
while buildExpression 572
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 301
)
while buildExpression 572
)
testing leave from buildExpression 572
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 572
NEW ==== testing leave from buildExpression AT END 572
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 572
)
NEW ==== bye bye from buildExpression AT END 572
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 301
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 302
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 302
)
buildExpression 575
while buildExpression 575
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 302
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 576
while buildExpression 576
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 302
)
while buildExpression 576
,
testing leave from buildExpression 576
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 576
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'pass'
        )

)
PREVIOUS in buildExpression 576
while buildFunctionCall
,
buildExpression 577
while buildExpression 577
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 302
)
while buildExpression 577
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Длина пароля должна быть больше 4 символов!'
    [2] => 302
)
while buildExpression 577
)
HITTING RPARENS 577
NEW ==== testing leave from buildExpression AT END 577
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 577
)
NEW ==== bye bye from buildExpression AT END 577
while buildFunctionCall
)
LEAVING case T_STRING 575
NEW ==== testing leave from buildExpression AT END 575
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 575
;
testing leave from buildExpression 575
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 575
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => form_set_error
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'pass'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Длина пароля должна быть больше 4 символов!'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 575
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 302
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 303
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 305
)
buildConditional
while buildConditional
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 305
)
while buildConditional
(
buildExpression 578
while buildExpression 578
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass2
    [2] => 305
)
buildExpression 579
while buildExpression 579
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 305
)
while buildExpression 579
Array
(
    [0] => 282 (T_IS_NOT_EQUAL)
    [1] => !=
    [2] => 305
)
testing leave from buildExpression 579
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 579
Array
(
    [0] => 282 (T_IS_NOT_EQUAL)
    [1] => !=
    [2] => 305
)
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass2
)
PREVIOUS in buildExpression 579
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass2
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass2
)
LEAVING case T_VARIABLE 578
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 305
)
while buildExpression 578
Array
(
    [0] => 282 (T_IS_NOT_EQUAL)
    [1] => !=
    [2] => 305
)
while buildExpression 578
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 305
)
while buildExpression 578
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 305
)
buildExpression 580
while buildExpression 580
)
testing leave from buildExpression 580
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 580
NEW ==== testing leave from buildExpression AT END 580
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 580
)
NEW ==== bye bye from buildExpression AT END 580
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 578
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 305
)
while buildExpression 578
)
testing leave from buildExpression 578
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 578
NEW ==== testing leave from buildExpression AT END 578
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 578
)
NEW ==== bye bye from buildExpression AT END 578
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 305
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 306
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 306
)
buildExpression 581
while buildExpression 581
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 306
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 582
while buildExpression 582
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass1'
    [2] => 306
)
while buildExpression 582
,
testing leave from buildExpression 582
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 582
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'pass1'
        )

)
PREVIOUS in buildExpression 582
while buildFunctionCall
,
buildExpression 583
while buildExpression 583
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 306
)
while buildExpression 583
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Значения в полях "2.3 Пароль" и "2.4 Повтор пароля" должны совпадать!'
    [2] => 306
)
while buildExpression 583
)
HITTING RPARENS 583
NEW ==== testing leave from buildExpression AT END 583
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 583
)
NEW ==== bye bye from buildExpression AT END 583
while buildFunctionCall
)
LEAVING case T_STRING 581
NEW ==== testing leave from buildExpression AT END 581
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 581
;
testing leave from buildExpression 581
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 581
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => form_set_error
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'pass1'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Значения в полях "2.3 Пароль" и "2.4 Повтор пароля" должны совпадать!'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 581
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 306
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    
    [2] => 307
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 309
)
buildConditional
while buildConditional
(
buildExpression 584
while buildExpression 584
!
while buildExpression 584
Array
(
    [0] => 307 (T_STRING)
    [1] => filter_var
    [2] => 309
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operator] => !
    [whitespace] => 
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 585
while buildExpression 585
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 309
)
buildExpression 586
while buildExpression 586
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 586 next token value = 'values'
buildExpression 587
while buildExpression 587
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 309
)
while buildExpression 587
]
testing leave from buildExpression 587
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 587 next token value = [
NEW ==== testing leave from buildExpression AT END 587
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 587
]
NEW ==== bye bye from buildExpression AT END 587
while buildExpression 586
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 586 next token value = [
NEW ==== testing leave from buildExpression AT END 586
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 586
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 586 next token value = 'mail'
buildExpression 588
while buildExpression 588
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 309
)
while buildExpression 588
]
testing leave from buildExpression 588
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 588 next token value = ,
NEW ==== testing leave from buildExpression AT END 588
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 588
]
NEW ==== bye bye from buildExpression AT END 588
while buildExpression 586
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 586 next token value = ,
NEW ==== testing leave from buildExpression AT END 586
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 586
,
testing leave from buildExpression 586
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 586
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
PREVIOUS in buildExpression 586
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
LEAVING case T_VARIABLE 585
]
NEW ==== testing leave from buildExpression AT END 585
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 585
,
testing leave from buildExpression 585
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 585
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

        )

)
PREVIOUS in buildExpression 585
while buildFunctionCall
,
buildExpression 589
while buildExpression 589
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 309
)
while buildExpression 589
Array
(
    [0] => 307 (T_STRING)
    [1] => FILTER_VALIDATE_EMAIL
    [2] => 309
)
while buildExpression 589
)
HITTING RPARENS 589
NEW ==== testing leave from buildExpression AT END 589
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 589
)
NEW ==== bye bye from buildExpression AT END 589
while buildFunctionCall
)
LEAVING case T_STRING 584
NEW ==== testing leave from buildExpression AT END 584
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 584
)
testing leave from buildExpression 584
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 584
NEW ==== testing leave from buildExpression AT END 584
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 584
)
NEW ==== bye bye from buildExpression AT END 584
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 309
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 310
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 310
)
buildExpression 590
while buildExpression 590
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 310
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 591
while buildExpression 591
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 310
)
while buildExpression 591
,
testing leave from buildExpression 591
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 591
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'mail'
        )

)
PREVIOUS in buildExpression 591
while buildFunctionCall
,
buildExpression 592
while buildExpression 592
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 310
)
while buildExpression 592
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Поле 2.2 содержит неверный адрес электронной почты! Перепроверьте, пожалуйста адрес электронной почты.'
    [2] => 310
)
while buildExpression 592
)
HITTING RPARENS 592
NEW ==== testing leave from buildExpression AT END 592
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 592
)
NEW ==== bye bye from buildExpression AT END 592
while buildFunctionCall
)
LEAVING case T_STRING 590
NEW ==== testing leave from buildExpression AT END 590
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 590
;
testing leave from buildExpression 590
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 590
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => form_set_error
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'mail'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Поле 2.2 содержит неверный адрес электронной почты! Перепроверьте, пожалуйста адрес электронной почты.'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 590
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 310
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 311
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 313
)
buildConditional
while buildConditional
(
buildExpression 593
while buildExpression 593
Array
(
    [0] => 307 (T_STRING)
    [1] => user_load
    [2] => 313
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 594
while buildExpression 594
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 313
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 313
)
buildExpression 595
while buildExpression 595
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 313
)
while buildExpression 595
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 313
)
while buildExpression 595
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 313
)
testing leave from buildExpression 595
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 595
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 313
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'mail'
        )

)
PREVIOUS in buildExpression 595
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 313
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 313
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 313
)
buildExpression 596
while buildExpression 596
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 313
)
buildExpression 597
while buildExpression 597
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 597 next token value = 'values'
buildExpression 598
while buildExpression 598
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 313
)
while buildExpression 598
]
testing leave from buildExpression 598
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 598 next token value = [
NEW ==== testing leave from buildExpression AT END 598
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 598
]
NEW ==== bye bye from buildExpression AT END 598
while buildExpression 597
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 597 next token value = [
NEW ==== testing leave from buildExpression AT END 597
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 597
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 597 next token value = 'mail'
buildExpression 599
while buildExpression 599
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 313
)
while buildExpression 599
]
testing leave from buildExpression 599
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 599 next token value = )
NEW ==== testing leave from buildExpression AT END 599
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 599
]
NEW ==== bye bye from buildExpression AT END 599
while buildExpression 597
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 597 next token value = )
NEW ==== testing leave from buildExpression AT END 597
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 597
)
testing leave from buildExpression 597
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 597
NEW ==== testing leave from buildExpression AT END 597
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 597
)
NEW ==== bye bye from buildExpression AT END 597
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
LEAVING case T_VARIABLE 596
]
NEW ==== testing leave from buildExpression AT END 596
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 596
)
testing leave from buildExpression 596
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 596
NEW ==== testing leave from buildExpression AT END 596
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 596
)
NEW ==== bye bye from buildExpression AT END 596
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, '1'
NEW ==== testing leave from buildExpression AT END 594
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 594
)
HITTING RPARENS 594
NEW ==== testing leave from buildExpression AT END 594
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 594
)
NEW ==== bye bye from buildExpression AT END 594
while buildFunctionCall
)
LEAVING case T_STRING 593
NEW ==== testing leave from buildExpression AT END 593
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 593
)
testing leave from buildExpression 593
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 593
NEW ==== testing leave from buildExpression AT END 593
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 593
)
NEW ==== bye bye from buildExpression AT END 593
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 313
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 314
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 314
)
buildExpression 600
while buildExpression 600
Array
(
    [0] => 307 (T_STRING)
    [1] => form_set_error
    [2] => 314
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 601
while buildExpression 601
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 314
)
while buildExpression 601
,
testing leave from buildExpression 601
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 601
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'mail'
        )

)
PREVIOUS in buildExpression 601
while buildFunctionCall
,
buildExpression 602
while buildExpression 602
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 314
)
while buildExpression 602
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Пользователь с такой электронной почтой уже зарегистрирован. <a href="/user/password">Забыли пароль?</a>'
    [2] => 314
)
while buildExpression 602
)
HITTING RPARENS 602
NEW ==== testing leave from buildExpression AT END 602
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 602
)
NEW ==== bye bye from buildExpression AT END 602
while buildFunctionCall
)
LEAVING case T_STRING 600
NEW ==== testing leave from buildExpression AT END 600
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 600
;
testing leave from buildExpression 600
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 600
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => form_set_error
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'mail'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Пользователь с такой электронной почтой уже зарегистрирован. <a href="/user/password">Забыли пароль?</a>'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 600
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 314
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 315
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 316
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 318
)
buildFunction
buildExpression 603
while buildExpression 603
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 318
)
buildExpression 604
while buildExpression 604
,
testing leave from buildExpression 604
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 604
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 604
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 603
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 318
)
while buildExpression 603
,
testing leave from buildExpression 603
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 603
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 603
buildExpression 605
while buildExpression 605
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 318
)
while buildExpression 605
&
while buildExpression 605
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 318
)
buildExpression 606
while buildExpression 606
)
testing leave from buildExpression 606
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 606
NEW ==== testing leave from buildExpression AT END 606
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 606
)
NEW ==== bye bye from buildExpression AT END 606
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
LEAVING case T_VARIABLE 605
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 318
)
while buildExpression 605
)
testing leave from buildExpression 605
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 605
NEW ==== testing leave from buildExpression AT END 605
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 605
)
NEW ==== bye bye from buildExpression AT END 605
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 318
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 341 (T_GLOBAL)
    [1] => global
    [2] => 319
)
buildAssignment
XXXXXX type = 341 (T_GLOBAL)
while buildAssignment
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 319
)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 319
)
buildExpression 607
while buildExpression 607
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 319
)
buildExpression 608
while buildExpression 608
;
testing leave from buildExpression 608
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 608
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
PREVIOUS in buildExpression 608
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
LEAVING case T_VARIABLE 607
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 319
)
while buildExpression 607
;
testing leave from buildExpression 607
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 607
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $user
        )

)
PREVIOUS in buildExpression 607
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 319
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 320
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 320
)
buildExpression 609
while buildExpression 609
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 320
)
buildExpression 610
while buildExpression 610
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 320
)
while buildExpression 610
=
testing leave from buildExpression 610
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 610
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
PREVIOUS in buildExpression 610
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
LEAVING case T_VARIABLE 609
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 320
)
while buildExpression 609
=
while buildExpression 609
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 320
)
while buildExpression 609
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 320
)
buildExpression 611
while buildExpression 611
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 611 next token value = 'mail'
buildExpression 612
while buildExpression 612
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 320
)
while buildExpression 612
]
testing leave from buildExpression 612
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 612 next token value = [
NEW ==== testing leave from buildExpression AT END 612
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 612
]
NEW ==== bye bye from buildExpression AT END 612
while buildExpression 611
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 611 next token value = [
NEW ==== testing leave from buildExpression AT END 611
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 611
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 611 next token value = '#value'
buildExpression 613
while buildExpression 613
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 320
)
while buildExpression 613
]
testing leave from buildExpression 613
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 613 next token value = ;
NEW ==== testing leave from buildExpression AT END 613
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 613
]
NEW ==== bye bye from buildExpression AT END 613
while buildExpression 611
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 611 next token value = ;
NEW ==== testing leave from buildExpression AT END 611
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 611
;
testing leave from buildExpression 611
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 611
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 611
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 609
]
NEW ==== testing leave from buildExpression AT END 609
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 609
;
testing leave from buildExpression 609
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 609
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $mail
        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 609
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 320
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 321
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 321
)
buildExpression 614
while buildExpression 614
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 321
)
buildExpression 615
while buildExpression 615
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 321
)
while buildExpression 615
=
testing leave from buildExpression 615
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 615
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
PREVIOUS in buildExpression 615
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 614
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 321
)
while buildExpression 614
=
while buildExpression 614
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 321
)
while buildExpression 614
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 321
)
buildExpression 616
while buildExpression 616
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 616 next token value = 'pass'
buildExpression 617
while buildExpression 617
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 321
)
while buildExpression 617
]
testing leave from buildExpression 617
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 617 next token value = [
NEW ==== testing leave from buildExpression AT END 617
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 617
]
NEW ==== bye bye from buildExpression AT END 617
while buildExpression 616
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 616 next token value = [
NEW ==== testing leave from buildExpression AT END 616
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 616
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 616 next token value = '#value'
buildExpression 618
while buildExpression 618
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 321
)
while buildExpression 618
]
testing leave from buildExpression 618
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 618 next token value = ;
NEW ==== testing leave from buildExpression AT END 618
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 618
]
NEW ==== bye bye from buildExpression AT END 618
while buildExpression 616
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 616 next token value = ;
NEW ==== testing leave from buildExpression AT END 616
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 616
;
testing leave from buildExpression 616
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 616
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 616
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 614
]
NEW ==== testing leave from buildExpression AT END 614
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 614
;
testing leave from buildExpression 614
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 614
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $pass
        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 614
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 321
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $new_user
    [2] => 322
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $new_user
    [2] => 322
)
buildExpression 619
while buildExpression 619
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $new_user
    [2] => 322
)
buildExpression 620
while buildExpression 620
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 322
)
while buildExpression 620
=
testing leave from buildExpression 620
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 620
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $new_user
)
PREVIOUS in buildExpression 620
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $new_user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $new_user
)
LEAVING case T_VARIABLE 619
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 322
)
while buildExpression 619
=
while buildExpression 619
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 322
)
while buildExpression 619
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 322
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 322
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'status'
    [2] => 323
)
buildExpression 621
while buildExpression 621
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'status'
    [2] => 323
)
while buildExpression 621
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 323
)
while buildExpression 621
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 323
)
testing leave from buildExpression 621
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 621
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 323
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'status'
        )

)
PREVIOUS in buildExpression 621
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 323
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 323
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 323
)
buildExpression 622
while buildExpression 622
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 323
)
while buildExpression 622
,
testing leave from buildExpression 622
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 622
,
PGPExpression
(
    [operand] => 1
)
PREVIOUS in buildExpression 622
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 323
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 324
)
buildExpression 623
while buildExpression 623
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 324
)
while buildExpression 623
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 324
)
while buildExpression 623
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 324
)
testing leave from buildExpression 623
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 623
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 324
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'mail'
        )

    [whitespace] =>    
)
PREVIOUS in buildExpression 623
inside default case return from buildExpression
ELSEIF deleteLast on T_DOUBLE_ARROW
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 324
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 324
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 324
)
buildExpression 624
while buildExpression 624
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 324
)
buildExpression 625
while buildExpression 625
,
testing leave from buildExpression 625
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 625
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
PREVIOUS in buildExpression 625
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
LEAVING case T_VARIABLE 624
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 324
)
while buildExpression 624
,
testing leave from buildExpression 624
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 624
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $mail
        )

)
PREVIOUS in buildExpression 624
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 324
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 325
)
buildExpression 626
while buildExpression 626
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 325
)
while buildExpression 626
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 325
)
while buildExpression 626
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 325
)
testing leave from buildExpression 626
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 626
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 325
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'pass'
        )

    [whitespace] =>    
)
PREVIOUS in buildExpression 626
inside default case return from buildExpression
ELSEIF deleteLast on T_DOUBLE_ARROW
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 325
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 325
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 325
)
buildExpression 627
while buildExpression 627
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 325
)
buildExpression 628
while buildExpression 628
,
testing leave from buildExpression 628
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 628
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
PREVIOUS in buildExpression 628
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 627
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 325
)
while buildExpression 627
,
testing leave from buildExpression 627
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 627
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $pass
        )

)
PREVIOUS in buildExpression 627
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 325
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'name'
    [2] => 326
)
buildExpression 629
while buildExpression 629
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'name'
    [2] => 326
)
while buildExpression 629
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 326
)
while buildExpression 629
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 326
)
testing leave from buildExpression 629
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 629
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 326
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'name'
        )

    [whitespace] =>    
)
PREVIOUS in buildExpression 629
inside default case return from buildExpression
ELSEIF deleteLast on T_DOUBLE_ARROW
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 326
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 326
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 326
)
buildExpression 630
while buildExpression 630
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 326
)
buildExpression 631
while buildExpression 631
,
testing leave from buildExpression 631
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 631
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
PREVIOUS in buildExpression 631
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
LEAVING case T_VARIABLE 630
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 326
)
while buildExpression 630
,
testing leave from buildExpression 630
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 630
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $mail
        )

)
PREVIOUS in buildExpression 630
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 326
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 4, 4, ''
NEW ==== testing leave from buildExpression AT END 619
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 619
;
testing leave from buildExpression 619
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 619
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $new_user
        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 4
            [commaCount] => 4
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'status'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 1
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'mail'
                                )

                        )

                    [whitespace] =>    
                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $mail
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'pass'
                                )

                        )

                    [whitespace] =>    
                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $pass
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'name'
                                )

                        )

                    [whitespace] =>    
                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $mail
                                )

                        )

                    [whitespace] => 
        
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 619
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 327
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 328
)
buildConditional
while buildConditional
(
buildExpression 632
while buildExpression 632
!
while buildExpression 632
Array
(
    [0] => 307 (T_STRING)
    [1] => user_load
    [2] => 328
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operator] => !
    [whitespace] => 
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 633
while buildExpression 633
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 328
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 328
)
buildExpression 634
while buildExpression 634
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 328
)
while buildExpression 634
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 328
)
while buildExpression 634
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 328
)
testing leave from buildExpression 634
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 634
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 328
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'mail'
        )

)
PREVIOUS in buildExpression 634
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 328
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 328
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 328
)
buildExpression 635
while buildExpression 635
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 328
)
buildExpression 636
while buildExpression 636
)
testing leave from buildExpression 636
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 636
NEW ==== testing leave from buildExpression AT END 636
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 636
)
NEW ==== bye bye from buildExpression AT END 636
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
LEAVING case T_VARIABLE 635
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 328
)
while buildExpression 635
)
testing leave from buildExpression 635
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 635
NEW ==== testing leave from buildExpression AT END 635
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 635
)
NEW ==== bye bye from buildExpression AT END 635
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, '1'
NEW ==== testing leave from buildExpression AT END 633
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 633
)
HITTING RPARENS 633
NEW ==== testing leave from buildExpression AT END 633
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 633
)
NEW ==== bye bye from buildExpression AT END 633
while buildFunctionCall
)
LEAVING case T_STRING 632
NEW ==== testing leave from buildExpression AT END 632
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 632
)
testing leave from buildExpression 632
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 632
NEW ==== testing leave from buildExpression AT END 632
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 632
)
NEW ==== bye bye from buildExpression AT END 632
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 328
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //Зарегистрировать нового пользователя

    [2] => 329
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
    [2] => 330
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $created_user
    [2] => 330
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $created_user
    [2] => 330
)
buildExpression 637
while buildExpression 637
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $created_user
    [2] => 330
)
buildExpression 638
while buildExpression 638
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 330
)
while buildExpression 638
=
testing leave from buildExpression 638
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 638
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $created_user
)
PREVIOUS in buildExpression 638
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $created_user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $created_user
)
LEAVING case T_VARIABLE 637
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 330
)
while buildExpression 637
=
while buildExpression 637
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 330
)
while buildExpression 637
Array
(
    [0] => 307 (T_STRING)
    [1] => user_save
    [2] => 330
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $created_user
        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 639
while buildExpression 639
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => ''
    [2] => 330
)
while buildExpression 639
,
testing leave from buildExpression 639
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 639
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => ''
        )

)
PREVIOUS in buildExpression 639
while buildFunctionCall
,
buildExpression 640
while buildExpression 640
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 330
)
while buildExpression 640
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $new_user
    [2] => 330
)
buildExpression 641
while buildExpression 641
)
HITTING RPARENS 641
NEW ==== testing leave from buildExpression AT END 641
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 641
)
NEW ==== bye bye from buildExpression AT END 641
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $new_user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $new_user
)
LEAVING case T_VARIABLE 640
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $new_user
    [2] => 330
)
while buildExpression 640
)
HITTING RPARENS 640
NEW ==== testing leave from buildExpression AT END 640
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 640
)
NEW ==== bye bye from buildExpression AT END 640
while buildFunctionCall
)
LEAVING case T_STRING 637
NEW ==== testing leave from buildExpression AT END 637
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 637
;
testing leave from buildExpression 637
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 637
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $created_user
        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => user_save
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => ''
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $new_user
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 637
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 330
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //Авторизовать нового пользователя.

    [2] => 331
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
    [2] => 332
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 332
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 332
)
buildExpression 642
while buildExpression 642
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 332
)
buildExpression 643
while buildExpression 643
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildExpression 643
=
testing leave from buildExpression 643
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 643
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
PREVIOUS in buildExpression 643
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
LEAVING case T_VARIABLE 642
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildExpression 642
=
while buildExpression 642
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildExpression 642
Array
(
    [0] => 307 (T_STRING)
    [1] => user_load
    [2] => 332
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $user
        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 644
while buildExpression 644
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 332
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 332
)
buildExpression 645
while buildExpression 645
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 332
)
while buildExpression 645
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildExpression 645
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
testing leave from buildExpression 645
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 645
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'mail'
        )

)
PREVIOUS in buildExpression 645
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 332
)
buildExpression 646
while buildExpression 646
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 332
)
buildExpression 647
while buildExpression 647
,
testing leave from buildExpression 647
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 647
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
PREVIOUS in buildExpression 647
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
LEAVING case T_VARIABLE 646
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 332
)
while buildExpression 646
,
testing leave from buildExpression 646
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 646
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $mail
        )

)
PREVIOUS in buildExpression 646
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 332
)
buildExpression 648
while buildExpression 648
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 332
)
while buildExpression 648
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildExpression 648
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
testing leave from buildExpression 648
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 648
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'pass'
        )

)
PREVIOUS in buildExpression 648
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => trim
    [2] => 332
)
buildExpression 649
while buildExpression 649
Array
(
    [0] => 307 (T_STRING)
    [1] => trim
    [2] => 332
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 650
while buildExpression 650
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 332
)
buildExpression 651
while buildExpression 651
)
HITTING RPARENS 651
NEW ==== testing leave from buildExpression AT END 651
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 651
)
NEW ==== bye bye from buildExpression AT END 651
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 650
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 332
)
while buildExpression 650
)
HITTING RPARENS 650
NEW ==== testing leave from buildExpression AT END 650
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 650
)
NEW ==== bye bye from buildExpression AT END 650
while buildFunctionCall
)
LEAVING case T_STRING 649
NEW ==== testing leave from buildExpression AT END 649
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 649
,
testing leave from buildExpression 649
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 649
,
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => trim
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $pass
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 649
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'status'
    [2] => 332
)
buildExpression 652
while buildExpression 652
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'status'
    [2] => 332
)
while buildExpression 652
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildExpression 652
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
testing leave from buildExpression 652
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 652
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'status'
        )

)
PREVIOUS in buildExpression 652
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 332
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 332
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 332
)
buildExpression 653
while buildExpression 653
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 332
)
while buildExpression 653
)
testing leave from buildExpression 653
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 653
NEW ==== testing leave from buildExpression AT END 653
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 653
)
NEW ==== bye bye from buildExpression AT END 653
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 3, 3, '1'
NEW ==== testing leave from buildExpression AT END 644
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 644
)
HITTING RPARENS 644
NEW ==== testing leave from buildExpression AT END 644
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 644
)
NEW ==== bye bye from buildExpression AT END 644
while buildFunctionCall
)
LEAVING case T_STRING 642
NEW ==== testing leave from buildExpression AT END 642
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 642
;
testing leave from buildExpression 642
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 642
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $user
        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => user_load
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 3
                                    [commaCount] => 2
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'mail'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPOperand
                                                        (
                                                            [type] => 309 (T_VARIABLE)
                                                            [value] => $mail
                                                        )

                                                )

                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'pass'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPFunctionCall
                                                        (
                                                            [parent] => PGPNode
                                                                (
                                                                    [type-3] => 
                                                                )

                                                            [type] => 601
                                                            [name] => Array
                                                                (
                                                                    [type] => 307 (T_STRING)
                                                                    [value] => trim
                                                                )

                                                            [noparens] => 0
                                                            [parameters] => PGPList
                                                                (
                                                                    [0] => PGPExpression
                                                                        (
                                                                            [operand] => PGPOperand
                                                                                (
                                                                                    [type] => 309 (T_VARIABLE)
                                                                                    [value] => $pass
                                                                                )

                                                                        )

                                                                )

                                                            [parentExpression] => PGPExpression
                                                                (
                                                                    [type-1] => 
                                                                )

                                                            [debug] => 
                                                        )

                                                )

                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'status'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => 1
                                                )

                                        )

                                    [debug] => 
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 642
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 332
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 333
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 333
)
buildExpression 654
while buildExpression 654
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 333
)
buildExpression 655
while buildExpression 655
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 333
)
while buildExpression 655
Array
(
    [0] => 307 (T_STRING)
    [1] => password
    [2] => 333
)
while buildExpression 655
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 333
)
while buildExpression 655
=
testing leave from buildExpression 655
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 655
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => password
        )

)
PREVIOUS in buildExpression 655
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => password
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => password
        )

)
LEAVING case T_VARIABLE 654
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 333
)
while buildExpression 654
=
while buildExpression 654
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 333
)
while buildExpression 654
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 333
)
buildExpression 656
while buildExpression 656
;
testing leave from buildExpression 656
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 656
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
PREVIOUS in buildExpression 656
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $pass
)
LEAVING case T_VARIABLE 654
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $pass
    [2] => 333
)
while buildExpression 654
;
testing leave from buildExpression 654
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 654
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $user
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => password
                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $pass
        )

)
PREVIOUS in buildExpression 654
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 333
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 334
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 334
)
buildExpression 657
while buildExpression 657
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 334
)
buildExpression 658
while buildExpression 658
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 334
)
while buildExpression 658
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 334
)
testing leave from buildExpression 658
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 658
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 334
)
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
PREVIOUS in buildExpression 658
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
LEAVING case T_VARIABLE 657
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 334
)
while buildExpression 657
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 334
)
while buildExpression 657
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 334
)
while buildExpression 657
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Вы удачно зарегистрированы в нашем каталоге! <br>Выполнен автоматический вход в личный кабинет.<br/>'
    [2] => 334
)
while buildExpression 657
;
testing leave from buildExpression 657
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 657
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $message
        )

    [assign] => .=
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Вы удачно зарегистрированы в нашем каталоге! <br>Выполнен автоматический вход в личный кабинет.<br/>'
        )

)
PREVIOUS in buildExpression 657
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 334
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => db_query
    [2] => 335
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => db_query
    [2] => 335
)
buildExpression 659
while buildExpression 659
Array
(
    [0] => 307 (T_STRING)
    [1] => db_query
    [2] => 335
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 660
while buildExpression 660
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => "UPDATE {profile_values} SET value = '%s' WHERE fid = 3 AND uid = %d"
    [2] => 335
)
while buildExpression 660
,
testing leave from buildExpression 660
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 660
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => "UPDATE {profile_values} SET value = '%s' WHERE fid = 3 AND uid = %d"
        )

)
PREVIOUS in buildExpression 660
while buildFunctionCall
,
buildExpression 661
while buildExpression 661
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 335
)
while buildExpression 661
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 335
)
buildExpression 662
while buildExpression 662
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 662 next token value = 'surname'
buildExpression 663
while buildExpression 663
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'surname'
    [2] => 335
)
while buildExpression 663
]
testing leave from buildExpression 663
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 663 next token value = [
NEW ==== testing leave from buildExpression AT END 663
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 663
]
NEW ==== bye bye from buildExpression AT END 663
while buildExpression 662
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 662 next token value = [
NEW ==== testing leave from buildExpression AT END 662
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 662
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 662 next token value = '#value'
buildExpression 664
while buildExpression 664
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 335
)
while buildExpression 664
]
testing leave from buildExpression 664
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 664 next token value = ,
NEW ==== testing leave from buildExpression AT END 664
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 664
]
NEW ==== bye bye from buildExpression AT END 664
while buildExpression 662
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 662 next token value = ,
NEW ==== testing leave from buildExpression AT END 662
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 662
,
testing leave from buildExpression 662
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 662
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 662
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 661
]
NEW ==== testing leave from buildExpression AT END 661
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 661
,
testing leave from buildExpression 661
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 661
,
PGPExpression
(
    [whitespace] =>   
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'surname'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 661
while buildFunctionCall
,
buildExpression 665
while buildExpression 665
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 335
)
while buildExpression 665
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 335
)
buildExpression 666
while buildExpression 666
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 335
)
while buildExpression 666
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 335
)
while buildExpression 666
)
HITTING RPARENS 666
NEW ==== testing leave from buildExpression AT END 666
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 666
)
NEW ==== bye bye from buildExpression AT END 666
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
LEAVING case T_VARIABLE 665
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 335
)
while buildExpression 665
)
HITTING RPARENS 665
NEW ==== testing leave from buildExpression AT END 665
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 665
)
NEW ==== bye bye from buildExpression AT END 665
while buildFunctionCall
)
LEAVING case T_STRING 659
NEW ==== testing leave from buildExpression AT END 659
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 659
;
testing leave from buildExpression 659
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 659
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => db_query
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => "UPDATE {profile_values} SET value = '%s' WHERE fid = 3 AND uid = %d"
                                )

                        )

                    [1] => PGPExpression
                        (
                            [whitespace] =>   
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'surname'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => '#value'
                                                )

                                        )

                                )

                        )

                    [2] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $user
                                    [operator2] => ->
                                    [operand] => PGPOperand
                                        (
                                            [type] => 307 (T_STRING)
                                            [value] => uid
                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 659
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 335
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //Отпаравить приветственное мыло пользователю

    [2] => 336
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
    [2] => 337
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_mail
    [2] => 337
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_mail
    [2] => 337
)
buildExpression 667
while buildExpression 667
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_mail
    [2] => 337
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 668
while buildExpression 668
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
                
    [2] => 337
)
while buildExpression 668
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'user'
    [2] => 338
)
while buildExpression 668
,
testing leave from buildExpression 668
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 668
,
PGPExpression
(
    [whitespace] => 
                
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'user'
        )

)
PREVIOUS in buildExpression 668
while buildFunctionCall
,
buildExpression 669
while buildExpression 669
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
                
    [2] => 338
)
while buildExpression 669
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'register_no_approval_required'
    [2] => 339
)
while buildExpression 669
,
testing leave from buildExpression 669
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 669
,
PGPExpression
(
    [whitespace] =>  
                
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'register_no_approval_required'
        )

)
PREVIOUS in buildExpression 669
while buildFunctionCall
,
buildExpression 670
while buildExpression 670
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
                
    [2] => 339
)
while buildExpression 670
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 340
)
buildExpression 671
while buildExpression 671
,
testing leave from buildExpression 671
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 671
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
PREVIOUS in buildExpression 671
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $mail
)
LEAVING case T_VARIABLE 670
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $mail
    [2] => 340
)
while buildExpression 670
,
testing leave from buildExpression 670
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 670
,
PGPExpression
(
    [whitespace] =>  
                
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $mail
        )

)
PREVIOUS in buildExpression 670
while buildFunctionCall
,
buildExpression 672
while buildExpression 672
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
                
    [2] => 340
)
while buildExpression 672
Array
(
    [0] => 307 (T_STRING)
    [1] => NULL
    [2] => 341
)
while buildExpression 672
,
testing leave from buildExpression 672
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 672
,
PGPExpression
(
    [whitespace] =>  
                
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => NULL
        )

)
PREVIOUS in buildExpression 672
while buildFunctionCall
,
buildExpression 673
while buildExpression 673
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
                
    [2] => 341
)
while buildExpression 673
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 342
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'account'
    [2] => 342
)
buildExpression 674
while buildExpression 674
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'account'
    [2] => 342
)
while buildExpression 674
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 342
)
while buildExpression 674
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 342
)
testing leave from buildExpression 674
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 674
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 342
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'account'
        )

)
PREVIOUS in buildExpression 674
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 342
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 342
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 342
)
buildExpression 675
while buildExpression 675
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 342
)
buildExpression 676
while buildExpression 676
)
testing leave from buildExpression 676
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 676
NEW ==== testing leave from buildExpression AT END 676
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 676
)
NEW ==== bye bye from buildExpression AT END 676
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
LEAVING case T_VARIABLE 675
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 342
)
while buildExpression 675
)
testing leave from buildExpression 675
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 675
NEW ==== testing leave from buildExpression AT END 675
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 675
)
NEW ==== bye bye from buildExpression AT END 675
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, '1'
NEW ==== testing leave from buildExpression AT END 673
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 673
,
testing leave from buildExpression 673
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 673
,
PGPExpression
(
    [whitespace] =>  
                
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'account'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $user
                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 673
while buildFunctionCall
,
buildExpression 677
while buildExpression 677
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
                
    [2] => 342
)
while buildExpression 677
Array
(
    [0] => 307 (T_STRING)
    [1] => variable_get
    [2] => 343
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [whitespace] =>  
                
    [1] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 678
while buildExpression 678
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site_mail'
    [2] => 343
)
while buildExpression 678
,
testing leave from buildExpression 678
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 678
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'site_mail'
        )

)
PREVIOUS in buildExpression 678
while buildFunctionCall
,
buildExpression 679
while buildExpression 679
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 343
)
while buildExpression 679
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'robot@vekev.ru'
    [2] => 343
)
while buildExpression 679
)
HITTING RPARENS 679
NEW ==== testing leave from buildExpression AT END 679
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 679
)
NEW ==== bye bye from buildExpression AT END 679
while buildFunctionCall
)
LEAVING case T_STRING 677
NEW ==== testing leave from buildExpression AT END 677
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 677
)
HITTING RPARENS 677
NEW ==== testing leave from buildExpression AT END 677
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 677
)
NEW ==== bye bye from buildExpression AT END 677
while buildFunctionCall
)
LEAVING case T_STRING 667
NEW ==== testing leave from buildExpression AT END 667
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 667
;
testing leave from buildExpression 667
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 667
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_mail
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [whitespace] => 
                
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'user'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [whitespace] =>  
                
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'register_no_approval_required'
                                )

                        )

                    [2] => PGPExpression
                        (
                            [whitespace] =>  
                
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $mail
                                )

                        )

                    [3] => PGPExpression
                        (
                            [whitespace] =>  
                
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => NULL
                                )

                        )

                    [4] => PGPExpression
                        (
                            [whitespace] =>  
                
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'account'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPOperand
                                                        (
                                                            [type] => 309 (T_VARIABLE)
                                                            [value] => $user
                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [5] => PGPExpression
                        (
                            [whitespace] =>  
                
                            [operand] => PGPFunctionCall
                                (
                                    [parent] => PGPNode
                                        (
                                            [type-3] => 
                                        )

                                    [type] => 601
                                    [name] => Array
                                        (
                                            [type] => 307 (T_STRING)
                                            [value] => variable_get
                                        )

                                    [noparens] => 0
                                    [parameters] => PGPList
                                        (
                                            [0] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'site_mail'
                                                        )

                                                )

                                            [1] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'robot@vekev.ru'
                                                        )

                                                )

                                        )

                                    [parentExpression] => PGPExpression
                                        (
                                            [type-1] => 
                                        )

                                    [debug] => 
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 667
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 343
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //Создать ноду Компания

    [2] => 344
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>         
    [2] => 345
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 345
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 345
)
buildExpression 680
while buildExpression 680
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 345
)
buildExpression 681
while buildExpression 681
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 345
)
while buildExpression 681
=
testing leave from buildExpression 681
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 681
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
PREVIOUS in buildExpression 681
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
LEAVING case T_VARIABLE 680
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 345
)
while buildExpression 680
=
while buildExpression 680
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 345
)
while buildExpression 680
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 345
)
while buildExpression 680
;
testing leave from buildExpression 680
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 680
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $nid
        )

    [assign] => =
    [operand] => 0
)
PREVIOUS in buildExpression 680
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 345
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 346
)
buildConditional
while buildConditional
(
buildExpression 682
while buildExpression 682
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 346
)
buildExpression 683
while buildExpression 683
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 346
)
while buildExpression 683
=
testing leave from buildExpression 683
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 683
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
PREVIOUS in buildExpression 683
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
LEAVING case T_VARIABLE 682
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 346
)
while buildExpression 682
=
while buildExpression 682
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 346
)
while buildExpression 682
Array
(
    [0] => 307 (T_STRING)
    [1] => create_company_node
    [2] => 346
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $nid
        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 684
while buildExpression 684
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 346
)
buildExpression 685
while buildExpression 685
,
testing leave from buildExpression 685
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 685
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 685
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 684
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 346
)
while buildExpression 684
,
testing leave from buildExpression 684
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 684
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 684
while buildFunctionCall
,
buildExpression 686
while buildExpression 686
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 346
)
while buildExpression 686
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 346
)
buildExpression 687
while buildExpression 687
)
HITTING RPARENS 687
NEW ==== testing leave from buildExpression AT END 687
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 687
)
NEW ==== bye bye from buildExpression AT END 687
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
LEAVING case T_VARIABLE 686
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 346
)
while buildExpression 686
)
HITTING RPARENS 686
NEW ==== testing leave from buildExpression AT END 686
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 686
)
NEW ==== bye bye from buildExpression AT END 686
while buildFunctionCall
)
LEAVING case T_STRING 682
NEW ==== testing leave from buildExpression AT END 682
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 682
)
testing leave from buildExpression 682
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 682
NEW ==== testing leave from buildExpression AT END 682
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 682
)
NEW ==== bye bye from buildExpression AT END 682
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 346
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 347
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 347
)
buildExpression 688
while buildExpression 688
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 347
)
buildExpression 689
while buildExpression 689
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 347
)
while buildExpression 689
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 347
)
testing leave from buildExpression 689
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 689
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 347
)
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
PREVIOUS in buildExpression 689
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
LEAVING case T_VARIABLE 688
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 347
)
while buildExpression 688
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 347
)
while buildExpression 688
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 347
)
while buildExpression 688
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Данные о Вашей компании удачно добавлены.<br/>'
    [2] => 347
)
while buildExpression 688
;
testing leave from buildExpression 688
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 688
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $message
        )

    [assign] => .=
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Данные о Вашей компании удачно добавлены.<br/>'
        )

)
PREVIOUS in buildExpression 688
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 347
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //Создать ноду Эвакуатор

    [2] => 348
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>             
    [2] => 349
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 301 (T_IF)
    [1] => if
    [2] => 349
)
buildConditional
while buildConditional
(
buildExpression 690
while buildExpression 690
Array
(
    [0] => 307 (T_STRING)
    [1] => create_evacuator_node
    [2] => 349
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 691
while buildExpression 691
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 349
)
buildExpression 692
while buildExpression 692
,
testing leave from buildExpression 692
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 692
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 692
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 691
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 349
)
while buildExpression 691
,
testing leave from buildExpression 691
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 691
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 691
while buildFunctionCall
,
buildExpression 693
while buildExpression 693
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 349
)
while buildExpression 693
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 349
)
buildExpression 694
while buildExpression 694
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 349
)
while buildExpression 694
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 349
)
while buildExpression 694
,
testing leave from buildExpression 694
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 694
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
PREVIOUS in buildExpression 694
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
LEAVING case T_VARIABLE 693
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 349
)
while buildExpression 693
,
testing leave from buildExpression 693
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 693
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $user
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => uid
                )

        )

)
PREVIOUS in buildExpression 693
while buildFunctionCall
,
buildExpression 695
while buildExpression 695
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 349
)
while buildExpression 695
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 349
)
buildExpression 696
while buildExpression 696
)
HITTING RPARENS 696
NEW ==== testing leave from buildExpression AT END 696
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 696
)
NEW ==== bye bye from buildExpression AT END 696
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
LEAVING case T_VARIABLE 695
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 349
)
while buildExpression 695
)
HITTING RPARENS 695
NEW ==== testing leave from buildExpression AT END 695
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 695
)
NEW ==== bye bye from buildExpression AT END 695
while buildFunctionCall
)
LEAVING case T_STRING 690
NEW ==== testing leave from buildExpression AT END 690
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 690
)
testing leave from buildExpression 690
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 690
NEW ==== testing leave from buildExpression AT END 690
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 690
)
NEW ==== bye bye from buildExpression AT END 690
while buildConditional
)
while buildConditional
{
buildBodyComment
buildBody
Array
(
    [0] => 370
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
                
    [2] => 349
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 350
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 350
)
buildExpression 697
while buildExpression 697
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 350
)
buildExpression 698
while buildExpression 698
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 350
)
while buildExpression 698
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 350
)
testing leave from buildExpression 698
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 698
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 350
)
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
PREVIOUS in buildExpression 698
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
LEAVING case T_VARIABLE 697
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 350
)
while buildExpression 697
Array
(
    [0] => 273 (T_CONCAT_EQUAL)
    [1] => .=
    [2] => 350
)
while buildExpression 697
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 350
)
while buildExpression 697
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Данные о Вашем эвакуаторе удачно добавлены.<br/>'
    [2] => 350
)
while buildExpression 697
;
testing leave from buildExpression 697
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 697
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $message
        )

    [assign] => .=
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'Данные о Вашем эвакуаторе удачно добавлены.<br/>'
        )

)
PREVIOUS in buildExpression 697
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 350
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 351
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
        
    [2] => 352
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_set_message
    [2] => 353
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_set_message
    [2] => 353
)
buildExpression 699
while buildExpression 699
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_set_message
    [2] => 353
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 700
while buildExpression 700
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 353
)
buildExpression 701
while buildExpression 701
)
HITTING RPARENS 701
NEW ==== testing leave from buildExpression AT END 701
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 701
)
NEW ==== bye bye from buildExpression AT END 701
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $message
)
LEAVING case T_VARIABLE 700
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $message
    [2] => 353
)
while buildExpression 700
)
HITTING RPARENS 700
NEW ==== testing leave from buildExpression AT END 700
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 700
)
NEW ==== bye bye from buildExpression AT END 700
while buildFunctionCall
)
LEAVING case T_STRING 699
NEW ==== testing leave from buildExpression AT END 699
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 699
;
testing leave from buildExpression 699
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 699
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_set_message
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $message
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 699
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 353
)
statements_to_return = 0 in buildBody
while buildBody
}
while buildConditional
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 354
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 355
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 357
)
buildFunction
buildExpression 702
while buildExpression 702
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 357
)
buildExpression 703
while buildExpression 703
,
testing leave from buildExpression 703
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 703
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 703
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 702
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 357
)
while buildExpression 702
,
testing leave from buildExpression 702
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 702
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 702
buildExpression 704
while buildExpression 704
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 357
)
while buildExpression 704
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 357
)
buildExpression 705
while buildExpression 705
)
testing leave from buildExpression 705
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 705
NEW ==== testing leave from buildExpression AT END 705
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 705
)
NEW ==== bye bye from buildExpression AT END 705
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
)
LEAVING case T_VARIABLE 704
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 357
)
while buildExpression 704
)
testing leave from buildExpression 704
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 704
NEW ==== testing leave from buildExpression AT END 704
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 704
)
NEW ==== bye bye from buildExpression AT END 704
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 357
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 358
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 358
)
buildExpression 706
while buildExpression 706
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 358
)
buildExpression 707
while buildExpression 707
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 358
)
while buildExpression 707
=
testing leave from buildExpression 707
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 707
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
PREVIOUS in buildExpression 707
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
LEAVING case T_VARIABLE 706
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 358
)
while buildExpression 706
=
while buildExpression 706
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 358
)
while buildExpression 706
Array
(
    [0] => 299 (T_NEW)
    [1] => new
    [2] => 358
)
while buildExpression 706
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 358
)
while buildExpression 706
Array
(
    [0] => 307 (T_STRING)
    [1] => StdClass
    [2] => 358
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
        )

    [assign] => =
    [operator] => new
    [3] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 708
while buildExpression 708
)
HITTING RPARENS 708
NEW ==== testing leave from buildExpression AT END 708
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 708
)
NEW ==== bye bye from buildExpression AT END 708
while buildFunctionCall
)
LEAVING case T_STRING 706
NEW ==== testing leave from buildExpression AT END 706
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 706
;
testing leave from buildExpression 706
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 706
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
        )

    [assign] => =
    [operator] => new
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => StdClass
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 706
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 358
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 359
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 359
)
buildExpression 709
while buildExpression 709
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 359
)
buildExpression 710
while buildExpression 710
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 359
)
while buildExpression 710
Array
(
    [0] => 307 (T_STRING)
    [1] => type
    [2] => 359
)
while buildExpression 710
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 359
)
setting add_whitespace
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => type
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => type
        )

)
LEAVING case T_VARIABLE 709
Array
(
    [0] => 307 (T_STRING)
    [1] => type
    [2] => 359
)
while buildExpression 709
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 359
)
while buildExpression 709
=
while buildExpression 709
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 359
)
while buildExpression 709
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'company'
    [2] => 359
)
while buildExpression 709
;
testing leave from buildExpression 709
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 709
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => type
                )

        )

    [whitespace] =>    
    [assign] => =
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'company'
        )

)
PREVIOUS in buildExpression 709
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 359
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 360
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 360
)
buildExpression 711
while buildExpression 711
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 360
)
buildExpression 712
while buildExpression 712
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 360
)
while buildExpression 712
Array
(
    [0] => 307 (T_STRING)
    [1] => status
    [2] => 360
)
while buildExpression 712
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 360
)
while buildExpression 712
=
testing leave from buildExpression 712
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 712
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => status
        )

)
PREVIOUS in buildExpression 712
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => status
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => status
        )

)
LEAVING case T_VARIABLE 711
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 360
)
while buildExpression 711
=
while buildExpression 711
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 360
)
while buildExpression 711
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 360
)
while buildExpression 711
;
testing leave from buildExpression 711
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 711
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => status
                )

        )

    [assign] => =
    [operand] => 1
)
PREVIOUS in buildExpression 711
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 360
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 361
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 361
)
buildExpression 713
while buildExpression 713
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 361
)
buildExpression 714
while buildExpression 714
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 361
)
while buildExpression 714
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 361
)
while buildExpression 714
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 361
)
setting add_whitespace
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
LEAVING case T_VARIABLE 713
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 361
)
while buildExpression 713
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 361
)
while buildExpression 713
=
while buildExpression 713
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 361
)
while buildExpression 713
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $user
    [2] => 361
)
buildExpression 715
while buildExpression 715
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 361
)
while buildExpression 715
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 361
)
while buildExpression 715
;
testing leave from buildExpression 715
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 715
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
PREVIOUS in buildExpression 715
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $user
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => uid
        )

)
LEAVING case T_VARIABLE 713
Array
(
    [0] => 307 (T_STRING)
    [1] => uid
    [2] => 361
)
while buildExpression 713
;
testing leave from buildExpression 713
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 713
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => uid
                )

        )

    [whitespace] =>     
    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $user
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => uid
                )

        )

)
PREVIOUS in buildExpression 713
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 361
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 362
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 362
)
buildExpression 716
while buildExpression 716
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 362
)
buildExpression 717
while buildExpression 717
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 362
)
while buildExpression 717
Array
(
    [0] => 307 (T_STRING)
    [1] => title
    [2] => 362
)
while buildExpression 717
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 362
)
setting add_whitespace
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => title
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => title
        )

)
LEAVING case T_VARIABLE 716
Array
(
    [0] => 307 (T_STRING)
    [1] => title
    [2] => 362
)
while buildExpression 716
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 362
)
while buildExpression 716
=
while buildExpression 716
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 362
)
while buildExpression 716
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 362
)
buildExpression 718
while buildExpression 718
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 718 next token value = 'company_name'
buildExpression 719
while buildExpression 719
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'company_name'
    [2] => 362
)
while buildExpression 719
]
testing leave from buildExpression 719
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 719 next token value = [
NEW ==== testing leave from buildExpression AT END 719
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 719
]
NEW ==== bye bye from buildExpression AT END 719
while buildExpression 718
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 718 next token value = [
NEW ==== testing leave from buildExpression AT END 718
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 718
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 718 next token value = '#value'
buildExpression 720
while buildExpression 720
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 362
)
while buildExpression 720
]
testing leave from buildExpression 720
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 720 next token value = ;
NEW ==== testing leave from buildExpression AT END 720
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 720
]
NEW ==== bye bye from buildExpression AT END 720
while buildExpression 718
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 718 next token value = ;
NEW ==== testing leave from buildExpression AT END 718
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 718
;
testing leave from buildExpression 718
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 718
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 718
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 716
]
NEW ==== testing leave from buildExpression AT END 716
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 716
;
testing leave from buildExpression 716
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 716
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => title
                )

        )

    [whitespace] =>   
    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'company_name'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 716
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 362
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 363
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 363
)
buildExpression 721
while buildExpression 721
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 363
)
buildExpression 722
while buildExpression 722
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 363
)
while buildExpression 722
Array
(
    [0] => 307 (T_STRING)
    [1] => body
    [2] => 363
)
while buildExpression 722
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 363
)
setting add_whitespace
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => body
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => body
        )

)
LEAVING case T_VARIABLE 721
Array
(
    [0] => 307 (T_STRING)
    [1] => body
    [2] => 363
)
while buildExpression 721
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>    
    [2] => 363
)
while buildExpression 721
=
while buildExpression 721
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 363
)
while buildExpression 721
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 363
)
buildExpression 723
while buildExpression 723
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 723 next token value = 'description'
buildExpression 724
while buildExpression 724
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 363
)
while buildExpression 724
]
testing leave from buildExpression 724
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 724 next token value = [
NEW ==== testing leave from buildExpression AT END 724
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 724
]
NEW ==== bye bye from buildExpression AT END 724
while buildExpression 723
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 723 next token value = [
NEW ==== testing leave from buildExpression AT END 723
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 723
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 723 next token value = '#value'
buildExpression 725
while buildExpression 725
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 363
)
while buildExpression 725
]
testing leave from buildExpression 725
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 725 next token value = ;
NEW ==== testing leave from buildExpression AT END 725
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 725
]
NEW ==== bye bye from buildExpression AT END 725
while buildExpression 723
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 723 next token value = ;
NEW ==== testing leave from buildExpression AT END 723
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 723
;
testing leave from buildExpression 723
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 723
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 723
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 721
]
NEW ==== testing leave from buildExpression AT END 721
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 721
;
testing leave from buildExpression 721
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 721
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => body
                )

        )

    [whitespace] =>    
    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'description'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 721
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 363
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 364
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 364
)
buildExpression 726
while buildExpression 726
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 364
)
buildExpression 727
while buildExpression 727
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 364
)
while buildExpression 727
Array
(
    [0] => 307 (T_STRING)
    [1] => language
    [2] => 364
)
while buildExpression 727
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 364
)
while buildExpression 727
=
testing leave from buildExpression 727
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 727
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => language
        )

)
PREVIOUS in buildExpression 727
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => language
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => language
        )

)
LEAVING case T_VARIABLE 726
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 364
)
while buildExpression 726
=
while buildExpression 726
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 364
)
while buildExpression 726
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'ru'
    [2] => 364
)
while buildExpression 726
;
testing leave from buildExpression 726
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 726
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => language
                )

        )

    [assign] => =
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'ru'
        )

)
PREVIOUS in buildExpression 726
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 364
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 365
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 365
)
buildExpression 728
while buildExpression 728
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 365
)
buildExpression 729
while buildExpression 729
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 365
)
while buildExpression 729
Array
(
    [0] => 307 (T_STRING)
    [1] => field_site
    [2] => 365
)
while buildExpression 729
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 365
)
while buildExpression 729
=
testing leave from buildExpression 729
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 729
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => field_site
        )

)
PREVIOUS in buildExpression 729
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => field_site
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => field_site
        )

)
LEAVING case T_VARIABLE 728
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 365
)
while buildExpression 728
=
while buildExpression 728
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 365
)
while buildExpression 728
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 365
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 365
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 366
)
buildExpression 730
while buildExpression 730
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 366
)
while buildExpression 730
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 366
)
while buildExpression 730
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 366
)
testing leave from buildExpression 730
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 730
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 366
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '0'
        )

)
PREVIOUS in buildExpression 730
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 366
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 366
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 366
)
buildExpression 731
while buildExpression 731
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 366
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 366
)
buildExpression 732
while buildExpression 732
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 366
)
while buildExpression 732
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 366
)
while buildExpression 732
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 366
)
testing leave from buildExpression 732
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 732
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 366
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'value'
        )

)
PREVIOUS in buildExpression 732
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 366
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 366
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 366
)
buildExpression 733
while buildExpression 733
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 366
)
buildExpression 734
while buildExpression 734
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 734 next token value = 'site'
buildExpression 735
while buildExpression 735
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site'
    [2] => 366
)
while buildExpression 735
]
testing leave from buildExpression 735
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 735 next token value = [
NEW ==== testing leave from buildExpression AT END 735
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 735
]
NEW ==== bye bye from buildExpression AT END 735
while buildExpression 734
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 734 next token value = [
NEW ==== testing leave from buildExpression AT END 734
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 734
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 734 next token value = '#value'
buildExpression 736
while buildExpression 736
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 366
)
while buildExpression 736
]
testing leave from buildExpression 736
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 736 next token value = )
NEW ==== testing leave from buildExpression AT END 736
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 736
]
NEW ==== bye bye from buildExpression AT END 736
while buildExpression 734
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 734 next token value = )
NEW ==== testing leave from buildExpression AT END 734
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 734
)
testing leave from buildExpression 734
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 734
NEW ==== testing leave from buildExpression AT END 734
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 734
)
NEW ==== bye bye from buildExpression AT END 734
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 733
]
NEW ==== testing leave from buildExpression AT END 733
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 733
)
testing leave from buildExpression 733
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 733
NEW ==== testing leave from buildExpression AT END 733
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 733
)
NEW ==== bye bye from buildExpression AT END 733
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, ''
NEW ==== testing leave from buildExpression AT END 731
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 731
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 366
)
while buildExpression 731
)
testing leave from buildExpression 731
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 731
NEW ==== testing leave from buildExpression AT END 731
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 731
)
NEW ==== bye bye from buildExpression AT END 731
inside default case return from buildExpression
ELSEIF deleteLast on ')'
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 1, 1, ''
NEW ==== testing leave from buildExpression AT END 728
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 728
;
testing leave from buildExpression 728
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 728
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => field_site
                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '0'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'value'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPOperand
                                                        (
                                                            [type] => 309 (T_VARIABLE)
                                                            [value] => $form
                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'site'
                                                                        )

                                                                )

                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => '#value'
                                                                        )

                                                                )

                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 728
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 367
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 368
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 368
)
buildExpression 737
while buildExpression 737
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 368
)
buildExpression 738
while buildExpression 738
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 368
)
while buildExpression 738
Array
(
    [0] => 307 (T_STRING)
    [1] => field_company_phone
    [2] => 368
)
while buildExpression 738
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 368
)
while buildExpression 738
=
testing leave from buildExpression 738
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 738
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => field_company_phone
        )

)
PREVIOUS in buildExpression 738
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => field_company_phone
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => field_company_phone
        )

)
LEAVING case T_VARIABLE 737
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 368
)
while buildExpression 737
=
while buildExpression 737
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 368
)
while buildExpression 737
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 368
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 368
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 369
)
buildExpression 739
while buildExpression 739
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '0'
    [2] => 369
)
while buildExpression 739
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 369
)
while buildExpression 739
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 369
)
testing leave from buildExpression 739
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 739
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 369
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '0'
        )

)
PREVIOUS in buildExpression 739
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 369
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 369
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 369
)
buildExpression 740
while buildExpression 740
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 369
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 369
)
buildExpression 741
while buildExpression 741
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 369
)
while buildExpression 741
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 369
)
while buildExpression 741
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 369
)
testing leave from buildExpression 741
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 741
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 369
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'value'
        )

)
PREVIOUS in buildExpression 741
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 369
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 369
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 369
)
buildExpression 742
while buildExpression 742
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 369
)
buildExpression 743
while buildExpression 743
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 743 next token value = 'phone_1'
buildExpression 744
while buildExpression 744
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_1'
    [2] => 369
)
while buildExpression 744
]
testing leave from buildExpression 744
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 744 next token value = [
NEW ==== testing leave from buildExpression AT END 744
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 744
]
NEW ==== bye bye from buildExpression AT END 744
while buildExpression 743
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 743 next token value = [
NEW ==== testing leave from buildExpression AT END 743
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 743
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 743 next token value = '#value'
buildExpression 745
while buildExpression 745
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 369
)
while buildExpression 745
]
testing leave from buildExpression 745
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 745 next token value = )
NEW ==== testing leave from buildExpression AT END 745
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 745
]
NEW ==== bye bye from buildExpression AT END 745
while buildExpression 743
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 743 next token value = )
NEW ==== testing leave from buildExpression AT END 743
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 743
)
testing leave from buildExpression 743
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 743
NEW ==== testing leave from buildExpression AT END 743
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 743
)
NEW ==== bye bye from buildExpression AT END 743
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 742
]
NEW ==== testing leave from buildExpression AT END 742
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 742
)
testing leave from buildExpression 742
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 742
NEW ==== testing leave from buildExpression AT END 742
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 742
)
NEW ==== bye bye from buildExpression AT END 742
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, ''
NEW ==== testing leave from buildExpression AT END 740
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 740
,
testing leave from buildExpression 740
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 740
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_1'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => '#value'
                                                )

                                        )

                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 740
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 369
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 370
)
buildExpression 746
while buildExpression 746
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 370
)
while buildExpression 746
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 370
)
while buildExpression 746
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 370
)
testing leave from buildExpression 746
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 746
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 370
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '1'
        )

)
PREVIOUS in buildExpression 746
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 370
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 370
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 370
)
buildExpression 747
while buildExpression 747
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 370
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 370
)
buildExpression 748
while buildExpression 748
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 370
)
while buildExpression 748
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 370
)
while buildExpression 748
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 370
)
testing leave from buildExpression 748
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 748
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 370
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'value'
        )

)
PREVIOUS in buildExpression 748
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 370
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 370
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 370
)
buildExpression 749
while buildExpression 749
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 370
)
buildExpression 750
while buildExpression 750
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 750 next token value = 'phone_2'
buildExpression 751
while buildExpression 751
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_2'
    [2] => 370
)
while buildExpression 751
]
testing leave from buildExpression 751
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 751 next token value = [
NEW ==== testing leave from buildExpression AT END 751
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 751
]
NEW ==== bye bye from buildExpression AT END 751
while buildExpression 750
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 750 next token value = [
NEW ==== testing leave from buildExpression AT END 750
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 750
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 750 next token value = '#value'
buildExpression 752
while buildExpression 752
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 370
)
while buildExpression 752
]
testing leave from buildExpression 752
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 752 next token value = )
NEW ==== testing leave from buildExpression AT END 752
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 752
]
NEW ==== bye bye from buildExpression AT END 752
while buildExpression 750
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 750 next token value = )
NEW ==== testing leave from buildExpression AT END 750
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 750
)
testing leave from buildExpression 750
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 750
NEW ==== testing leave from buildExpression AT END 750
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 750
)
NEW ==== bye bye from buildExpression AT END 750
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 749
]
NEW ==== testing leave from buildExpression AT END 749
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 749
)
testing leave from buildExpression 749
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 749
NEW ==== testing leave from buildExpression AT END 749
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 749
)
NEW ==== bye bye from buildExpression AT END 749
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, ''
NEW ==== testing leave from buildExpression AT END 747
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 747
,
testing leave from buildExpression 747
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 747
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_2'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => '#value'
                                                )

                                        )

                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 747
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 370
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 371
)
buildExpression 753
while buildExpression 753
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 371
)
while buildExpression 753
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 371
)
while buildExpression 753
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 371
)
testing leave from buildExpression 753
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 753
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 371
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => '2'
        )

)
PREVIOUS in buildExpression 753
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 371
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 371
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 371
)
buildExpression 754
while buildExpression 754
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 371
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 371
)
buildExpression 755
while buildExpression 755
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 371
)
while buildExpression 755
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 371
)
while buildExpression 755
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 371
)
testing leave from buildExpression 755
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 755
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 371
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'value'
        )

)
PREVIOUS in buildExpression 755
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 371
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 371
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 371
)
buildExpression 756
while buildExpression 756
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 371
)
buildExpression 757
while buildExpression 757
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 757 next token value = 'phone_3'
buildExpression 758
while buildExpression 758
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_3'
    [2] => 371
)
while buildExpression 758
]
testing leave from buildExpression 758
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 758 next token value = [
NEW ==== testing leave from buildExpression AT END 758
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 758
]
NEW ==== bye bye from buildExpression AT END 758
while buildExpression 757
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 757 next token value = [
NEW ==== testing leave from buildExpression AT END 757
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 757
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 757 next token value = '#value'
buildExpression 759
while buildExpression 759
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 371
)
while buildExpression 759
]
testing leave from buildExpression 759
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 759 next token value = )
NEW ==== testing leave from buildExpression AT END 759
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 759
]
NEW ==== bye bye from buildExpression AT END 759
while buildExpression 757
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 757 next token value = )
NEW ==== testing leave from buildExpression AT END 757
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 757
)
testing leave from buildExpression 757
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 757
NEW ==== testing leave from buildExpression AT END 757
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 757
)
NEW ==== bye bye from buildExpression AT END 757
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 756
]
NEW ==== testing leave from buildExpression AT END 756
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 756
)
testing leave from buildExpression 756
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 756
NEW ==== testing leave from buildExpression AT END 756
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 756
)
NEW ==== bye bye from buildExpression AT END 756
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, ''
NEW ==== testing leave from buildExpression AT END 754
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 754
,
testing leave from buildExpression 754
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 754
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'value'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_3'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => '#value'
                                                )

                                        )

                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 754
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 371
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 3, 3, ''
NEW ==== testing leave from buildExpression AT END 737
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 737
;
testing leave from buildExpression 737
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 737
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => field_company_phone
                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 3
            [commaCount] => 3
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '0'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'value'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPOperand
                                                        (
                                                            [type] => 309 (T_VARIABLE)
                                                            [value] => $form
                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'phone_1'
                                                                        )

                                                                )

                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => '#value'
                                                                        )

                                                                )

                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '1'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'value'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPOperand
                                                        (
                                                            [type] => 309 (T_VARIABLE)
                                                            [value] => $form
                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'phone_2'
                                                                        )

                                                                )

                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => '#value'
                                                                        )

                                                                )

                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => '2'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'value'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPOperand
                                                        (
                                                            [type] => 309 (T_VARIABLE)
                                                            [value] => $form
                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'phone_3'
                                                                        )

                                                                )

                                                            [index] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => '#value'
                                                                        )

                                                                )

                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 737
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 372
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => node_save
    [2] => 373
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => node_save
    [2] => 373
)
buildExpression 760
while buildExpression 760
Array
(
    [0] => 307 (T_STRING)
    [1] => node_save
    [2] => 373
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 761
while buildExpression 761
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 373
)
buildExpression 762
while buildExpression 762
)
HITTING RPARENS 762
NEW ==== testing leave from buildExpression AT END 762
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 762
)
NEW ==== bye bye from buildExpression AT END 762
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
LEAVING case T_VARIABLE 761
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 373
)
while buildExpression 761
)
HITTING RPARENS 761
NEW ==== testing leave from buildExpression AT END 761
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 761
)
NEW ==== bye bye from buildExpression AT END 761
while buildFunctionCall
)
LEAVING case T_STRING 760
NEW ==== testing leave from buildExpression AT END 760
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 760
;
testing leave from buildExpression 760
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 760
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => node_save
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $node
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 760
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    
    [2] => 373
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 336 (T_RETURN)
    [1] => return
    [2] => 375
)
buildFunctionCall
while buildFunctionCall
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 375
)
buildExpression 763
while buildExpression 763
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 375
)
buildExpression 764
while buildExpression 764
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 375
)
while buildExpression 764
Array
(
    [0] => 307 (T_STRING)
    [1] => nid
    [2] => 375
)
while buildExpression 764
;
testing leave from buildExpression 764
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 764
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => nid
        )

)
PREVIOUS in buildExpression 764
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => nid
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => nid
        )

)
LEAVING case T_VARIABLE 763
Array
(
    [0] => 307 (T_STRING)
    [1] => nid
    [2] => 375
)
while buildExpression 763
;
testing leave from buildExpression 763
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 763
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => nid
                )

        )

)
PREVIOUS in buildExpression 763
while buildFunctionCall
;
Hitting ; in while buildFunctionCall
PGPFunctionCall
(
    [parent] => PGPNode
        (
            [type-3] => 
        )

    [type] => 601
    [name] => Array
        (
            [type] => 336 (T_RETURN)
            [value] => return
        )

    [noparens] => 1
    [parameters] => PGPList
        (
            [0] => PGPExpression
                (
                    [operand] => PGPOperand
                        (
                            [type] => 309 (T_VARIABLE)
                            [value] => $node
                            [operator2] => ->
                            [operand] => PGPOperand
                                (
                                    [type] => 307 (T_STRING)
                                    [value] => nid
                                )

                        )

                )

        )

    [debug] => 
)
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 375
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 376
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 378
)
buildFunction
buildExpression 765
while buildExpression 765
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 378
)
buildExpression 766
while buildExpression 766
,
testing leave from buildExpression 766
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 766
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
PREVIOUS in buildExpression 766
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
)
LEAVING case T_VARIABLE 765
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 378
)
while buildExpression 765
,
testing leave from buildExpression 765
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 765
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
        )

)
PREVIOUS in buildExpression 765
buildExpression 767
while buildExpression 767
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 378
)
while buildExpression 767
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $uid
    [2] => 378
)
buildExpression 768
while buildExpression 768
,
testing leave from buildExpression 768
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 768
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $uid
)
PREVIOUS in buildExpression 768
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $uid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $uid
)
LEAVING case T_VARIABLE 767
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $uid
    [2] => 378
)
while buildExpression 767
,
testing leave from buildExpression 767
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 767
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $uid
        )

)
PREVIOUS in buildExpression 767
buildExpression 769
while buildExpression 769
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 378
)
while buildExpression 769
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 378
)
buildExpression 770
while buildExpression 770
)
testing leave from buildExpression 770
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 770
NEW ==== testing leave from buildExpression AT END 770
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 770
)
NEW ==== bye bye from buildExpression AT END 770
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
LEAVING case T_VARIABLE 769
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 378
)
while buildExpression 769
)
testing leave from buildExpression 769
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 769
NEW ==== testing leave from buildExpression AT END 769
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 769
)
NEW ==== bye bye from buildExpression AT END 769
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 378
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  print_r($form); die;

    [2] => 379
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>     
    [2] => 380
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 380
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 380
)
buildExpression 771
while buildExpression 771
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 380
)
buildExpression 772
while buildExpression 772
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 380
)
while buildExpression 772
=
testing leave from buildExpression 772
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 772
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
PREVIOUS in buildExpression 772
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
LEAVING case T_VARIABLE 771
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 380
)
while buildExpression 771
=
while buildExpression 771
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 380
)
while buildExpression 771
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 380
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 0, ''
NEW ==== testing leave from buildExpression AT END 771
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 771
;
testing leave from buildExpression 771
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 771
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 0
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 771
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 380
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 381
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 381
)
buildExpression 773
while buildExpression 773
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 381
)
buildExpression 774
while buildExpression 774
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 381
)
while buildExpression 774
=
testing leave from buildExpression 774
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 774
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
PREVIOUS in buildExpression 774
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
LEAVING case T_VARIABLE 773
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 381
)
while buildExpression 773
=
while buildExpression 773
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 381
)
while buildExpression 773
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 381
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 0, ''
NEW ==== testing leave from buildExpression AT END 773
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 773
;
testing leave from buildExpression 773
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 773
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 0
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 773
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 381
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 382
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 382
)
buildExpression 775
while buildExpression 775
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 382
)
buildExpression 776
while buildExpression 776
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 776 next token value = 'values'
buildExpression 777
while buildExpression 777
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 382
)
while buildExpression 777
]
testing leave from buildExpression 777
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 777 next token value =  
NEW ==== testing leave from buildExpression AT END 777
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 777
]
NEW ==== bye bye from buildExpression AT END 777
while buildExpression 776
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 776 next token value =  
NEW ==== testing leave from buildExpression AT END 776
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 776
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 382
)
while buildExpression 776
=
testing leave from buildExpression 776
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 776
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

)
PREVIOUS in buildExpression 776
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

)
LEAVING case T_VARIABLE 775
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 382
)
while buildExpression 775
=
while buildExpression 775
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 382
)
while buildExpression 775
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 382
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 382
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'uid'
    [2] => 383
)
buildExpression 778
while buildExpression 778
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'uid'
    [2] => 383
)
while buildExpression 778
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 383
)
while buildExpression 778
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 383
)
testing leave from buildExpression 778
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 778
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 383
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'uid'
        )

)
PREVIOUS in buildExpression 778
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 383
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 383
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $uid
    [2] => 383
)
buildExpression 779
while buildExpression 779
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $uid
    [2] => 383
)
buildExpression 780
while buildExpression 780
,
testing leave from buildExpression 780
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 780
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $uid
)
PREVIOUS in buildExpression 780
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $uid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $uid
)
LEAVING case T_VARIABLE 779
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $uid
    [2] => 383
)
while buildExpression 779
,
testing leave from buildExpression 779
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 779
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $uid
        )

)
PREVIOUS in buildExpression 779
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 383
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'type'
    [2] => 384
)
buildExpression 781
while buildExpression 781
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'type'
    [2] => 384
)
while buildExpression 781
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 384
)
testing leave from buildExpression 781
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 781
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 384
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'type'
        )

)
PREVIOUS in buildExpression 781
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 384
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 384
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator'
    [2] => 384
)
buildExpression 782
while buildExpression 782
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator'
    [2] => 384
)
while buildExpression 782
,
testing leave from buildExpression 782
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 782
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'evacuator'
        )

)
PREVIOUS in buildExpression 782
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 384
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'language'
    [2] => 385
)
buildExpression 783
while buildExpression 783
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'language'
    [2] => 385
)
while buildExpression 783
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 385
)
while buildExpression 783
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 385
)
testing leave from buildExpression 783
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 783
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 385
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'language'
        )

)
PREVIOUS in buildExpression 783
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 385
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 385
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'ru'
    [2] => 385
)
buildExpression 784
while buildExpression 784
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'ru'
    [2] => 385
)
while buildExpression 784
,
testing leave from buildExpression 784
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 784
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'ru'
        )

)
PREVIOUS in buildExpression 784
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 385
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'title'
    [2] => 386
)
buildExpression 785
while buildExpression 785
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'title'
    [2] => 386
)
while buildExpression 785
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 386
)
while buildExpression 785
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 386
)
testing leave from buildExpression 785
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 785
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 386
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'title'
        )

)
PREVIOUS in buildExpression 785
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 386
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 386
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 386
)
buildExpression 786
while buildExpression 786
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 386
)
buildExpression 787
while buildExpression 787
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 787 next token value = 'evacuator_name'
buildExpression 788
while buildExpression 788
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_name'
    [2] => 386
)
while buildExpression 788
]
testing leave from buildExpression 788
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 788 next token value = [
NEW ==== testing leave from buildExpression AT END 788
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 788
]
NEW ==== bye bye from buildExpression AT END 788
while buildExpression 787
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 787 next token value = [
NEW ==== testing leave from buildExpression AT END 787
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 787
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 787 next token value = '#value'
buildExpression 789
while buildExpression 789
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 386
)
while buildExpression 789
]
testing leave from buildExpression 789
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 789 next token value = ,
NEW ==== testing leave from buildExpression AT END 789
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 789
]
NEW ==== bye bye from buildExpression AT END 789
while buildExpression 787
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 787 next token value = ,
NEW ==== testing leave from buildExpression AT END 787
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 787
,
testing leave from buildExpression 787
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 787
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 787
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 786
]
NEW ==== testing leave from buildExpression AT END 786
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 786
,
testing leave from buildExpression 786
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 786
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'evacuator_name'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 786
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 386
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'body'
    [2] => 387
)
buildExpression 790
while buildExpression 790
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'body'
    [2] => 387
)
while buildExpression 790
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 387
)
while buildExpression 790
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 387
)
testing leave from buildExpression 790
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 790
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 387
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'body'
        )

)
PREVIOUS in buildExpression 790
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 387
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 387
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => ''
    [2] => 387
)
buildExpression 791
while buildExpression 791
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => ''
    [2] => 387
)
while buildExpression 791
,
testing leave from buildExpression 791
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 791
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => ''
        )

)
PREVIOUS in buildExpression 791
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 387
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'name'
    [2] => 388
)
buildExpression 792
while buildExpression 792
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'name'
    [2] => 388
)
while buildExpression 792
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 388
)
while buildExpression 792
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 388
)
testing leave from buildExpression 792
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 792
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 388
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'name'
        )

)
PREVIOUS in buildExpression 792
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 388
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 388
)
while buildArray
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 388
)
buildExpression 793
while buildExpression 793
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 388
)
buildExpression 794
while buildExpression 794
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 794 next token value = 'mail'
buildExpression 795
while buildExpression 795
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 388
)
while buildExpression 795
]
testing leave from buildExpression 795
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 795 next token value = [
NEW ==== testing leave from buildExpression AT END 795
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 795
]
NEW ==== bye bye from buildExpression AT END 795
while buildExpression 794
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 794 next token value = [
NEW ==== testing leave from buildExpression AT END 794
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 794
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 794 next token value = '#value'
buildExpression 796
while buildExpression 796
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 388
)
while buildExpression 796
]
testing leave from buildExpression 796
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 796 next token value = ,
NEW ==== testing leave from buildExpression AT END 796
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 796
]
NEW ==== bye bye from buildExpression AT END 796
while buildExpression 794
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 794 next token value = ,
NEW ==== testing leave from buildExpression AT END 794
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 794
,
testing leave from buildExpression 794
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 794
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 794
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 793
]
NEW ==== testing leave from buildExpression AT END 793
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 793
,
testing leave from buildExpression 793
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 793
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 793
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 388
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'status'
    [2] => 389
)
buildExpression 797
while buildExpression 797
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'status'
    [2] => 389
)
while buildExpression 797
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 389
)
while buildExpression 797
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 389
)
testing leave from buildExpression 797
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 797
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 389
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'status'
        )

)
PREVIOUS in buildExpression 797
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 389
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 389
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 389
)
buildExpression 798
while buildExpression 798
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 389
)
while buildExpression 798
,
testing leave from buildExpression 798
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 798
,
PGPExpression
(
    [operand] => 1
)
PREVIOUS in buildExpression 798
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 389
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'op'
    [2] => 390
)
buildExpression 799
while buildExpression 799
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'op'
    [2] => 390
)
while buildExpression 799
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 390
)
while buildExpression 799
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 390
)
testing leave from buildExpression 799
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 799
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 390
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'op'
        )

)
PREVIOUS in buildExpression 799
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 390
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 390
)
while buildArray
Array
(
    [0] => 307 (T_STRING)
    [1] => t
    [2] => 390
)
buildExpression 800
while buildExpression 800
Array
(
    [0] => 307 (T_STRING)
    [1] => t
    [2] => 390
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 801
while buildExpression 801
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'Save'
    [2] => 390
)
while buildExpression 801
)
HITTING RPARENS 801
NEW ==== testing leave from buildExpression AT END 801
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 801
)
NEW ==== bye bye from buildExpression AT END 801
while buildFunctionCall
)
LEAVING case T_STRING 800
NEW ==== testing leave from buildExpression AT END 800
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 800
,
testing leave from buildExpression 800
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 800
,
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => t
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'Save'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 800
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 390
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form_id'
    [2] => 391
)
buildExpression 802
while buildExpression 802
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form_id'
    [2] => 391
)
while buildExpression 802
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 391
)
while buildExpression 802
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 391
)
testing leave from buildExpression 802
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 802
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 391
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'form_id'
        )

)
PREVIOUS in buildExpression 802
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 391
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 391
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_node_form'
    [2] => 391
)
buildExpression 803
while buildExpression 803
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_node_form'
    [2] => 391
)
while buildExpression 803
,
testing leave from buildExpression 803
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 803
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'evacuator_node_form'
        )

)
PREVIOUS in buildExpression 803
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 391
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pathauto_perform_alias'
    [2] => 392
)
buildExpression 804
while buildExpression 804
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pathauto_perform_alias'
    [2] => 392
)
while buildExpression 804
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 392
)
while buildExpression 804
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 392
)
testing leave from buildExpression 804
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 804
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 392
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'pathauto_perform_alias'
        )

)
PREVIOUS in buildExpression 804
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 392
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 392
)
while buildArray
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 392
)
buildExpression 805
while buildExpression 805
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 392
)
while buildExpression 805
,
testing leave from buildExpression 805
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 805
,
PGPExpression
(
    [operand] => 1
)
PREVIOUS in buildExpression 805
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 392
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 10, 10, ''
NEW ==== testing leave from buildExpression AT END 775
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 775
;
testing leave from buildExpression 775
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 775
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

        )

    [assign] => =
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 10
            [commaCount] => 10
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'uid'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $uid
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'type'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'evacuator'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'language'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'ru'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'title'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'evacuator_name'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => '#value'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'body'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => ''
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'name'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'mail'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => '#value'
                                                )

                                        )

                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'status'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 1
                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'op'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPFunctionCall
                                (
                                    [parent] => PGPNode
                                        (
                                            [type-3] => 
                                        )

                                    [type] => 601
                                    [name] => Array
                                        (
                                            [type] => 307 (T_STRING)
                                            [value] => t
                                        )

                                    [noparens] => 0
                                    [parameters] => PGPList
                                        (
                                            [0] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'Save'
                                                        )

                                                )

                                        )

                                    [parentExpression] => PGPExpression
                                        (
                                            [type-1] => 
                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'form_id'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'evacuator_node_form'
                                )

                        )

                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'pathauto_perform_alias'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => 1
                        )

                    [whitespace] => 
        
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 775
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 393
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 394
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 394
)
buildExpression 806
while buildExpression 806
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 394
)
buildExpression 807
while buildExpression 807
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 807 next token value = 'values'
buildExpression 808
while buildExpression 808
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 394
)
while buildExpression 808
]
testing leave from buildExpression 808
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 808 next token value = [
NEW ==== testing leave from buildExpression AT END 808
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 808
]
NEW ==== bye bye from buildExpression AT END 808
while buildExpression 807
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 807 next token value = [
NEW ==== testing leave from buildExpression AT END 807
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 807
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 807 next token value = 'field_volume'
buildExpression 809
while buildExpression 809
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_volume'
    [2] => 394
)
while buildExpression 809
]
testing leave from buildExpression 809
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 809 next token value = [
NEW ==== testing leave from buildExpression AT END 809
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 809
]
NEW ==== bye bye from buildExpression AT END 809
while buildExpression 807
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 807 next token value = [
NEW ==== testing leave from buildExpression AT END 807
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 807
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 807 next token value = 0
buildExpression 810
while buildExpression 810
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 394
)
while buildExpression 810
]
testing leave from buildExpression 810
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 810 next token value = [
NEW ==== testing leave from buildExpression AT END 810
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 810
]
NEW ==== bye bye from buildExpression AT END 810
while buildExpression 807
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 807 next token value = [
NEW ==== testing leave from buildExpression AT END 807
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 807
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 807 next token value = 'value'
buildExpression 811
while buildExpression 811
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 394
)
while buildExpression 811
]
testing leave from buildExpression 811
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 811 next token value =  
NEW ==== testing leave from buildExpression AT END 811
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 811
]
NEW ==== bye bye from buildExpression AT END 811
while buildExpression 807
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 807 next token value =  
NEW ==== testing leave from buildExpression AT END 807
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 807
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 394
)
while buildExpression 807
=
testing leave from buildExpression 807
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 807
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_volume'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 807
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_volume'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_volume'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 806
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 394
)
while buildExpression 806
=
while buildExpression 806
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 394
)
while buildExpression 806
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 394
)
buildExpression 812
while buildExpression 812
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 812 next token value = 'volume'
buildExpression 813
while buildExpression 813
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'volume'
    [2] => 394
)
while buildExpression 813
]
testing leave from buildExpression 813
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 813 next token value = [
NEW ==== testing leave from buildExpression AT END 813
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 813
]
NEW ==== bye bye from buildExpression AT END 813
while buildExpression 812
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 812 next token value = [
NEW ==== testing leave from buildExpression AT END 812
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 812
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 812 next token value = '#value'
buildExpression 814
while buildExpression 814
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 394
)
while buildExpression 814
]
testing leave from buildExpression 814
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 814 next token value = ;
NEW ==== testing leave from buildExpression AT END 814
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 814
]
NEW ==== bye bye from buildExpression AT END 814
while buildExpression 812
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 812 next token value = ;
NEW ==== testing leave from buildExpression AT END 812
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 812
;
testing leave from buildExpression 812
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 812
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 812
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 806
]
NEW ==== testing leave from buildExpression AT END 806
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 806
;
testing leave from buildExpression 806
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 806
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_volume'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'volume'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 806
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 394
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 395
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 395
)
buildExpression 815
while buildExpression 815
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 395
)
buildExpression 816
while buildExpression 816
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 816 next token value = 'values'
buildExpression 817
while buildExpression 817
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 395
)
while buildExpression 817
]
testing leave from buildExpression 817
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 817 next token value = [
NEW ==== testing leave from buildExpression AT END 817
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 817
]
NEW ==== bye bye from buildExpression AT END 817
while buildExpression 816
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 816 next token value = [
NEW ==== testing leave from buildExpression AT END 816
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 816
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 816 next token value = 'field_company'
buildExpression 818
while buildExpression 818
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_company'
    [2] => 395
)
while buildExpression 818
]
testing leave from buildExpression 818
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 818 next token value = [
NEW ==== testing leave from buildExpression AT END 818
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 818
]
NEW ==== bye bye from buildExpression AT END 818
while buildExpression 816
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 816 next token value = [
NEW ==== testing leave from buildExpression AT END 816
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 816
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 816 next token value = 0
buildExpression 819
while buildExpression 819
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 395
)
while buildExpression 819
]
testing leave from buildExpression 819
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 819 next token value = [
NEW ==== testing leave from buildExpression AT END 819
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 819
]
NEW ==== bye bye from buildExpression AT END 819
while buildExpression 816
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 816 next token value = [
NEW ==== testing leave from buildExpression AT END 816
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 816
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 816 next token value = 'nid'
buildExpression 820
while buildExpression 820
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'nid'
    [2] => 395
)
while buildExpression 820
]
testing leave from buildExpression 820
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 820 next token value =  
NEW ==== testing leave from buildExpression AT END 820
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 820
]
NEW ==== bye bye from buildExpression AT END 820
while buildExpression 816
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 816 next token value =  
NEW ==== testing leave from buildExpression AT END 816
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 816
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 395
)
while buildExpression 816
=
testing leave from buildExpression 816
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 816
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_company'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'nid'
                )

        )

)
PREVIOUS in buildExpression 816
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_company'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'nid'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_company'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'nid'
                )

        )

)
LEAVING case T_VARIABLE 815
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 395
)
while buildExpression 815
=
while buildExpression 815
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 395
)
while buildExpression 815
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 395
)
buildExpression 821
while buildExpression 821
;
testing leave from buildExpression 821
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 821
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
PREVIOUS in buildExpression 821
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $nid
)
LEAVING case T_VARIABLE 815
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $nid
    [2] => 395
)
while buildExpression 815
;
testing leave from buildExpression 815
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 815
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_company'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'nid'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $nid
        )

)
PREVIOUS in buildExpression 815
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 395
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 396
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 396
)
buildExpression 822
while buildExpression 822
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 396
)
buildExpression 823
while buildExpression 823
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 823 next token value = 'values'
buildExpression 824
while buildExpression 824
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 396
)
while buildExpression 824
]
testing leave from buildExpression 824
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 824 next token value = [
NEW ==== testing leave from buildExpression AT END 824
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 824
]
NEW ==== bye bye from buildExpression AT END 824
while buildExpression 823
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 823 next token value = [
NEW ==== testing leave from buildExpression AT END 823
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 823
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 823 next token value = 'field_phone'
buildExpression 825
while buildExpression 825
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_phone'
    [2] => 396
)
while buildExpression 825
]
testing leave from buildExpression 825
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 825 next token value = [
NEW ==== testing leave from buildExpression AT END 825
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 825
]
NEW ==== bye bye from buildExpression AT END 825
while buildExpression 823
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 823 next token value = [
NEW ==== testing leave from buildExpression AT END 823
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 823
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 823 next token value = 0
buildExpression 826
while buildExpression 826
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 396
)
while buildExpression 826
]
testing leave from buildExpression 826
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 826 next token value = [
NEW ==== testing leave from buildExpression AT END 826
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 826
]
NEW ==== bye bye from buildExpression AT END 826
while buildExpression 823
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 823 next token value = [
NEW ==== testing leave from buildExpression AT END 823
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 823
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 823 next token value = 'value'
buildExpression 827
while buildExpression 827
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 396
)
while buildExpression 827
]
testing leave from buildExpression 827
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 827 next token value =  
NEW ==== testing leave from buildExpression AT END 827
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 827
]
NEW ==== bye bye from buildExpression AT END 827
while buildExpression 823
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 823 next token value =  
NEW ==== testing leave from buildExpression AT END 823
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 823
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 396
)
while buildExpression 823
=
testing leave from buildExpression 823
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 823
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 823
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 822
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 396
)
while buildExpression 822
=
while buildExpression 822
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 396
)
while buildExpression 822
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 396
)
buildExpression 828
while buildExpression 828
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 828 next token value = 'e_phone_1'
buildExpression 829
while buildExpression 829
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 396
)
while buildExpression 829
]
testing leave from buildExpression 829
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 829 next token value = [
NEW ==== testing leave from buildExpression AT END 829
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 829
]
NEW ==== bye bye from buildExpression AT END 829
while buildExpression 828
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 828 next token value = [
NEW ==== testing leave from buildExpression AT END 828
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 828
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 828 next token value = '#value'
buildExpression 830
while buildExpression 830
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 396
)
while buildExpression 830
]
testing leave from buildExpression 830
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 830 next token value = ;
NEW ==== testing leave from buildExpression AT END 830
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 830
]
NEW ==== bye bye from buildExpression AT END 830
while buildExpression 828
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 828 next token value = ;
NEW ==== testing leave from buildExpression AT END 828
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 828
;
testing leave from buildExpression 828
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 828
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 828
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 822
]
NEW ==== testing leave from buildExpression AT END 822
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 822
;
testing leave from buildExpression 822
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 822
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_phone'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_1'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 822
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 396
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 397
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 397
)
buildExpression 831
while buildExpression 831
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 397
)
buildExpression 832
while buildExpression 832
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 832 next token value = 'values'
buildExpression 833
while buildExpression 833
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 397
)
while buildExpression 833
]
testing leave from buildExpression 833
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 833 next token value = [
NEW ==== testing leave from buildExpression AT END 833
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 833
]
NEW ==== bye bye from buildExpression AT END 833
while buildExpression 832
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 832 next token value = [
NEW ==== testing leave from buildExpression AT END 832
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 832
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 832 next token value = 'field_phone'
buildExpression 834
while buildExpression 834
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_phone'
    [2] => 397
)
while buildExpression 834
]
testing leave from buildExpression 834
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 834 next token value = [
NEW ==== testing leave from buildExpression AT END 834
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 834
]
NEW ==== bye bye from buildExpression AT END 834
while buildExpression 832
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 832 next token value = [
NEW ==== testing leave from buildExpression AT END 832
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 832
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 832 next token value = 1
buildExpression 835
while buildExpression 835
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 397
)
while buildExpression 835
]
testing leave from buildExpression 835
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 835 next token value = [
NEW ==== testing leave from buildExpression AT END 835
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 835
]
NEW ==== bye bye from buildExpression AT END 835
while buildExpression 832
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 832 next token value = [
NEW ==== testing leave from buildExpression AT END 832
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 832
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 832 next token value = 'value'
buildExpression 836
while buildExpression 836
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 397
)
while buildExpression 836
]
testing leave from buildExpression 836
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 836 next token value =  
NEW ==== testing leave from buildExpression AT END 836
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 836
]
NEW ==== bye bye from buildExpression AT END 836
while buildExpression 832
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 832 next token value =  
NEW ==== testing leave from buildExpression AT END 832
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 832
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 397
)
while buildExpression 832
=
testing leave from buildExpression 832
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 832
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 1
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 832
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 1
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 1
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 831
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 397
)
while buildExpression 831
=
while buildExpression 831
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 397
)
while buildExpression 831
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 397
)
buildExpression 837
while buildExpression 837
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 837 next token value = 'e_phone_2'
buildExpression 838
while buildExpression 838
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_2'
    [2] => 397
)
while buildExpression 838
]
testing leave from buildExpression 838
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 838 next token value = [
NEW ==== testing leave from buildExpression AT END 838
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 838
]
NEW ==== bye bye from buildExpression AT END 838
while buildExpression 837
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 837 next token value = [
NEW ==== testing leave from buildExpression AT END 837
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 837
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 837 next token value = '#value'
buildExpression 839
while buildExpression 839
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 397
)
while buildExpression 839
]
testing leave from buildExpression 839
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 839 next token value = ;
NEW ==== testing leave from buildExpression AT END 839
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 839
]
NEW ==== bye bye from buildExpression AT END 839
while buildExpression 837
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 837 next token value = ;
NEW ==== testing leave from buildExpression AT END 837
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 837
;
testing leave from buildExpression 837
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 837
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 837
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 831
]
NEW ==== testing leave from buildExpression AT END 831
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 831
;
testing leave from buildExpression 831
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 831
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_phone'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 1
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_2'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 831
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 397
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 398
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 398
)
buildExpression 840
while buildExpression 840
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 398
)
buildExpression 841
while buildExpression 841
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 841 next token value = 'values'
buildExpression 842
while buildExpression 842
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 398
)
while buildExpression 842
]
testing leave from buildExpression 842
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 842 next token value = [
NEW ==== testing leave from buildExpression AT END 842
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 842
]
NEW ==== bye bye from buildExpression AT END 842
while buildExpression 841
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 841 next token value = [
NEW ==== testing leave from buildExpression AT END 841
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 841
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 841 next token value = 'field_phone'
buildExpression 843
while buildExpression 843
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_phone'
    [2] => 398
)
while buildExpression 843
]
testing leave from buildExpression 843
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 843 next token value = [
NEW ==== testing leave from buildExpression AT END 843
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 843
]
NEW ==== bye bye from buildExpression AT END 843
while buildExpression 841
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 841 next token value = [
NEW ==== testing leave from buildExpression AT END 841
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 841
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 841 next token value = 2
buildExpression 844
while buildExpression 844
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 2
    [2] => 398
)
while buildExpression 844
]
testing leave from buildExpression 844
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 844 next token value = [
NEW ==== testing leave from buildExpression AT END 844
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 844
]
NEW ==== bye bye from buildExpression AT END 844
while buildExpression 841
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 841 next token value = [
NEW ==== testing leave from buildExpression AT END 841
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 841
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 841 next token value = 'value'
buildExpression 845
while buildExpression 845
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 398
)
while buildExpression 845
]
testing leave from buildExpression 845
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 845 next token value =  
NEW ==== testing leave from buildExpression AT END 845
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 845
]
NEW ==== bye bye from buildExpression AT END 845
while buildExpression 841
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 841 next token value =  
NEW ==== testing leave from buildExpression AT END 841
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 841
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 398
)
while buildExpression 841
=
testing leave from buildExpression 841
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 841
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 2
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 841
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 2
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_phone'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 2
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 840
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 398
)
while buildExpression 840
=
while buildExpression 840
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 398
)
while buildExpression 840
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 398
)
buildExpression 846
while buildExpression 846
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 846 next token value = 'e_phone_3'
buildExpression 847
while buildExpression 847
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_3'
    [2] => 398
)
while buildExpression 847
]
testing leave from buildExpression 847
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 847 next token value = [
NEW ==== testing leave from buildExpression AT END 847
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 847
]
NEW ==== bye bye from buildExpression AT END 847
while buildExpression 846
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 846 next token value = [
NEW ==== testing leave from buildExpression AT END 846
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 846
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 846 next token value = '#value'
buildExpression 848
while buildExpression 848
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 398
)
while buildExpression 848
]
testing leave from buildExpression 848
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 848 next token value = ;
NEW ==== testing leave from buildExpression AT END 848
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 848
]
NEW ==== bye bye from buildExpression AT END 848
while buildExpression 846
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 846 next token value = ;
NEW ==== testing leave from buildExpression AT END 846
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 846
;
testing leave from buildExpression 846
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 846
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 846
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 840
]
NEW ==== testing leave from buildExpression AT END 840
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 840
;
testing leave from buildExpression 840
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 840
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_phone'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 2
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_3'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 840
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
        
    [2] => 398
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 400
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 400
)
buildExpression 849
while buildExpression 849
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 400
)
buildExpression 850
while buildExpression 850
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 850 next token value = 'values'
buildExpression 851
while buildExpression 851
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 400
)
while buildExpression 851
]
testing leave from buildExpression 851
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 851 next token value = [
NEW ==== testing leave from buildExpression AT END 851
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 851
]
NEW ==== bye bye from buildExpression AT END 851
while buildExpression 850
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 850 next token value = [
NEW ==== testing leave from buildExpression AT END 850
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 850
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 850 next token value = 'field_price'
buildExpression 852
while buildExpression 852
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price'
    [2] => 400
)
while buildExpression 852
]
testing leave from buildExpression 852
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 852 next token value = [
NEW ==== testing leave from buildExpression AT END 852
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 852
]
NEW ==== bye bye from buildExpression AT END 852
while buildExpression 850
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 850 next token value = [
NEW ==== testing leave from buildExpression AT END 850
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 850
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 850 next token value = 0
buildExpression 853
while buildExpression 853
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 400
)
while buildExpression 853
]
testing leave from buildExpression 853
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 853 next token value = [
NEW ==== testing leave from buildExpression AT END 853
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 853
]
NEW ==== bye bye from buildExpression AT END 853
while buildExpression 850
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 850 next token value = [
NEW ==== testing leave from buildExpression AT END 850
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 850
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 850 next token value = 'value'
buildExpression 854
while buildExpression 854
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 400
)
while buildExpression 854
]
testing leave from buildExpression 854
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 854 next token value =  
NEW ==== testing leave from buildExpression AT END 854
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 854
]
NEW ==== bye bye from buildExpression AT END 854
while buildExpression 850
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 850 next token value =  
NEW ==== testing leave from buildExpression AT END 850
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 850
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 400
)
while buildExpression 850
=
testing leave from buildExpression 850
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 850
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 850
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 849
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 400
)
while buildExpression 849
=
while buildExpression 849
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 400
)
while buildExpression 849
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 400
)
buildExpression 855
while buildExpression 855
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 855 next token value = 'price'
buildExpression 856
while buildExpression 856
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price'
    [2] => 400
)
while buildExpression 856
]
testing leave from buildExpression 856
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 856 next token value = [
NEW ==== testing leave from buildExpression AT END 856
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 856
]
NEW ==== bye bye from buildExpression AT END 856
while buildExpression 855
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 855 next token value = [
NEW ==== testing leave from buildExpression AT END 855
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 855
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 855 next token value = '#value'
buildExpression 857
while buildExpression 857
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 400
)
while buildExpression 857
]
testing leave from buildExpression 857
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 857 next token value = ;
NEW ==== testing leave from buildExpression AT END 857
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 857
]
NEW ==== bye bye from buildExpression AT END 857
while buildExpression 855
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 855 next token value = ;
NEW ==== testing leave from buildExpression AT END 855
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 855
;
testing leave from buildExpression 855
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 855
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 855
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 849
]
NEW ==== testing leave from buildExpression AT END 849
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 849
;
testing leave from buildExpression 849
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 849
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 849
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 400
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 401
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 401
)
buildExpression 858
while buildExpression 858
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 401
)
buildExpression 859
while buildExpression 859
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 859 next token value = 'values'
buildExpression 860
while buildExpression 860
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 401
)
while buildExpression 860
]
testing leave from buildExpression 860
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 860 next token value = [
NEW ==== testing leave from buildExpression AT END 860
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 860
]
NEW ==== bye bye from buildExpression AT END 860
while buildExpression 859
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 859 next token value = [
NEW ==== testing leave from buildExpression AT END 859
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 859
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 859 next token value = 'field_price1'
buildExpression 861
while buildExpression 861
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price1'
    [2] => 401
)
while buildExpression 861
]
testing leave from buildExpression 861
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 861 next token value = [
NEW ==== testing leave from buildExpression AT END 861
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 861
]
NEW ==== bye bye from buildExpression AT END 861
while buildExpression 859
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 859 next token value = [
NEW ==== testing leave from buildExpression AT END 859
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 859
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 859 next token value = 0
buildExpression 862
while buildExpression 862
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 401
)
while buildExpression 862
]
testing leave from buildExpression 862
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 862 next token value = [
NEW ==== testing leave from buildExpression AT END 862
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 862
]
NEW ==== bye bye from buildExpression AT END 862
while buildExpression 859
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 859 next token value = [
NEW ==== testing leave from buildExpression AT END 859
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 859
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 859 next token value = 'value'
buildExpression 863
while buildExpression 863
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 401
)
while buildExpression 863
]
testing leave from buildExpression 863
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 863 next token value =  
NEW ==== testing leave from buildExpression AT END 863
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 863
]
NEW ==== bye bye from buildExpression AT END 863
while buildExpression 859
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 859 next token value =  
NEW ==== testing leave from buildExpression AT END 859
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 859
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 401
)
while buildExpression 859
=
testing leave from buildExpression 859
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 859
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 859
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 858
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 401
)
while buildExpression 858
=
while buildExpression 858
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 401
)
while buildExpression 858
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 401
)
buildExpression 864
while buildExpression 864
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 864 next token value = 'price1'
buildExpression 865
while buildExpression 865
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price1'
    [2] => 401
)
while buildExpression 865
]
testing leave from buildExpression 865
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 865 next token value = [
NEW ==== testing leave from buildExpression AT END 865
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 865
]
NEW ==== bye bye from buildExpression AT END 865
while buildExpression 864
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 864 next token value = [
NEW ==== testing leave from buildExpression AT END 864
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 864
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 864 next token value = '#value'
buildExpression 866
while buildExpression 866
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 401
)
while buildExpression 866
]
testing leave from buildExpression 866
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 866 next token value = ;
NEW ==== testing leave from buildExpression AT END 866
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 866
]
NEW ==== bye bye from buildExpression AT END 866
while buildExpression 864
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 864 next token value = ;
NEW ==== testing leave from buildExpression AT END 864
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 864
;
testing leave from buildExpression 864
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 864
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 864
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 858
]
NEW ==== testing leave from buildExpression AT END 858
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 858
;
testing leave from buildExpression 858
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 858
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price1'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price1'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 858
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 401
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 402
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 402
)
buildExpression 867
while buildExpression 867
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 402
)
buildExpression 868
while buildExpression 868
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 868 next token value = 'values'
buildExpression 869
while buildExpression 869
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 402
)
while buildExpression 869
]
testing leave from buildExpression 869
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 869 next token value = [
NEW ==== testing leave from buildExpression AT END 869
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 869
]
NEW ==== bye bye from buildExpression AT END 869
while buildExpression 868
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 868 next token value = [
NEW ==== testing leave from buildExpression AT END 868
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 868
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 868 next token value = 'field_price2'
buildExpression 870
while buildExpression 870
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price2'
    [2] => 402
)
while buildExpression 870
]
testing leave from buildExpression 870
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 870 next token value = [
NEW ==== testing leave from buildExpression AT END 870
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 870
]
NEW ==== bye bye from buildExpression AT END 870
while buildExpression 868
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 868 next token value = [
NEW ==== testing leave from buildExpression AT END 868
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 868
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 868 next token value = 0
buildExpression 871
while buildExpression 871
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 402
)
while buildExpression 871
]
testing leave from buildExpression 871
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 871 next token value = [
NEW ==== testing leave from buildExpression AT END 871
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 871
]
NEW ==== bye bye from buildExpression AT END 871
while buildExpression 868
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 868 next token value = [
NEW ==== testing leave from buildExpression AT END 868
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 868
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 868 next token value = 'value'
buildExpression 872
while buildExpression 872
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 402
)
while buildExpression 872
]
testing leave from buildExpression 872
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 872 next token value =  
NEW ==== testing leave from buildExpression AT END 872
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 872
]
NEW ==== bye bye from buildExpression AT END 872
while buildExpression 868
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 868 next token value =  
NEW ==== testing leave from buildExpression AT END 868
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 868
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 402
)
while buildExpression 868
=
testing leave from buildExpression 868
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 868
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 868
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 867
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 402
)
while buildExpression 867
=
while buildExpression 867
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 402
)
while buildExpression 867
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 402
)
buildExpression 873
while buildExpression 873
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 873 next token value = 'price2'
buildExpression 874
while buildExpression 874
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price2'
    [2] => 402
)
while buildExpression 874
]
testing leave from buildExpression 874
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 874 next token value = [
NEW ==== testing leave from buildExpression AT END 874
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 874
]
NEW ==== bye bye from buildExpression AT END 874
while buildExpression 873
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 873 next token value = [
NEW ==== testing leave from buildExpression AT END 873
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 873
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 873 next token value = '#value'
buildExpression 875
while buildExpression 875
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 402
)
while buildExpression 875
]
testing leave from buildExpression 875
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 875 next token value = ;
NEW ==== testing leave from buildExpression AT END 875
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 875
]
NEW ==== bye bye from buildExpression AT END 875
while buildExpression 873
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 873 next token value = ;
NEW ==== testing leave from buildExpression AT END 873
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 873
;
testing leave from buildExpression 873
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 873
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 873
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 867
]
NEW ==== testing leave from buildExpression AT END 867
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 867
;
testing leave from buildExpression 867
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 867
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price2'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price2'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 867
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 402
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 403
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 403
)
buildExpression 876
while buildExpression 876
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 403
)
buildExpression 877
while buildExpression 877
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 877 next token value = 'values'
buildExpression 878
while buildExpression 878
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 403
)
while buildExpression 878
]
testing leave from buildExpression 878
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 878 next token value = [
NEW ==== testing leave from buildExpression AT END 878
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 878
]
NEW ==== bye bye from buildExpression AT END 878
while buildExpression 877
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 877 next token value = [
NEW ==== testing leave from buildExpression AT END 877
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 877
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 877 next token value = 'field_price3'
buildExpression 879
while buildExpression 879
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price3'
    [2] => 403
)
while buildExpression 879
]
testing leave from buildExpression 879
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 879 next token value = [
NEW ==== testing leave from buildExpression AT END 879
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 879
]
NEW ==== bye bye from buildExpression AT END 879
while buildExpression 877
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 877 next token value = [
NEW ==== testing leave from buildExpression AT END 877
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 877
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 877 next token value = 0
buildExpression 880
while buildExpression 880
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 403
)
while buildExpression 880
]
testing leave from buildExpression 880
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 880 next token value = [
NEW ==== testing leave from buildExpression AT END 880
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 880
]
NEW ==== bye bye from buildExpression AT END 880
while buildExpression 877
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 877 next token value = [
NEW ==== testing leave from buildExpression AT END 877
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 877
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 877 next token value = 'value'
buildExpression 881
while buildExpression 881
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 403
)
while buildExpression 881
]
testing leave from buildExpression 881
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 881 next token value =  
NEW ==== testing leave from buildExpression AT END 881
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 881
]
NEW ==== bye bye from buildExpression AT END 881
while buildExpression 877
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 877 next token value =  
NEW ==== testing leave from buildExpression AT END 877
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 877
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 403
)
while buildExpression 877
=
testing leave from buildExpression 877
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 877
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 877
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 876
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 403
)
while buildExpression 876
=
while buildExpression 876
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 403
)
while buildExpression 876
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 403
)
buildExpression 882
while buildExpression 882
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 882 next token value = 'price3'
buildExpression 883
while buildExpression 883
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price3'
    [2] => 403
)
while buildExpression 883
]
testing leave from buildExpression 883
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 883 next token value = [
NEW ==== testing leave from buildExpression AT END 883
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 883
]
NEW ==== bye bye from buildExpression AT END 883
while buildExpression 882
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 882 next token value = [
NEW ==== testing leave from buildExpression AT END 882
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 882
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 882 next token value = '#value'
buildExpression 884
while buildExpression 884
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 403
)
while buildExpression 884
]
testing leave from buildExpression 884
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 884 next token value = ;
NEW ==== testing leave from buildExpression AT END 884
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 884
]
NEW ==== bye bye from buildExpression AT END 884
while buildExpression 882
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 882 next token value = ;
NEW ==== testing leave from buildExpression AT END 882
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 882
;
testing leave from buildExpression 882
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 882
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 882
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 876
]
NEW ==== testing leave from buildExpression AT END 876
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 876
;
testing leave from buildExpression 876
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 876
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price3'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price3'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 876
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 403
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 404
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 404
)
buildExpression 885
while buildExpression 885
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 404
)
buildExpression 886
while buildExpression 886
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 886 next token value = 'values'
buildExpression 887
while buildExpression 887
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 404
)
while buildExpression 887
]
testing leave from buildExpression 887
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 887 next token value = [
NEW ==== testing leave from buildExpression AT END 887
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 887
]
NEW ==== bye bye from buildExpression AT END 887
while buildExpression 886
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 886 next token value = [
NEW ==== testing leave from buildExpression AT END 886
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 886
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 886 next token value = 'field_price4'
buildExpression 888
while buildExpression 888
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price4'
    [2] => 404
)
while buildExpression 888
]
testing leave from buildExpression 888
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 888 next token value = [
NEW ==== testing leave from buildExpression AT END 888
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 888
]
NEW ==== bye bye from buildExpression AT END 888
while buildExpression 886
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 886 next token value = [
NEW ==== testing leave from buildExpression AT END 886
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 886
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 886 next token value = 0
buildExpression 889
while buildExpression 889
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 404
)
while buildExpression 889
]
testing leave from buildExpression 889
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 889 next token value = [
NEW ==== testing leave from buildExpression AT END 889
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 889
]
NEW ==== bye bye from buildExpression AT END 889
while buildExpression 886
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 886 next token value = [
NEW ==== testing leave from buildExpression AT END 886
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 886
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 886 next token value = 'value'
buildExpression 890
while buildExpression 890
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 404
)
while buildExpression 890
]
testing leave from buildExpression 890
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 890 next token value =  
NEW ==== testing leave from buildExpression AT END 890
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 890
]
NEW ==== bye bye from buildExpression AT END 890
while buildExpression 886
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 886 next token value =  
NEW ==== testing leave from buildExpression AT END 886
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 886
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 404
)
while buildExpression 886
=
testing leave from buildExpression 886
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 886
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price4'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 886
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price4'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price4'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 885
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 404
)
while buildExpression 885
=
while buildExpression 885
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 404
)
while buildExpression 885
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 404
)
buildExpression 891
while buildExpression 891
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 891 next token value = 'price4'
buildExpression 892
while buildExpression 892
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price4'
    [2] => 404
)
while buildExpression 892
]
testing leave from buildExpression 892
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 892 next token value = [
NEW ==== testing leave from buildExpression AT END 892
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 892
]
NEW ==== bye bye from buildExpression AT END 892
while buildExpression 891
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 891 next token value = [
NEW ==== testing leave from buildExpression AT END 891
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 891
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 891 next token value = '#value'
buildExpression 893
while buildExpression 893
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 404
)
while buildExpression 893
]
testing leave from buildExpression 893
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 893 next token value = ;
NEW ==== testing leave from buildExpression AT END 893
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 893
]
NEW ==== bye bye from buildExpression AT END 893
while buildExpression 891
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 891 next token value = ;
NEW ==== testing leave from buildExpression AT END 891
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 891
;
testing leave from buildExpression 891
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 891
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 891
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 885
]
NEW ==== testing leave from buildExpression AT END 885
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 885
;
testing leave from buildExpression 885
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 885
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price4'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price4'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 885
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 404
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 405
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 405
)
buildExpression 894
while buildExpression 894
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 405
)
buildExpression 895
while buildExpression 895
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 895 next token value = 'values'
buildExpression 896
while buildExpression 896
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 405
)
while buildExpression 896
]
testing leave from buildExpression 896
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 896 next token value = [
NEW ==== testing leave from buildExpression AT END 896
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 896
]
NEW ==== bye bye from buildExpression AT END 896
while buildExpression 895
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 895 next token value = [
NEW ==== testing leave from buildExpression AT END 895
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 895
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 895 next token value = 'field_price5'
buildExpression 897
while buildExpression 897
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price5'
    [2] => 405
)
while buildExpression 897
]
testing leave from buildExpression 897
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 897 next token value = [
NEW ==== testing leave from buildExpression AT END 897
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 897
]
NEW ==== bye bye from buildExpression AT END 897
while buildExpression 895
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 895 next token value = [
NEW ==== testing leave from buildExpression AT END 895
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 895
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 895 next token value = 0
buildExpression 898
while buildExpression 898
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 405
)
while buildExpression 898
]
testing leave from buildExpression 898
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 898 next token value = [
NEW ==== testing leave from buildExpression AT END 898
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 898
]
NEW ==== bye bye from buildExpression AT END 898
while buildExpression 895
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 895 next token value = [
NEW ==== testing leave from buildExpression AT END 895
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 895
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 895 next token value = 'value'
buildExpression 899
while buildExpression 899
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 405
)
while buildExpression 899
]
testing leave from buildExpression 899
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 899 next token value =  
NEW ==== testing leave from buildExpression AT END 899
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 899
]
NEW ==== bye bye from buildExpression AT END 899
while buildExpression 895
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 895 next token value =  
NEW ==== testing leave from buildExpression AT END 895
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 895
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 405
)
while buildExpression 895
=
testing leave from buildExpression 895
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 895
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price5'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 895
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price5'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price5'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 894
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 405
)
while buildExpression 894
=
while buildExpression 894
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 405
)
while buildExpression 894
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 405
)
buildExpression 900
while buildExpression 900
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 900 next token value = 'price5'
buildExpression 901
while buildExpression 901
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price5'
    [2] => 405
)
while buildExpression 901
]
testing leave from buildExpression 901
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 901 next token value = [
NEW ==== testing leave from buildExpression AT END 901
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 901
]
NEW ==== bye bye from buildExpression AT END 901
while buildExpression 900
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 900 next token value = [
NEW ==== testing leave from buildExpression AT END 900
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 900
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 900 next token value = '#value'
buildExpression 902
while buildExpression 902
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 405
)
while buildExpression 902
]
testing leave from buildExpression 902
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 902 next token value = ;
NEW ==== testing leave from buildExpression AT END 902
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 902
]
NEW ==== bye bye from buildExpression AT END 902
while buildExpression 900
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 900 next token value = ;
NEW ==== testing leave from buildExpression AT END 900
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 900
;
testing leave from buildExpression 900
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 900
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 900
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 894
]
NEW ==== testing leave from buildExpression AT END 894
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 894
;
testing leave from buildExpression 894
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 894
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price5'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price5'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 894
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 405
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 406
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 406
)
buildExpression 903
while buildExpression 903
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 406
)
buildExpression 904
while buildExpression 904
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 904 next token value = 'values'
buildExpression 905
while buildExpression 905
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 406
)
while buildExpression 905
]
testing leave from buildExpression 905
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 905 next token value = [
NEW ==== testing leave from buildExpression AT END 905
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 905
]
NEW ==== bye bye from buildExpression AT END 905
while buildExpression 904
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 904 next token value = [
NEW ==== testing leave from buildExpression AT END 904
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 904
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 904 next token value = 'field_price6'
buildExpression 906
while buildExpression 906
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_price6'
    [2] => 406
)
while buildExpression 906
]
testing leave from buildExpression 906
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 906 next token value = [
NEW ==== testing leave from buildExpression AT END 906
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 906
]
NEW ==== bye bye from buildExpression AT END 906
while buildExpression 904
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 904 next token value = [
NEW ==== testing leave from buildExpression AT END 904
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 904
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 904 next token value = 0
buildExpression 907
while buildExpression 907
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 406
)
while buildExpression 907
]
testing leave from buildExpression 907
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 907 next token value = [
NEW ==== testing leave from buildExpression AT END 907
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 907
]
NEW ==== bye bye from buildExpression AT END 907
while buildExpression 904
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 904 next token value = [
NEW ==== testing leave from buildExpression AT END 904
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 904
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 904 next token value = 'value'
buildExpression 908
while buildExpression 908
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 406
)
while buildExpression 908
]
testing leave from buildExpression 908
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 908 next token value =  
NEW ==== testing leave from buildExpression AT END 908
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 908
]
NEW ==== bye bye from buildExpression AT END 908
while buildExpression 904
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 904 next token value =  
NEW ==== testing leave from buildExpression AT END 904
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 904
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 406
)
while buildExpression 904
=
testing leave from buildExpression 904
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 904
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price6'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 904
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price6'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_price6'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 903
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 406
)
while buildExpression 903
=
while buildExpression 903
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 406
)
while buildExpression 903
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 406
)
buildExpression 909
while buildExpression 909
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 909 next token value = 'price6'
buildExpression 910
while buildExpression 910
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price6'
    [2] => 406
)
while buildExpression 910
]
testing leave from buildExpression 910
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 910 next token value = [
NEW ==== testing leave from buildExpression AT END 910
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 910
]
NEW ==== bye bye from buildExpression AT END 910
while buildExpression 909
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 909 next token value = [
NEW ==== testing leave from buildExpression AT END 909
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 909
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 909 next token value = '#value'
buildExpression 911
while buildExpression 911
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 406
)
while buildExpression 911
]
testing leave from buildExpression 911
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 911 next token value = ;
NEW ==== testing leave from buildExpression AT END 911
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 911
]
NEW ==== bye bye from buildExpression AT END 911
while buildExpression 909
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 909 next token value = ;
NEW ==== testing leave from buildExpression AT END 909
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 909
;
testing leave from buildExpression 909
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 909
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 909
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 903
]
NEW ==== testing leave from buildExpression AT END 903
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 903
;
testing leave from buildExpression 903
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 903
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_price6'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price6'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 903
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
        
    [2] => 406
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 408
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 408
)
buildExpression 912
while buildExpression 912
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 408
)
buildExpression 913
while buildExpression 913
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 913 next token value = 'values'
buildExpression 914
while buildExpression 914
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 408
)
while buildExpression 914
]
testing leave from buildExpression 914
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 914 next token value = [
NEW ==== testing leave from buildExpression AT END 914
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 914
]
NEW ==== bye bye from buildExpression AT END 914
while buildExpression 913
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 913 next token value = [
NEW ==== testing leave from buildExpression AT END 913
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 913
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 913 next token value = 'field_discount'
buildExpression 915
while buildExpression 915
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_discount'
    [2] => 408
)
while buildExpression 915
]
testing leave from buildExpression 915
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 915 next token value = [
NEW ==== testing leave from buildExpression AT END 915
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 915
]
NEW ==== bye bye from buildExpression AT END 915
while buildExpression 913
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 913 next token value = [
NEW ==== testing leave from buildExpression AT END 913
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 913
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 913 next token value = 0
buildExpression 916
while buildExpression 916
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 408
)
while buildExpression 916
]
testing leave from buildExpression 916
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 916 next token value = [
NEW ==== testing leave from buildExpression AT END 916
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 916
]
NEW ==== bye bye from buildExpression AT END 916
while buildExpression 913
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 913 next token value = [
NEW ==== testing leave from buildExpression AT END 913
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 913
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 913 next token value = 'value'
buildExpression 917
while buildExpression 917
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 408
)
while buildExpression 917
]
testing leave from buildExpression 917
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 917 next token value =  
NEW ==== testing leave from buildExpression AT END 917
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 917
]
NEW ==== bye bye from buildExpression AT END 917
while buildExpression 913
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 913 next token value =  
NEW ==== testing leave from buildExpression AT END 913
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 913
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 408
)
while buildExpression 913
=
testing leave from buildExpression 913
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 913
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_discount'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 913
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_discount'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_discount'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 912
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 408
)
while buildExpression 912
=
while buildExpression 912
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 408
)
while buildExpression 912
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 408
)
buildExpression 918
while buildExpression 918
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 918 next token value = 'discount'
buildExpression 919
while buildExpression 919
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'discount'
    [2] => 408
)
while buildExpression 919
]
testing leave from buildExpression 919
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 919 next token value = [
NEW ==== testing leave from buildExpression AT END 919
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 919
]
NEW ==== bye bye from buildExpression AT END 919
while buildExpression 918
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 918 next token value = [
NEW ==== testing leave from buildExpression AT END 918
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 918
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 918 next token value = '#value'
buildExpression 920
while buildExpression 920
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 408
)
while buildExpression 920
]
testing leave from buildExpression 920
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 920 next token value = ;
NEW ==== testing leave from buildExpression AT END 920
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 920
]
NEW ==== bye bye from buildExpression AT END 920
while buildExpression 918
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 918 next token value = ;
NEW ==== testing leave from buildExpression AT END 918
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 918
;
testing leave from buildExpression 918
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 918
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 918
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 912
]
NEW ==== testing leave from buildExpression AT END 912
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 912
;
testing leave from buildExpression 912
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 912
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_discount'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'discount'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 912
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 408
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 409
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 409
)
buildExpression 921
while buildExpression 921
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 409
)
buildExpression 922
while buildExpression 922
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 922 next token value = 'values'
buildExpression 923
while buildExpression 923
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 409
)
while buildExpression 923
]
testing leave from buildExpression 923
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 923 next token value = [
NEW ==== testing leave from buildExpression AT END 923
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 923
]
NEW ==== bye bye from buildExpression AT END 923
while buildExpression 922
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 922 next token value = [
NEW ==== testing leave from buildExpression AT END 922
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 922
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 922 next token value = 'field_gps_eq'
buildExpression 924
while buildExpression 924
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_gps_eq'
    [2] => 409
)
while buildExpression 924
]
testing leave from buildExpression 924
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 924 next token value = [
NEW ==== testing leave from buildExpression AT END 924
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 924
]
NEW ==== bye bye from buildExpression AT END 924
while buildExpression 922
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 922 next token value = [
NEW ==== testing leave from buildExpression AT END 922
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 922
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 922 next token value = 0
buildExpression 925
while buildExpression 925
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 409
)
while buildExpression 925
]
testing leave from buildExpression 925
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 925 next token value = [
NEW ==== testing leave from buildExpression AT END 925
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 925
]
NEW ==== bye bye from buildExpression AT END 925
while buildExpression 922
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 922 next token value = [
NEW ==== testing leave from buildExpression AT END 922
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 922
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 922 next token value = 'value'
buildExpression 926
while buildExpression 926
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 409
)
while buildExpression 926
]
testing leave from buildExpression 926
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 926 next token value =  
NEW ==== testing leave from buildExpression AT END 926
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 926
]
NEW ==== bye bye from buildExpression AT END 926
while buildExpression 922
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 922 next token value =  
NEW ==== testing leave from buildExpression AT END 922
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 922
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 409
)
while buildExpression 922
=
testing leave from buildExpression 922
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 922
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_gps_eq'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
PREVIOUS in buildExpression 922
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_gps_eq'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_gps_eq'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

)
LEAVING case T_VARIABLE 921
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 409
)
while buildExpression 921
=
while buildExpression 921
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 409
)
while buildExpression 921
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 409
)
buildExpression 927
while buildExpression 927
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 927 next token value = 'gps_eq'
buildExpression 928
while buildExpression 928
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'gps_eq'
    [2] => 409
)
while buildExpression 928
]
testing leave from buildExpression 928
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 928 next token value = [
NEW ==== testing leave from buildExpression AT END 928
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 928
]
NEW ==== bye bye from buildExpression AT END 928
while buildExpression 927
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 927 next token value = [
NEW ==== testing leave from buildExpression AT END 927
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 927
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 927 next token value = '#value'
buildExpression 929
while buildExpression 929
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 409
)
while buildExpression 929
]
testing leave from buildExpression 929
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 929 next token value = ;
NEW ==== testing leave from buildExpression AT END 929
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 929
]
NEW ==== bye bye from buildExpression AT END 929
while buildExpression 927
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 927 next token value = ;
NEW ==== testing leave from buildExpression AT END 927
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 927
;
testing leave from buildExpression 927
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 927
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 927
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 921
]
NEW ==== testing leave from buildExpression AT END 921
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 921
;
testing leave from buildExpression 921
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 921
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_gps_eq'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'gps_eq'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 921
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
        
    [2] => 409
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 411
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 411
)
buildExpression 930
while buildExpression 930
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 411
)
buildExpression 931
while buildExpression 931
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 931 next token value = 'values'
buildExpression 932
while buildExpression 932
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 411
)
while buildExpression 932
]
testing leave from buildExpression 932
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 932 next token value = [
NEW ==== testing leave from buildExpression AT END 932
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 932
]
NEW ==== bye bye from buildExpression AT END 932
while buildExpression 931
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 931 next token value = [
NEW ==== testing leave from buildExpression AT END 931
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 931
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 931 next token value = 'field_options'
buildExpression 933
while buildExpression 933
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_options'
    [2] => 411
)
while buildExpression 933
]
testing leave from buildExpression 933
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 933 next token value = [
NEW ==== testing leave from buildExpression AT END 933
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 933
]
NEW ==== bye bye from buildExpression AT END 933
while buildExpression 931
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 931 next token value = [
NEW ==== testing leave from buildExpression AT END 931
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 931
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 931 next token value = 'value'
buildExpression 934
while buildExpression 934
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 411
)
while buildExpression 934
]
testing leave from buildExpression 934
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 934 next token value = [
NEW ==== testing leave from buildExpression AT END 934
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 934
]
NEW ==== bye bye from buildExpression AT END 934
while buildExpression 931
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 931 next token value = [
NEW ==== testing leave from buildExpression AT END 931
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 931
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 931 next token value = '1'
buildExpression 935
while buildExpression 935
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '1'
    [2] => 411
)
while buildExpression 935
]
testing leave from buildExpression 935
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 935 next token value =  
NEW ==== testing leave from buildExpression AT END 935
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 935
]
NEW ==== bye bye from buildExpression AT END 935
while buildExpression 931
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 931 next token value =  
NEW ==== testing leave from buildExpression AT END 931
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 931
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 411
)
while buildExpression 931
=
testing leave from buildExpression 931
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 931
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '1'
                )

        )

)
PREVIOUS in buildExpression 931
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '1'
                )

        )

)
LEAVING case T_VARIABLE 930
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 411
)
while buildExpression 930
=
while buildExpression 930
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 411
)
while buildExpression 930
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 411
)
buildExpression 936
while buildExpression 936
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 936 next token value = 'options'
buildExpression 937
while buildExpression 937
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 411
)
while buildExpression 937
]
testing leave from buildExpression 937
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 937 next token value = [
NEW ==== testing leave from buildExpression AT END 937
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 937
]
NEW ==== bye bye from buildExpression AT END 937
while buildExpression 936
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 936 next token value = [
NEW ==== testing leave from buildExpression AT END 936
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 936
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 936 next token value = '#value'
buildExpression 938
while buildExpression 938
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 411
)
while buildExpression 938
]
testing leave from buildExpression 938
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 938 next token value = [
NEW ==== testing leave from buildExpression AT END 938
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 938
]
NEW ==== bye bye from buildExpression AT END 938
while buildExpression 936
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 936 next token value = [
NEW ==== testing leave from buildExpression AT END 936
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 936
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 936 next token value = 1
buildExpression 939
while buildExpression 939
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 1
    [2] => 411
)
while buildExpression 939
]
testing leave from buildExpression 939
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 939 next token value = ;
NEW ==== testing leave from buildExpression AT END 939
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 939
]
NEW ==== bye bye from buildExpression AT END 939
while buildExpression 936
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 936 next token value = ;
NEW ==== testing leave from buildExpression AT END 936
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 936
;
testing leave from buildExpression 936
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 936
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 1
        )

)
PREVIOUS in buildExpression 936
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 1
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 1
        )

)
LEAVING case T_VARIABLE 930
]
NEW ==== testing leave from buildExpression AT END 930
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 930
;
testing leave from buildExpression 930
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 930
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 1
                )

        )

)
PREVIOUS in buildExpression 930
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 411
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 412
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 412
)
buildExpression 940
while buildExpression 940
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 412
)
buildExpression 941
while buildExpression 941
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 941 next token value = 'values'
buildExpression 942
while buildExpression 942
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 412
)
while buildExpression 942
]
testing leave from buildExpression 942
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 942 next token value = [
NEW ==== testing leave from buildExpression AT END 942
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 942
]
NEW ==== bye bye from buildExpression AT END 942
while buildExpression 941
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 941 next token value = [
NEW ==== testing leave from buildExpression AT END 941
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 941
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 941 next token value = 'field_options'
buildExpression 943
while buildExpression 943
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_options'
    [2] => 412
)
while buildExpression 943
]
testing leave from buildExpression 943
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 943 next token value = [
NEW ==== testing leave from buildExpression AT END 943
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 943
]
NEW ==== bye bye from buildExpression AT END 943
while buildExpression 941
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 941 next token value = [
NEW ==== testing leave from buildExpression AT END 941
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 941
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 941 next token value = 'value'
buildExpression 944
while buildExpression 944
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 412
)
while buildExpression 944
]
testing leave from buildExpression 944
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 944 next token value = [
NEW ==== testing leave from buildExpression AT END 944
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 944
]
NEW ==== bye bye from buildExpression AT END 944
while buildExpression 941
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 941 next token value = [
NEW ==== testing leave from buildExpression AT END 941
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 941
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 941 next token value = '2'
buildExpression 945
while buildExpression 945
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '2'
    [2] => 412
)
while buildExpression 945
]
testing leave from buildExpression 945
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 945 next token value =  
NEW ==== testing leave from buildExpression AT END 945
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 945
]
NEW ==== bye bye from buildExpression AT END 945
while buildExpression 941
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 941 next token value =  
NEW ==== testing leave from buildExpression AT END 941
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 941
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 412
)
while buildExpression 941
=
testing leave from buildExpression 941
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 941
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '2'
                )

        )

)
PREVIOUS in buildExpression 941
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '2'
                )

        )

)
LEAVING case T_VARIABLE 940
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 412
)
while buildExpression 940
=
while buildExpression 940
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 412
)
while buildExpression 940
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 412
)
buildExpression 946
while buildExpression 946
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 946 next token value = 'options'
buildExpression 947
while buildExpression 947
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 412
)
while buildExpression 947
]
testing leave from buildExpression 947
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 947 next token value = [
NEW ==== testing leave from buildExpression AT END 947
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 947
]
NEW ==== bye bye from buildExpression AT END 947
while buildExpression 946
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 946 next token value = [
NEW ==== testing leave from buildExpression AT END 946
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 946
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 946 next token value = '#value'
buildExpression 948
while buildExpression 948
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 412
)
while buildExpression 948
]
testing leave from buildExpression 948
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 948 next token value = [
NEW ==== testing leave from buildExpression AT END 948
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 948
]
NEW ==== bye bye from buildExpression AT END 948
while buildExpression 946
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 946 next token value = [
NEW ==== testing leave from buildExpression AT END 946
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 946
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 946 next token value = 2
buildExpression 949
while buildExpression 949
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 2
    [2] => 412
)
while buildExpression 949
]
testing leave from buildExpression 949
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 949 next token value = ;
NEW ==== testing leave from buildExpression AT END 949
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 949
]
NEW ==== bye bye from buildExpression AT END 949
while buildExpression 946
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 946 next token value = ;
NEW ==== testing leave from buildExpression AT END 946
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 946
;
testing leave from buildExpression 946
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 946
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 2
        )

)
PREVIOUS in buildExpression 946
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 2
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 2
        )

)
LEAVING case T_VARIABLE 940
]
NEW ==== testing leave from buildExpression AT END 940
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 940
;
testing leave from buildExpression 940
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 940
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 2
                )

        )

)
PREVIOUS in buildExpression 940
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 412
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 413
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 413
)
buildExpression 950
while buildExpression 950
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 413
)
buildExpression 951
while buildExpression 951
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 951 next token value = 'values'
buildExpression 952
while buildExpression 952
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 413
)
while buildExpression 952
]
testing leave from buildExpression 952
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 952 next token value = [
NEW ==== testing leave from buildExpression AT END 952
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 952
]
NEW ==== bye bye from buildExpression AT END 952
while buildExpression 951
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 951 next token value = [
NEW ==== testing leave from buildExpression AT END 951
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 951
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 951 next token value = 'field_options'
buildExpression 953
while buildExpression 953
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_options'
    [2] => 413
)
while buildExpression 953
]
testing leave from buildExpression 953
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 953 next token value = [
NEW ==== testing leave from buildExpression AT END 953
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 953
]
NEW ==== bye bye from buildExpression AT END 953
while buildExpression 951
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 951 next token value = [
NEW ==== testing leave from buildExpression AT END 951
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 951
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 951 next token value = 'value'
buildExpression 954
while buildExpression 954
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 413
)
while buildExpression 954
]
testing leave from buildExpression 954
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 954 next token value = [
NEW ==== testing leave from buildExpression AT END 954
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 954
]
NEW ==== bye bye from buildExpression AT END 954
while buildExpression 951
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 951 next token value = [
NEW ==== testing leave from buildExpression AT END 951
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 951
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 951 next token value = '3'
buildExpression 955
while buildExpression 955
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '3'
    [2] => 413
)
while buildExpression 955
]
testing leave from buildExpression 955
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 955 next token value =  
NEW ==== testing leave from buildExpression AT END 955
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 955
]
NEW ==== bye bye from buildExpression AT END 955
while buildExpression 951
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 951 next token value =  
NEW ==== testing leave from buildExpression AT END 951
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 951
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 413
)
while buildExpression 951
=
testing leave from buildExpression 951
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 951
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '3'
                )

        )

)
PREVIOUS in buildExpression 951
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '3'
                )

        )

)
LEAVING case T_VARIABLE 950
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 413
)
while buildExpression 950
=
while buildExpression 950
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 413
)
while buildExpression 950
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 413
)
buildExpression 956
while buildExpression 956
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 956 next token value = 'options'
buildExpression 957
while buildExpression 957
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 413
)
while buildExpression 957
]
testing leave from buildExpression 957
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 957 next token value = [
NEW ==== testing leave from buildExpression AT END 957
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 957
]
NEW ==== bye bye from buildExpression AT END 957
while buildExpression 956
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 956 next token value = [
NEW ==== testing leave from buildExpression AT END 956
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 956
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 956 next token value = '#value'
buildExpression 958
while buildExpression 958
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 413
)
while buildExpression 958
]
testing leave from buildExpression 958
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 958 next token value = [
NEW ==== testing leave from buildExpression AT END 958
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 958
]
NEW ==== bye bye from buildExpression AT END 958
while buildExpression 956
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 956 next token value = [
NEW ==== testing leave from buildExpression AT END 956
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 956
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 956 next token value = 3
buildExpression 959
while buildExpression 959
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 3
    [2] => 413
)
while buildExpression 959
]
testing leave from buildExpression 959
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 959 next token value = ;
NEW ==== testing leave from buildExpression AT END 959
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 959
]
NEW ==== bye bye from buildExpression AT END 959
while buildExpression 956
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 956 next token value = ;
NEW ==== testing leave from buildExpression AT END 956
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 956
;
testing leave from buildExpression 956
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 956
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 3
        )

)
PREVIOUS in buildExpression 956
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 3
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 3
        )

)
LEAVING case T_VARIABLE 950
]
NEW ==== testing leave from buildExpression AT END 950
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 950
;
testing leave from buildExpression 950
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 950
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 3
                )

        )

)
PREVIOUS in buildExpression 950
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 413
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 414
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 414
)
buildExpression 960
while buildExpression 960
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 414
)
buildExpression 961
while buildExpression 961
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 961 next token value = 'values'
buildExpression 962
while buildExpression 962
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 414
)
while buildExpression 962
]
testing leave from buildExpression 962
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 962 next token value = [
NEW ==== testing leave from buildExpression AT END 962
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 962
]
NEW ==== bye bye from buildExpression AT END 962
while buildExpression 961
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 961 next token value = [
NEW ==== testing leave from buildExpression AT END 961
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 961
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 961 next token value = 'field_options'
buildExpression 963
while buildExpression 963
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'field_options'
    [2] => 414
)
while buildExpression 963
]
testing leave from buildExpression 963
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 963 next token value = [
NEW ==== testing leave from buildExpression AT END 963
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 963
]
NEW ==== bye bye from buildExpression AT END 963
while buildExpression 961
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 961 next token value = [
NEW ==== testing leave from buildExpression AT END 961
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 961
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 961 next token value = 'value'
buildExpression 964
while buildExpression 964
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'value'
    [2] => 414
)
while buildExpression 964
]
testing leave from buildExpression 964
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 964 next token value = [
NEW ==== testing leave from buildExpression AT END 964
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 964
]
NEW ==== bye bye from buildExpression AT END 964
while buildExpression 961
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 961 next token value = [
NEW ==== testing leave from buildExpression AT END 961
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 961
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 961 next token value = '4'
buildExpression 965
while buildExpression 965
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '4'
    [2] => 414
)
while buildExpression 965
]
testing leave from buildExpression 965
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 965 next token value =  
NEW ==== testing leave from buildExpression AT END 965
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 965
]
NEW ==== bye bye from buildExpression AT END 965
while buildExpression 961
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 961 next token value =  
NEW ==== testing leave from buildExpression AT END 961
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 961
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 414
)
while buildExpression 961
=
testing leave from buildExpression 961
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 961
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '4'
                )

        )

)
PREVIOUS in buildExpression 961
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '4'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'field_options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '4'
                )

        )

)
LEAVING case T_VARIABLE 960
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 414
)
while buildExpression 960
=
while buildExpression 960
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 414
)
while buildExpression 960
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 414
)
buildExpression 966
while buildExpression 966
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 966 next token value = 'options'
buildExpression 967
while buildExpression 967
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 414
)
while buildExpression 967
]
testing leave from buildExpression 967
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 967 next token value = [
NEW ==== testing leave from buildExpression AT END 967
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 967
]
NEW ==== bye bye from buildExpression AT END 967
while buildExpression 966
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 966 next token value = [
NEW ==== testing leave from buildExpression AT END 966
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 966
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 966 next token value = '#value'
buildExpression 968
while buildExpression 968
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 414
)
while buildExpression 968
]
testing leave from buildExpression 968
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 968 next token value = [
NEW ==== testing leave from buildExpression AT END 968
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 968
]
NEW ==== bye bye from buildExpression AT END 968
while buildExpression 966
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 966 next token value = [
NEW ==== testing leave from buildExpression AT END 966
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 966
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 966 next token value = 4
buildExpression 969
while buildExpression 969
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 4
    [2] => 414
)
while buildExpression 969
]
testing leave from buildExpression 969
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 969 next token value = ;
NEW ==== testing leave from buildExpression AT END 969
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 969
]
NEW ==== bye bye from buildExpression AT END 969
while buildExpression 966
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 966 next token value = ;
NEW ==== testing leave from buildExpression AT END 966
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 966
;
testing leave from buildExpression 966
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 966
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 4
        )

)
PREVIOUS in buildExpression 966
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 4
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 4
        )

)
LEAVING case T_VARIABLE 960
]
NEW ==== testing leave from buildExpression AT END 960
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 960
;
testing leave from buildExpression 960
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 960
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'field_options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '4'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 4
                )

        )

)
PREVIOUS in buildExpression 960
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
        
    [2] => 414
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 416
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 416
)
buildExpression 970
while buildExpression 970
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 416
)
buildExpression 971
while buildExpression 971
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 971 next token value = 'values'
buildExpression 972
while buildExpression 972
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 416
)
while buildExpression 972
]
testing leave from buildExpression 972
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 972 next token value = [
NEW ==== testing leave from buildExpression AT END 972
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 972
]
NEW ==== bye bye from buildExpression AT END 972
while buildExpression 971
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 971 next token value = [
NEW ==== testing leave from buildExpression AT END 971
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 971
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 971 next token value = 'locations'
buildExpression 973
while buildExpression 973
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'locations'
    [2] => 416
)
while buildExpression 973
]
testing leave from buildExpression 973
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 973 next token value = [
NEW ==== testing leave from buildExpression AT END 973
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 973
]
NEW ==== bye bye from buildExpression AT END 973
while buildExpression 971
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 971 next token value = [
NEW ==== testing leave from buildExpression AT END 971
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 971
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 971 next token value = 0
buildExpression 974
while buildExpression 974
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 416
)
while buildExpression 974
]
testing leave from buildExpression 974
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 974 next token value = [
NEW ==== testing leave from buildExpression AT END 974
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 974
]
NEW ==== bye bye from buildExpression AT END 974
while buildExpression 971
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 971 next token value = [
NEW ==== testing leave from buildExpression AT END 971
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 971
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 971 next token value = 'locpick'
buildExpression 975
while buildExpression 975
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'locpick'
    [2] => 416
)
while buildExpression 975
]
testing leave from buildExpression 975
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 975 next token value = [
NEW ==== testing leave from buildExpression AT END 975
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 975
]
NEW ==== bye bye from buildExpression AT END 975
while buildExpression 971
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 971 next token value = [
NEW ==== testing leave from buildExpression AT END 971
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 971
[
LEFT  lbrackets = 4 <=> rbrackets = 4 in 971 next token value = 'user_latitude'
buildExpression 976
while buildExpression 976
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'user_latitude'
    [2] => 416
)
while buildExpression 976
]
testing leave from buildExpression 976
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 976 next token value =  
NEW ==== testing leave from buildExpression AT END 976
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 976
]
NEW ==== bye bye from buildExpression AT END 976
while buildExpression 971
]
RIGHT lbrackets = 5 <=> rbrackets = 4 in 971 next token value =  
NEW ==== testing leave from buildExpression AT END 971
lparens = 0 <=> rparens = 0 <=> lbrackets = 5 <=> rbrackets = 5 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 971
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 416
)
while buildExpression 971
=
testing leave from buildExpression 971
lparens = 0 <=> rparens = 0 <=> lbrackets = 5 <=> rbrackets = 5 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 971
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locations'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locpick'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'user_latitude'
                )

        )

)
PREVIOUS in buildExpression 971
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locations'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locpick'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'user_latitude'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locations'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locpick'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'user_latitude'
                )

        )

)
LEAVING case T_VARIABLE 970
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 416
)
while buildExpression 970
=
while buildExpression 970
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 416
)
while buildExpression 970
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 416
)
buildExpression 977
while buildExpression 977
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 977 next token value = 'latFld'
buildExpression 978
while buildExpression 978
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'latFld'
    [2] => 416
)
while buildExpression 978
]
testing leave from buildExpression 978
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 978 next token value = [
NEW ==== testing leave from buildExpression AT END 978
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 978
]
NEW ==== bye bye from buildExpression AT END 978
while buildExpression 977
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 977 next token value = [
NEW ==== testing leave from buildExpression AT END 977
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 977
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 977 next token value = '#value'
buildExpression 979
while buildExpression 979
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 416
)
while buildExpression 979
]
testing leave from buildExpression 979
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 979 next token value = ;
NEW ==== testing leave from buildExpression AT END 979
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 979
]
NEW ==== bye bye from buildExpression AT END 979
while buildExpression 977
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 977 next token value = ;
NEW ==== testing leave from buildExpression AT END 977
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 977
;
testing leave from buildExpression 977
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 977
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 977
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 970
]
NEW ==== testing leave from buildExpression AT END 970
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 970
;
testing leave from buildExpression 970
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 970
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'locations'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'locpick'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'user_latitude'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'latFld'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 970
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 416
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 417
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 417
)
buildExpression 980
while buildExpression 980
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 417
)
buildExpression 981
while buildExpression 981
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 981 next token value = 'values'
buildExpression 982
while buildExpression 982
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'values'
    [2] => 417
)
while buildExpression 982
]
testing leave from buildExpression 982
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 982 next token value = [
NEW ==== testing leave from buildExpression AT END 982
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 982
]
NEW ==== bye bye from buildExpression AT END 982
while buildExpression 981
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 981 next token value = [
NEW ==== testing leave from buildExpression AT END 981
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 981
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 981 next token value = 'locations'
buildExpression 983
while buildExpression 983
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'locations'
    [2] => 417
)
while buildExpression 983
]
testing leave from buildExpression 983
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 983 next token value = [
NEW ==== testing leave from buildExpression AT END 983
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 983
]
NEW ==== bye bye from buildExpression AT END 983
while buildExpression 981
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 981 next token value = [
NEW ==== testing leave from buildExpression AT END 981
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 981
[
LEFT  lbrackets = 2 <=> rbrackets = 2 in 981 next token value = 0
buildExpression 984
while buildExpression 984
Array
(
    [0] => 305 (T_LNUMBER)
    [1] => 0
    [2] => 417
)
while buildExpression 984
]
testing leave from buildExpression 984
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 984 next token value = [
NEW ==== testing leave from buildExpression AT END 984
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 984
]
NEW ==== bye bye from buildExpression AT END 984
while buildExpression 981
]
RIGHT lbrackets = 3 <=> rbrackets = 2 in 981 next token value = [
NEW ==== testing leave from buildExpression AT END 981
lparens = 0 <=> rparens = 0 <=> lbrackets = 3 <=> rbrackets = 3 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 981
[
LEFT  lbrackets = 3 <=> rbrackets = 3 in 981 next token value = 'locpick'
buildExpression 985
while buildExpression 985
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'locpick'
    [2] => 417
)
while buildExpression 985
]
testing leave from buildExpression 985
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 985 next token value = [
NEW ==== testing leave from buildExpression AT END 985
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 985
]
NEW ==== bye bye from buildExpression AT END 985
while buildExpression 981
]
RIGHT lbrackets = 4 <=> rbrackets = 3 in 981 next token value = [
NEW ==== testing leave from buildExpression AT END 981
lparens = 0 <=> rparens = 0 <=> lbrackets = 4 <=> rbrackets = 4 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 981
[
LEFT  lbrackets = 4 <=> rbrackets = 4 in 981 next token value = 'user_longitude'
buildExpression 986
while buildExpression 986
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'user_longitude'
    [2] => 417
)
while buildExpression 986
]
testing leave from buildExpression 986
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 986 next token value =  
NEW ==== testing leave from buildExpression AT END 986
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 986
]
NEW ==== bye bye from buildExpression AT END 986
while buildExpression 981
]
RIGHT lbrackets = 5 <=> rbrackets = 4 in 981 next token value =  
NEW ==== testing leave from buildExpression AT END 981
lparens = 0 <=> rparens = 0 <=> lbrackets = 5 <=> rbrackets = 5 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 981
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 417
)
while buildExpression 981
=
testing leave from buildExpression 981
lparens = 0 <=> rparens = 0 <=> lbrackets = 5 <=> rbrackets = 5 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 981
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locations'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locpick'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'user_longitude'
                )

        )

)
PREVIOUS in buildExpression 981
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locations'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locpick'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'user_longitude'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'values'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locations'
                )

        )

    [index] => PGPExpression
        (
            [operand] => 0
        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'locpick'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'user_longitude'
                )

        )

)
LEAVING case T_VARIABLE 980
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 417
)
while buildExpression 980
=
while buildExpression 980
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 417
)
while buildExpression 980
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form
    [2] => 417
)
buildExpression 987
while buildExpression 987
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 987 next token value = 'lngFld'
buildExpression 988
while buildExpression 988
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'lngFld'
    [2] => 417
)
while buildExpression 988
]
testing leave from buildExpression 988
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 988 next token value = [
NEW ==== testing leave from buildExpression AT END 988
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 988
]
NEW ==== bye bye from buildExpression AT END 988
while buildExpression 987
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 987 next token value = [
NEW ==== testing leave from buildExpression AT END 987
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 987
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 987 next token value = '#value'
buildExpression 989
while buildExpression 989
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => '#value'
    [2] => 417
)
while buildExpression 989
]
testing leave from buildExpression 989
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 989 next token value = ;
NEW ==== testing leave from buildExpression AT END 989
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 989
]
NEW ==== bye bye from buildExpression AT END 989
while buildExpression 987
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 987 next token value = ;
NEW ==== testing leave from buildExpression AT END 987
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 987
;
testing leave from buildExpression 987
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 987
;
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
PREVIOUS in buildExpression 987
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => '#value'
                )

        )

)
LEAVING case T_VARIABLE 980
]
NEW ==== testing leave from buildExpression AT END 980
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 980
;
testing leave from buildExpression 980
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 980
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'values'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'locations'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => 0
                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'locpick'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'user_longitude'
                        )

                )

        )

    [assign] => =
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'lngFld'
                        )

                )

            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => '#value'
                        )

                )

        )

)
PREVIOUS in buildExpression 980
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
        
    [2] => 417
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => module_load_include
    [2] => 419
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => module_load_include
    [2] => 419
)
buildExpression 990
while buildExpression 990
Array
(
    [0] => 307 (T_STRING)
    [1] => module_load_include
    [2] => 419
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 991
while buildExpression 991
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'inc'
    [2] => 419
)
while buildExpression 991
,
testing leave from buildExpression 991
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 991
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'inc'
        )

)
PREVIOUS in buildExpression 991
while buildFunctionCall
,
buildExpression 992
while buildExpression 992
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 419
)
while buildExpression 992
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'node'
    [2] => 419
)
while buildExpression 992
,
testing leave from buildExpression 992
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 992
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'node'
        )

)
PREVIOUS in buildExpression 992
while buildFunctionCall
,
buildExpression 993
while buildExpression 993
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 419
)
while buildExpression 993
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'node.pages'
    [2] => 419
)
while buildExpression 993
)
HITTING RPARENS 993
NEW ==== testing leave from buildExpression AT END 993
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 993
)
NEW ==== bye bye from buildExpression AT END 993
while buildFunctionCall
)
LEAVING case T_STRING 990
NEW ==== testing leave from buildExpression AT END 990
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 990
;
testing leave from buildExpression 990
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 990
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => module_load_include
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'inc'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'node'
                                )

                        )

                    [2] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'node.pages'
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 990
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 419
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 420
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 420
)
buildExpression 994
while buildExpression 994
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 420
)
buildExpression 995
while buildExpression 995
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 420
)
while buildExpression 995
=
testing leave from buildExpression 995
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 995
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
PREVIOUS in buildExpression 995
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
LEAVING case T_VARIABLE 994
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 420
)
while buildExpression 994
=
while buildExpression 994
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 420
)
while buildExpression 994
Array
(
    [0] => 291 (T_OBJECT_CAST)
    [1] => (object)
    [2] => 420
)
while buildExpression 994
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 420
)
while buildExpression 994
Array
(
    [0] => 307 (T_STRING)
    [1] => NULL
    [2] => 420
)
while buildExpression 994
;
testing leave from buildExpression 994
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 994
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
        )

    [assign] => =
    [operator] => (object)
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => NULL
        )

)
PREVIOUS in buildExpression 994
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 420
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 421
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 421
)
buildExpression 996
while buildExpression 996
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 421
)
buildExpression 997
while buildExpression 997
Array
(
    [0] => 357 (T_OBJECT_OPERATOR)
    [1] => ->
    [2] => 421
)
while buildExpression 997
Array
(
    [0] => 307 (T_STRING)
    [1] => type
    [2] => 421
)
while buildExpression 997
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 421
)
while buildExpression 997
=
testing leave from buildExpression 997
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 997
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => type
        )

)
PREVIOUS in buildExpression 997
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => type
        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
    [operator2] => ->
    [operand] => PGPOperand
        (
            [type] => 307 (T_STRING)
            [value] => type
        )

)
LEAVING case T_VARIABLE 996
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 421
)
while buildExpression 996
=
while buildExpression 996
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 421
)
while buildExpression 996
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator'
    [2] => 421
)
while buildExpression 996
;
testing leave from buildExpression 996
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 996
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $node
            [operator2] => ->
            [operand] => PGPOperand
                (
                    [type] => 307 (T_STRING)
                    [value] => type
                )

        )

    [assign] => =
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'evacuator'
        )

)
PREVIOUS in buildExpression 996
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 421
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_execute
    [2] => 422
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_execute
    [2] => 422
)
buildExpression 998
while buildExpression 998
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_execute
    [2] => 422
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [0] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 999
while buildExpression 999
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_node_form'
    [2] => 422
)
while buildExpression 999
,
testing leave from buildExpression 999
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 999
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'evacuator_node_form'
        )

)
PREVIOUS in buildExpression 999
while buildFunctionCall
,
buildExpression 1000
while buildExpression 1000
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 422
)
while buildExpression 1000
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 422
)
buildExpression 1001
while buildExpression 1001
,
testing leave from buildExpression 1001
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1001
,
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
PREVIOUS in buildExpression 1001
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $form_state
)
LEAVING case T_VARIABLE 1000
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $form_state
    [2] => 422
)
while buildExpression 1000
,
testing leave from buildExpression 1000
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1000
,
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $form_state
        )

)
PREVIOUS in buildExpression 1000
while buildFunctionCall
,
buildExpression 1002
while buildExpression 1002
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 422
)
while buildExpression 1002
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 422
)
buildExpression 1003
while buildExpression 1003
)
HITTING RPARENS 1003
NEW ==== testing leave from buildExpression AT END 1003
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1003
)
NEW ==== bye bye from buildExpression AT END 1003
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $node
)
LEAVING case T_VARIABLE 1002
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $node
    [2] => 422
)
while buildExpression 1002
)
HITTING RPARENS 1002
NEW ==== testing leave from buildExpression AT END 1002
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1002
)
NEW ==== bye bye from buildExpression AT END 1002
while buildFunctionCall
)
LEAVING case T_STRING 998
NEW ==== testing leave from buildExpression AT END 998
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 998
;
testing leave from buildExpression 998
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 998
;
PGPExpression
(
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_execute
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'evacuator_node_form'
                                )

                        )

                    [1] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $form_state
                                )

                        )

                    [2] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $node
                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 998
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 422
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 423
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //function anket_form_alter(&$form, $form_state, $form_id) {

    [2] => 425
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  echo $form_id . "<BR>";

    [2] => 426
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //}

    [2] => 427
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 428
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //function anket_form_alter(&$form, $form_state, $form_id) {

    [2] => 429
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  // ensure we are modifying the right node type

    [2] => 430
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  if ($form_id == 'evacuator_node_form') {

    [2] => 431
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //    // add an additional validation handler

    [2] => 432
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //    $form['#validate'][] = '_anket_node_form_validate';

    [2] => 433
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  }

    [2] => 434
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //}

    [2] => 435
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //

    [2] => 436
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //function _anket_node_form_validate($form, &$form_state) {

    [2] => 437
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  // display the submitted data and then die

    [2] => 438
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  echo "<pre>";

    [2] => 439
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  print_r($form_state['values']);

    [2] => 440
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  echo "</pre>";

    [2] => 441
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //  die;

    [2] => 442
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //}

    [2] => 443
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 444
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 445
)
buildFunction
buildExpression 1004
while buildExpression 1004
)
testing leave from buildExpression 1004
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 1004
NEW ==== testing leave from buildExpression AT END 1004
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1004
)
NEW ==== bye bye from buildExpression AT END 1004
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
    
    [2] => 445
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 336 (T_RETURN)
    [1] => return
    [2] => 446
)
buildFunctionCall
while buildFunctionCall
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 446
)
buildExpression 1005
while buildExpression 1005
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 446
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 446
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'attach_template'
    [2] => 447
)
buildExpression 1006
while buildExpression 1006
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'attach_template'
    [2] => 447
)
while buildExpression 1006
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 447
)
while buildExpression 1006
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 447
)
testing leave from buildExpression 1006
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1006
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 447
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'attach_template'
        )

)
PREVIOUS in buildExpression 1006
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 447
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 447
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 447
)
buildExpression 1007
while buildExpression 1007
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 447
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
           
    [2] => 447
)
while buildArray
Array
(
    [0] => 366 (T_COMMENT)
    [1] => // 'arguments' => array('form' => array()),

    [2] => 448
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>             
    [2] => 449
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'variables'
    [2] => 449
)
buildExpression 1008
while buildExpression 1008
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'variables'
    [2] => 449
)
while buildExpression 1008
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 449
)
while buildExpression 1008
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 449
)
testing leave from buildExpression 1008
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1008
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 449
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'variables'
        )

)
PREVIOUS in buildExpression 1008
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 449
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 449
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 449
)
buildExpression 1009
while buildExpression 1009
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 449
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 449
)
buildExpression 1010
while buildExpression 1010
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 449
)
while buildExpression 1010
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 449
)
while buildExpression 1010
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 449
)
testing leave from buildExpression 1010
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1010
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 449
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'form'
        )

)
PREVIOUS in buildExpression 1010
inside default case return from buildExpression
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 449
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 449
)
while buildArray
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 449
)
buildExpression 1011
while buildExpression 1011
Array
(
    [0] => 360 (T_ARRAY)
    [1] => array
    [2] => 449
)
isMultiline = 1
buildArray
while buildArray
(
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 0, 0, '1'
NEW ==== testing leave from buildExpression AT END 1011
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1011
)
testing leave from buildExpression 1011
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 1011
NEW ==== testing leave from buildExpression AT END 1011
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1011
)
NEW ==== bye bye from buildExpression AT END 1011
inside default case return from buildExpression
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '', 1, 1, '1'
NEW ==== testing leave from buildExpression AT END 1009
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1009
,
testing leave from buildExpression 1009
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1009
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 
            [preserve] => 1
            [count] => 1
            [commaCount] => 0
            [values] => PGPList
                (
                    [lparens] => (
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'form'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 0
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                        )

                                    [debug] => 
                                )

                        )

                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1009
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 449
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'template'
    [2] => 450
)
buildExpression 1012
while buildExpression 1012
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'template'
    [2] => 450
)
while buildExpression 1012
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 450
)
while buildExpression 1012
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 450
)
testing leave from buildExpression 1012
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1012
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 450
)
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'template'
        )

    [whitespace] =>   
)
PREVIOUS in buildExpression 1012
inside default case return from buildExpression
ELSEIF deleteLast on T_DOUBLE_ARROW
while buildArray
Array
(
    [0] => 358 (T_DOUBLE_ARROW)
    [1] => =>
    [2] => 450
)
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 450
)
while buildArray
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'anket'
    [2] => 450
)
buildExpression 1013
while buildExpression 1013
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'anket'
    [2] => 450
)
while buildExpression 1013
,
testing leave from buildExpression 1013
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1013
,
PGPExpression
(
    [operand] => Array
        (
            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
            [value] => 'anket'
        )

)
PREVIOUS in buildExpression 1013
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
            
    [2] => 450
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 2, 2, '1'
NEW ==== testing leave from buildExpression AT END 1007
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1007
,
testing leave from buildExpression 1007
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1007
,
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 2
            [commaCount] => 2
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
           
                    [comment] => Array
                        (
                            [type] => 366 (T_COMMENT)
                            [value] => // 'arguments' => array('form' => array()),
                            [append] => 0
                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'variables'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 
                                    [preserve] => 1
                                    [count] => 1
                                    [commaCount] => 0
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'form'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPArray
                                                        (
                                                            [type] => 360 (T_ARRAY)
                                                            [multiline] => 
                                                            [original] => 
                                                            [preserve] => 1
                                                            [count] => 0
                                                            [commaCount] => 0
                                                            [values] => PGPList
                                                                (
                                                                    [lparens] => (
                                                                )

                                                            [debug] => 
                                                        )

                                                )

                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
            
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'template'
                                )

                        )

                    [whitespace] =>   
                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'anket'
                                )

                        )

                    [whitespace] => 
            
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1007
inside default case return from buildExpression
while buildArray
,
while buildArray
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
        
    [2] => 451
)
while buildArray
)
while buildArray lparens = 1 rparens = 0
Hitting ) in while buildArray
setMultiline: '1', 1, 1, '1'
NEW ==== testing leave from buildExpression AT END 1005
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1005
;
testing leave from buildExpression 1005
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1005
;
PGPExpression
(
    [operand] => PGPArray
        (
            [type] => 360 (T_ARRAY)
            [multiline] => 
            [original] => 1
            [preserve] => 1
            [count] => 1
            [commaCount] => 1
            [values] => PGPList
                (
                    [lparens] => (
                    [whitespace] => 
        
                    [key] => PGPExpression
                        (
                            [operand] => Array
                                (
                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                    [value] => 'attach_template'
                                )

                        )

                    [assign] => =>
                    [value] => PGPExpression
                        (
                            [operand] => PGPArray
                                (
                                    [type] => 360 (T_ARRAY)
                                    [multiline] => 
                                    [original] => 1
                                    [preserve] => 1
                                    [count] => 2
                                    [commaCount] => 2
                                    [values] => PGPList
                                        (
                                            [lparens] => (
                                            [whitespace] => 
           
                                            [comment] => Array
                                                (
                                                    [type] => 366 (T_COMMENT)
                                                    [value] => // 'arguments' => array('form' => array()),
                                                    [append] => 0
                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'variables'
                                                        )

                                                )

                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => PGPArray
                                                        (
                                                            [type] => 360 (T_ARRAY)
                                                            [multiline] => 
                                                            [original] => 
                                                            [preserve] => 1
                                                            [count] => 1
                                                            [commaCount] => 0
                                                            [values] => PGPList
                                                                (
                                                                    [lparens] => (
                                                                    [key] => PGPExpression
                                                                        (
                                                                            [operand] => Array
                                                                                (
                                                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                                    [value] => 'form'
                                                                                )

                                                                        )

                                                                    [assign] => =>
                                                                    [value] => PGPExpression
                                                                        (
                                                                            [operand] => PGPArray
                                                                                (
                                                                                    [type] => 360 (T_ARRAY)
                                                                                    [multiline] => 
                                                                                    [original] => 
                                                                                    [preserve] => 1
                                                                                    [count] => 0
                                                                                    [commaCount] => 0
                                                                                    [values] => PGPList
                                                                                        (
                                                                                            [lparens] => (
                                                                                        )

                                                                                    [debug] => 
                                                                                )

                                                                        )

                                                                )

                                                            [debug] => 
                                                        )

                                                )

                                            [whitespace] => 
            
                                            [key] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'template'
                                                        )

                                                )

                                            [whitespace] =>   
                                            [assign] => =>
                                            [value] => PGPExpression
                                                (
                                                    [operand] => Array
                                                        (
                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                            [value] => 'anket'
                                                        )

                                                )

                                            [whitespace] => 
            
                                        )

                                    [debug] => 
                                )

                        )

                    [whitespace] => 
        
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1005
while buildFunctionCall
;
Hitting ; in while buildFunctionCall
PGPFunctionCall
(
    [parent] => PGPNode
        (
            [type-3] => 
        )

    [type] => 601
    [name] => Array
        (
            [type] => 336 (T_RETURN)
            [value] => return
        )

    [noparens] => 1
    [parameters] => PGPList
        (
            [0] => PGPExpression
                (
                    [operand] => PGPArray
                        (
                            [type] => 360 (T_ARRAY)
                            [multiline] => 
                            [original] => 1
                            [preserve] => 1
                            [count] => 1
                            [commaCount] => 1
                            [values] => PGPList
                                (
                                    [lparens] => (
                                    [whitespace] => 
        
                                    [key] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'attach_template'
                                                )

                                        )

                                    [assign] => =>
                                    [value] => PGPExpression
                                        (
                                            [operand] => PGPArray
                                                (
                                                    [type] => 360 (T_ARRAY)
                                                    [multiline] => 
                                                    [original] => 1
                                                    [preserve] => 1
                                                    [count] => 2
                                                    [commaCount] => 2
                                                    [values] => PGPList
                                                        (
                                                            [lparens] => (
                                                            [whitespace] => 
           
                                                            [comment] => Array
                                                                (
                                                                    [type] => 366 (T_COMMENT)
                                                                    [value] => // 'arguments' => array('form' => array()),
                                                                    [append] => 0
                                                                )

                                                            [whitespace] => 
            
                                                            [key] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'variables'
                                                                        )

                                                                )

                                                            [assign] => =>
                                                            [value] => PGPExpression
                                                                (
                                                                    [operand] => PGPArray
                                                                        (
                                                                            [type] => 360 (T_ARRAY)
                                                                            [multiline] => 
                                                                            [original] => 
                                                                            [preserve] => 1
                                                                            [count] => 1
                                                                            [commaCount] => 0
                                                                            [values] => PGPList
                                                                                (
                                                                                    [lparens] => (
                                                                                    [key] => PGPExpression
                                                                                        (
                                                                                            [operand] => Array
                                                                                                (
                                                                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                                                    [value] => 'form'
                                                                                                )

                                                                                        )

                                                                                    [assign] => =>
                                                                                    [value] => PGPExpression
                                                                                        (
                                                                                            [operand] => PGPArray
                                                                                                (
                                                                                                    [type] => 360 (T_ARRAY)
                                                                                                    [multiline] => 
                                                                                                    [original] => 
                                                                                                    [preserve] => 1
                                                                                                    [count] => 0
                                                                                                    [commaCount] => 0
                                                                                                    [values] => PGPList
                                                                                                        (
                                                                                                            [lparens] => (
                                                                                                        )

                                                                                                    [debug] => 
                                                                                                )

                                                                                        )

                                                                                )

                                                                            [debug] => 
                                                                        )

                                                                )

                                                            [whitespace] => 
            
                                                            [key] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'template'
                                                                        )

                                                                )

                                                            [whitespace] =>   
                                                            [assign] => =>
                                                            [value] => PGPExpression
                                                                (
                                                                    [operand] => Array
                                                                        (
                                                                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                                            [value] => 'anket'
                                                                        )

                                                                )

                                                            [whitespace] => 
            
                                                        )

                                                    [debug] => 
                                                )

                                        )

                                    [whitespace] => 
        
                                )

                            [debug] => 
                        )

                )

        )

    [debug] => 
)
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 452
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 453
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 367 (T_DOC_COMMENT)
    [1] => /**
* Note the pattern [ module_name ] _preprocess_ [ theme_hook ](&$vars)
*/
    [2] => 455
)
buildComment
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

    [2] => 457
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 334 (T_FUNCTION)
    [1] => function
    [2] => 458
)
buildFunction
buildExpression 1014
while buildExpression 1014
&
while buildExpression 1014
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 458
)
buildExpression 1015
while buildExpression 1015
)
testing leave from buildExpression 1015
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 1015
NEW ==== testing leave from buildExpression AT END 1015
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1015
)
NEW ==== bye bye from buildExpression AT END 1015
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $vars
)
component
PGPOperand
(
    [reference] => &
    [type] => 309 (T_VARIABLE)
    [value] => $vars
)
LEAVING case T_VARIABLE 1014
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 458
)
while buildExpression 1014
)
testing leave from buildExpression 1014
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
HITTING RPARENS 1014
NEW ==== testing leave from buildExpression AT END 1014
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1014
)
NEW ==== bye bye from buildExpression AT END 1014
Hitting ) in while buildFunction
buildBodyComment
buildBody
Array
(
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 458
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 459
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 459
)
buildExpression 1016
while buildExpression 1016
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 459
)
buildExpression 1017
while buildExpression 1017
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1017 next token value = 'volume'
buildExpression 1018
while buildExpression 1018
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'volume'
    [2] => 459
)
while buildExpression 1018
]
testing leave from buildExpression 1018
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1018 next token value =  
NEW ==== testing leave from buildExpression AT END 1018
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1018
]
NEW ==== bye bye from buildExpression AT END 1018
while buildExpression 1017
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1017 next token value =  
NEW ==== testing leave from buildExpression AT END 1017
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1017
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 459
)
while buildExpression 1017
=
testing leave from buildExpression 1017
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1017
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
PREVIOUS in buildExpression 1017
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
LEAVING case T_VARIABLE 1016
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 459
)
while buildExpression 1016
=
while buildExpression 1016
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 459
)
while buildExpression 1016
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 459
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'volume'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1019
while buildExpression 1019
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 459
)
buildExpression 1020
while buildExpression 1020
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1020 next token value = 'form'
buildExpression 1021
while buildExpression 1021
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 459
)
while buildExpression 1021
]
testing leave from buildExpression 1021
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1021 next token value = [
NEW ==== testing leave from buildExpression AT END 1021
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1021
]
NEW ==== bye bye from buildExpression AT END 1021
while buildExpression 1020
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1020 next token value = [
NEW ==== testing leave from buildExpression AT END 1020
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1020
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1020 next token value = 'volume'
buildExpression 1022
while buildExpression 1022
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'volume'
    [2] => 459
)
while buildExpression 1022
]
testing leave from buildExpression 1022
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1022 next token value = )
NEW ==== testing leave from buildExpression AT END 1022
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1022
]
NEW ==== bye bye from buildExpression AT END 1022
while buildExpression 1020
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1020 next token value = )
NEW ==== testing leave from buildExpression AT END 1020
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1020
)
HITTING RPARENS 1020
NEW ==== testing leave from buildExpression AT END 1020
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1020
)
NEW ==== bye bye from buildExpression AT END 1020
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'volume'
                )

        )

)
LEAVING case T_VARIABLE 1019
]
NEW ==== testing leave from buildExpression AT END 1019
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1019
)
HITTING RPARENS 1019
NEW ==== testing leave from buildExpression AT END 1019
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1019
)
NEW ==== bye bye from buildExpression AT END 1019
while buildFunctionCall
)
LEAVING case T_STRING 1016
NEW ==== testing leave from buildExpression AT END 1016
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1016
;
testing leave from buildExpression 1016
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1016
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'volume'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'volume'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1016
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
  
    [2] => 459
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 460
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 460
)
buildExpression 1023
while buildExpression 1023
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 460
)
buildExpression 1024
while buildExpression 1024
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1024 next token value = 'evacuator_name'
buildExpression 1025
while buildExpression 1025
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_name'
    [2] => 460
)
while buildExpression 1025
]
testing leave from buildExpression 1025
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1025 next token value =  
NEW ==== testing leave from buildExpression AT END 1025
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1025
]
NEW ==== bye bye from buildExpression AT END 1025
while buildExpression 1024
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1024 next token value =  
NEW ==== testing leave from buildExpression AT END 1024
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1024
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 460
)
while buildExpression 1024
=
testing leave from buildExpression 1024
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1024
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
PREVIOUS in buildExpression 1024
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
LEAVING case T_VARIABLE 1023
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 460
)
while buildExpression 1023
=
while buildExpression 1023
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 460
)
while buildExpression 1023
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 460
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'evacuator_name'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1026
while buildExpression 1026
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 460
)
buildExpression 1027
while buildExpression 1027
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1027 next token value = 'form'
buildExpression 1028
while buildExpression 1028
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 460
)
while buildExpression 1028
]
testing leave from buildExpression 1028
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1028 next token value = [
NEW ==== testing leave from buildExpression AT END 1028
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1028
]
NEW ==== bye bye from buildExpression AT END 1028
while buildExpression 1027
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1027 next token value = [
NEW ==== testing leave from buildExpression AT END 1027
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1027
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1027 next token value = 'evacuator_name'
buildExpression 1029
while buildExpression 1029
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'evacuator_name'
    [2] => 460
)
while buildExpression 1029
]
testing leave from buildExpression 1029
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1029 next token value = )
NEW ==== testing leave from buildExpression AT END 1029
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1029
]
NEW ==== bye bye from buildExpression AT END 1029
while buildExpression 1027
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1027 next token value = )
NEW ==== testing leave from buildExpression AT END 1027
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1027
)
HITTING RPARENS 1027
NEW ==== testing leave from buildExpression AT END 1027
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1027
)
NEW ==== bye bye from buildExpression AT END 1027
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'evacuator_name'
                )

        )

)
LEAVING case T_VARIABLE 1026
]
NEW ==== testing leave from buildExpression AT END 1026
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1026
)
HITTING RPARENS 1026
NEW ==== testing leave from buildExpression AT END 1026
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1026
)
NEW ==== bye bye from buildExpression AT END 1026
while buildFunctionCall
)
LEAVING case T_STRING 1023
NEW ==== testing leave from buildExpression AT END 1023
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1023
;
testing leave from buildExpression 1023
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1023
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'evacuator_name'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'evacuator_name'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1023
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 460
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 461
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 461
)
buildExpression 1030
while buildExpression 1030
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 461
)
buildExpression 1031
while buildExpression 1031
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1031 next token value = 'options'
buildExpression 1032
while buildExpression 1032
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 461
)
while buildExpression 1032
]
testing leave from buildExpression 1032
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1032 next token value =  
NEW ==== testing leave from buildExpression AT END 1032
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1032
]
NEW ==== bye bye from buildExpression AT END 1032
while buildExpression 1031
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1031 next token value =  
NEW ==== testing leave from buildExpression AT END 1031
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1031
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 461
)
while buildExpression 1031
=
testing leave from buildExpression 1031
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1031
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
PREVIOUS in buildExpression 1031
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
LEAVING case T_VARIABLE 1030
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 461
)
while buildExpression 1030
=
while buildExpression 1030
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 461
)
while buildExpression 1030
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 461
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1033
while buildExpression 1033
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 461
)
buildExpression 1034
while buildExpression 1034
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1034 next token value = 'form'
buildExpression 1035
while buildExpression 1035
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 461
)
while buildExpression 1035
]
testing leave from buildExpression 1035
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1035 next token value = [
NEW ==== testing leave from buildExpression AT END 1035
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1035
]
NEW ==== bye bye from buildExpression AT END 1035
while buildExpression 1034
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1034 next token value = [
NEW ==== testing leave from buildExpression AT END 1034
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1034
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1034 next token value = 'options'
buildExpression 1036
while buildExpression 1036
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'options'
    [2] => 461
)
while buildExpression 1036
]
testing leave from buildExpression 1036
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1036 next token value = )
NEW ==== testing leave from buildExpression AT END 1036
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1036
]
NEW ==== bye bye from buildExpression AT END 1036
while buildExpression 1034
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1034 next token value = )
NEW ==== testing leave from buildExpression AT END 1034
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1034
)
HITTING RPARENS 1034
NEW ==== testing leave from buildExpression AT END 1034
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1034
)
NEW ==== bye bye from buildExpression AT END 1034
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'options'
                )

        )

)
LEAVING case T_VARIABLE 1033
]
NEW ==== testing leave from buildExpression AT END 1033
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1033
)
HITTING RPARENS 1033
NEW ==== testing leave from buildExpression AT END 1033
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1033
)
NEW ==== bye bye from buildExpression AT END 1033
while buildFunctionCall
)
LEAVING case T_STRING 1030
NEW ==== testing leave from buildExpression AT END 1030
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1030
;
testing leave from buildExpression 1030
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1030
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'options'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'options'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1030
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 461
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 462
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 462
)
buildExpression 1037
while buildExpression 1037
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 462
)
buildExpression 1038
while buildExpression 1038
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1038 next token value = 'price'
buildExpression 1039
while buildExpression 1039
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price'
    [2] => 462
)
while buildExpression 1039
]
testing leave from buildExpression 1039
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1039 next token value =   
NEW ==== testing leave from buildExpression AT END 1039
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1039
]
NEW ==== bye bye from buildExpression AT END 1039
while buildExpression 1038
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1038 next token value =   
NEW ==== testing leave from buildExpression AT END 1038
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1038
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 462
)
setting add_whitespace
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
LEAVING case T_VARIABLE 1037
]
NEW ==== testing leave from buildExpression AT END 1037
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1037
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>   
    [2] => 462
)
while buildExpression 1037
=
while buildExpression 1037
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 462
)
while buildExpression 1037
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 462
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price'
                        )

                )

        )

    [whitespace] =>   
    [assign] => =
    [3] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1040
while buildExpression 1040
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 462
)
buildExpression 1041
while buildExpression 1041
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1041 next token value = 'form'
buildExpression 1042
while buildExpression 1042
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 462
)
while buildExpression 1042
]
testing leave from buildExpression 1042
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1042 next token value = [
NEW ==== testing leave from buildExpression AT END 1042
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1042
]
NEW ==== bye bye from buildExpression AT END 1042
while buildExpression 1041
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1041 next token value = [
NEW ==== testing leave from buildExpression AT END 1041
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1041
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1041 next token value = 'price'
buildExpression 1043
while buildExpression 1043
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price'
    [2] => 462
)
while buildExpression 1043
]
testing leave from buildExpression 1043
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1043 next token value = )
NEW ==== testing leave from buildExpression AT END 1043
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1043
]
NEW ==== bye bye from buildExpression AT END 1043
while buildExpression 1041
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1041 next token value = )
NEW ==== testing leave from buildExpression AT END 1041
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1041
)
HITTING RPARENS 1041
NEW ==== testing leave from buildExpression AT END 1041
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1041
)
NEW ==== bye bye from buildExpression AT END 1041
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price'
                )

        )

)
LEAVING case T_VARIABLE 1040
]
NEW ==== testing leave from buildExpression AT END 1040
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1040
)
HITTING RPARENS 1040
NEW ==== testing leave from buildExpression AT END 1040
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1040
)
NEW ==== bye bye from buildExpression AT END 1040
while buildFunctionCall
)
LEAVING case T_STRING 1037
NEW ==== testing leave from buildExpression AT END 1037
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1037
;
testing leave from buildExpression 1037
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1037
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price'
                        )

                )

        )

    [whitespace] =>   
    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1037
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 462
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 463
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 463
)
buildExpression 1044
while buildExpression 1044
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 463
)
buildExpression 1045
while buildExpression 1045
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1045 next token value = 'price1'
buildExpression 1046
while buildExpression 1046
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price1'
    [2] => 463
)
while buildExpression 1046
]
testing leave from buildExpression 1046
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1046 next token value =  
NEW ==== testing leave from buildExpression AT END 1046
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1046
]
NEW ==== bye bye from buildExpression AT END 1046
while buildExpression 1045
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1045 next token value =  
NEW ==== testing leave from buildExpression AT END 1045
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1045
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 463
)
while buildExpression 1045
=
testing leave from buildExpression 1045
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1045
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
PREVIOUS in buildExpression 1045
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
LEAVING case T_VARIABLE 1044
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 463
)
while buildExpression 1044
=
while buildExpression 1044
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 463
)
while buildExpression 1044
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 463
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price1'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1047
while buildExpression 1047
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 463
)
buildExpression 1048
while buildExpression 1048
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1048 next token value = 'form'
buildExpression 1049
while buildExpression 1049
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 463
)
while buildExpression 1049
]
testing leave from buildExpression 1049
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1049 next token value = [
NEW ==== testing leave from buildExpression AT END 1049
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1049
]
NEW ==== bye bye from buildExpression AT END 1049
while buildExpression 1048
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1048 next token value = [
NEW ==== testing leave from buildExpression AT END 1048
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1048
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1048 next token value = 'price1'
buildExpression 1050
while buildExpression 1050
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price1'
    [2] => 463
)
while buildExpression 1050
]
testing leave from buildExpression 1050
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1050 next token value = )
NEW ==== testing leave from buildExpression AT END 1050
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1050
]
NEW ==== bye bye from buildExpression AT END 1050
while buildExpression 1048
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1048 next token value = )
NEW ==== testing leave from buildExpression AT END 1048
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1048
)
HITTING RPARENS 1048
NEW ==== testing leave from buildExpression AT END 1048
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1048
)
NEW ==== bye bye from buildExpression AT END 1048
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price1'
                )

        )

)
LEAVING case T_VARIABLE 1047
]
NEW ==== testing leave from buildExpression AT END 1047
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1047
)
HITTING RPARENS 1047
NEW ==== testing leave from buildExpression AT END 1047
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1047
)
NEW ==== bye bye from buildExpression AT END 1047
while buildFunctionCall
)
LEAVING case T_STRING 1044
NEW ==== testing leave from buildExpression AT END 1044
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1044
;
testing leave from buildExpression 1044
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1044
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price1'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1044
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 463
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 464
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 464
)
buildExpression 1051
while buildExpression 1051
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 464
)
buildExpression 1052
while buildExpression 1052
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1052 next token value = 'price2'
buildExpression 1053
while buildExpression 1053
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price2'
    [2] => 464
)
while buildExpression 1053
]
testing leave from buildExpression 1053
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1053 next token value =  
NEW ==== testing leave from buildExpression AT END 1053
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1053
]
NEW ==== bye bye from buildExpression AT END 1053
while buildExpression 1052
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1052 next token value =  
NEW ==== testing leave from buildExpression AT END 1052
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1052
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 464
)
while buildExpression 1052
=
testing leave from buildExpression 1052
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1052
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
PREVIOUS in buildExpression 1052
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
LEAVING case T_VARIABLE 1051
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 464
)
while buildExpression 1051
=
while buildExpression 1051
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 464
)
while buildExpression 1051
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 464
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price2'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1054
while buildExpression 1054
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 464
)
buildExpression 1055
while buildExpression 1055
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1055 next token value = 'form'
buildExpression 1056
while buildExpression 1056
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 464
)
while buildExpression 1056
]
testing leave from buildExpression 1056
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1056 next token value = [
NEW ==== testing leave from buildExpression AT END 1056
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1056
]
NEW ==== bye bye from buildExpression AT END 1056
while buildExpression 1055
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1055 next token value = [
NEW ==== testing leave from buildExpression AT END 1055
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1055
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1055 next token value = 'price2'
buildExpression 1057
while buildExpression 1057
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price2'
    [2] => 464
)
while buildExpression 1057
]
testing leave from buildExpression 1057
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1057 next token value = )
NEW ==== testing leave from buildExpression AT END 1057
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1057
]
NEW ==== bye bye from buildExpression AT END 1057
while buildExpression 1055
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1055 next token value = )
NEW ==== testing leave from buildExpression AT END 1055
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1055
)
HITTING RPARENS 1055
NEW ==== testing leave from buildExpression AT END 1055
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1055
)
NEW ==== bye bye from buildExpression AT END 1055
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price2'
                )

        )

)
LEAVING case T_VARIABLE 1054
]
NEW ==== testing leave from buildExpression AT END 1054
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1054
)
HITTING RPARENS 1054
NEW ==== testing leave from buildExpression AT END 1054
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1054
)
NEW ==== bye bye from buildExpression AT END 1054
while buildFunctionCall
)
LEAVING case T_STRING 1051
NEW ==== testing leave from buildExpression AT END 1051
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1051
;
testing leave from buildExpression 1051
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1051
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price2'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1051
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 464
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 465
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 465
)
buildExpression 1058
while buildExpression 1058
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 465
)
buildExpression 1059
while buildExpression 1059
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1059 next token value = 'price3'
buildExpression 1060
while buildExpression 1060
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price3'
    [2] => 465
)
while buildExpression 1060
]
testing leave from buildExpression 1060
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1060 next token value =  
NEW ==== testing leave from buildExpression AT END 1060
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1060
]
NEW ==== bye bye from buildExpression AT END 1060
while buildExpression 1059
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1059 next token value =  
NEW ==== testing leave from buildExpression AT END 1059
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1059
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 465
)
while buildExpression 1059
=
testing leave from buildExpression 1059
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1059
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
PREVIOUS in buildExpression 1059
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
LEAVING case T_VARIABLE 1058
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 465
)
while buildExpression 1058
=
while buildExpression 1058
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 465
)
while buildExpression 1058
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 465
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price3'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1061
while buildExpression 1061
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 465
)
buildExpression 1062
while buildExpression 1062
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1062 next token value = 'form'
buildExpression 1063
while buildExpression 1063
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 465
)
while buildExpression 1063
]
testing leave from buildExpression 1063
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1063 next token value = [
NEW ==== testing leave from buildExpression AT END 1063
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1063
]
NEW ==== bye bye from buildExpression AT END 1063
while buildExpression 1062
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1062 next token value = [
NEW ==== testing leave from buildExpression AT END 1062
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1062
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1062 next token value = 'price3'
buildExpression 1064
while buildExpression 1064
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price3'
    [2] => 465
)
while buildExpression 1064
]
testing leave from buildExpression 1064
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1064 next token value = )
NEW ==== testing leave from buildExpression AT END 1064
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1064
]
NEW ==== bye bye from buildExpression AT END 1064
while buildExpression 1062
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1062 next token value = )
NEW ==== testing leave from buildExpression AT END 1062
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1062
)
HITTING RPARENS 1062
NEW ==== testing leave from buildExpression AT END 1062
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1062
)
NEW ==== bye bye from buildExpression AT END 1062
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price3'
                )

        )

)
LEAVING case T_VARIABLE 1061
]
NEW ==== testing leave from buildExpression AT END 1061
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1061
)
HITTING RPARENS 1061
NEW ==== testing leave from buildExpression AT END 1061
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1061
)
NEW ==== bye bye from buildExpression AT END 1061
while buildFunctionCall
)
LEAVING case T_STRING 1058
NEW ==== testing leave from buildExpression AT END 1058
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1058
;
testing leave from buildExpression 1058
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1058
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price3'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1058
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 465
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 466
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 466
)
buildExpression 1065
while buildExpression 1065
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 466
)
buildExpression 1066
while buildExpression 1066
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1066 next token value = 'price4'
buildExpression 1067
while buildExpression 1067
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price4'
    [2] => 466
)
while buildExpression 1067
]
testing leave from buildExpression 1067
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1067 next token value =  
NEW ==== testing leave from buildExpression AT END 1067
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1067
]
NEW ==== bye bye from buildExpression AT END 1067
while buildExpression 1066
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1066 next token value =  
NEW ==== testing leave from buildExpression AT END 1066
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1066
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 466
)
while buildExpression 1066
=
testing leave from buildExpression 1066
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1066
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
PREVIOUS in buildExpression 1066
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
LEAVING case T_VARIABLE 1065
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 466
)
while buildExpression 1065
=
while buildExpression 1065
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 466
)
while buildExpression 1065
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 466
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price4'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1068
while buildExpression 1068
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 466
)
buildExpression 1069
while buildExpression 1069
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1069 next token value = 'form'
buildExpression 1070
while buildExpression 1070
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 466
)
while buildExpression 1070
]
testing leave from buildExpression 1070
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1070 next token value = [
NEW ==== testing leave from buildExpression AT END 1070
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1070
]
NEW ==== bye bye from buildExpression AT END 1070
while buildExpression 1069
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1069 next token value = [
NEW ==== testing leave from buildExpression AT END 1069
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1069
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1069 next token value = 'price4'
buildExpression 1071
while buildExpression 1071
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price4'
    [2] => 466
)
while buildExpression 1071
]
testing leave from buildExpression 1071
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1071 next token value = )
NEW ==== testing leave from buildExpression AT END 1071
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1071
]
NEW ==== bye bye from buildExpression AT END 1071
while buildExpression 1069
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1069 next token value = )
NEW ==== testing leave from buildExpression AT END 1069
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1069
)
HITTING RPARENS 1069
NEW ==== testing leave from buildExpression AT END 1069
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1069
)
NEW ==== bye bye from buildExpression AT END 1069
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price4'
                )

        )

)
LEAVING case T_VARIABLE 1068
]
NEW ==== testing leave from buildExpression AT END 1068
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1068
)
HITTING RPARENS 1068
NEW ==== testing leave from buildExpression AT END 1068
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1068
)
NEW ==== bye bye from buildExpression AT END 1068
while buildFunctionCall
)
LEAVING case T_STRING 1065
NEW ==== testing leave from buildExpression AT END 1065
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1065
;
testing leave from buildExpression 1065
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1065
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price4'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price4'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1065
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 466
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 467
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 467
)
buildExpression 1072
while buildExpression 1072
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 467
)
buildExpression 1073
while buildExpression 1073
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1073 next token value = 'price5'
buildExpression 1074
while buildExpression 1074
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price5'
    [2] => 467
)
while buildExpression 1074
]
testing leave from buildExpression 1074
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1074 next token value =  
NEW ==== testing leave from buildExpression AT END 1074
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1074
]
NEW ==== bye bye from buildExpression AT END 1074
while buildExpression 1073
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1073 next token value =  
NEW ==== testing leave from buildExpression AT END 1073
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1073
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 467
)
while buildExpression 1073
=
testing leave from buildExpression 1073
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1073
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
PREVIOUS in buildExpression 1073
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
LEAVING case T_VARIABLE 1072
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 467
)
while buildExpression 1072
=
while buildExpression 1072
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 467
)
while buildExpression 1072
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 467
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price5'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1075
while buildExpression 1075
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 467
)
buildExpression 1076
while buildExpression 1076
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1076 next token value = 'form'
buildExpression 1077
while buildExpression 1077
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 467
)
while buildExpression 1077
]
testing leave from buildExpression 1077
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1077 next token value = [
NEW ==== testing leave from buildExpression AT END 1077
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1077
]
NEW ==== bye bye from buildExpression AT END 1077
while buildExpression 1076
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1076 next token value = [
NEW ==== testing leave from buildExpression AT END 1076
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1076
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1076 next token value = 'price5'
buildExpression 1078
while buildExpression 1078
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price5'
    [2] => 467
)
while buildExpression 1078
]
testing leave from buildExpression 1078
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1078 next token value = )
NEW ==== testing leave from buildExpression AT END 1078
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1078
]
NEW ==== bye bye from buildExpression AT END 1078
while buildExpression 1076
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1076 next token value = )
NEW ==== testing leave from buildExpression AT END 1076
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1076
)
HITTING RPARENS 1076
NEW ==== testing leave from buildExpression AT END 1076
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1076
)
NEW ==== bye bye from buildExpression AT END 1076
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price5'
                )

        )

)
LEAVING case T_VARIABLE 1075
]
NEW ==== testing leave from buildExpression AT END 1075
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1075
)
HITTING RPARENS 1075
NEW ==== testing leave from buildExpression AT END 1075
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1075
)
NEW ==== bye bye from buildExpression AT END 1075
while buildFunctionCall
)
LEAVING case T_STRING 1072
NEW ==== testing leave from buildExpression AT END 1072
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1072
;
testing leave from buildExpression 1072
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1072
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price5'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price5'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1072
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 467
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 468
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 468
)
buildExpression 1079
while buildExpression 1079
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 468
)
buildExpression 1080
while buildExpression 1080
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1080 next token value = 'price6'
buildExpression 1081
while buildExpression 1081
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price6'
    [2] => 468
)
while buildExpression 1081
]
testing leave from buildExpression 1081
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1081 next token value =  
NEW ==== testing leave from buildExpression AT END 1081
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1081
]
NEW ==== bye bye from buildExpression AT END 1081
while buildExpression 1080
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1080 next token value =  
NEW ==== testing leave from buildExpression AT END 1080
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1080
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 468
)
while buildExpression 1080
=
testing leave from buildExpression 1080
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1080
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
PREVIOUS in buildExpression 1080
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
LEAVING case T_VARIABLE 1079
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 468
)
while buildExpression 1079
=
while buildExpression 1079
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 468
)
while buildExpression 1079
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 468
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price6'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1082
while buildExpression 1082
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 468
)
buildExpression 1083
while buildExpression 1083
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1083 next token value = 'form'
buildExpression 1084
while buildExpression 1084
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 468
)
while buildExpression 1084
]
testing leave from buildExpression 1084
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1084 next token value = [
NEW ==== testing leave from buildExpression AT END 1084
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1084
]
NEW ==== bye bye from buildExpression AT END 1084
while buildExpression 1083
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1083 next token value = [
NEW ==== testing leave from buildExpression AT END 1083
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1083
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1083 next token value = 'price6'
buildExpression 1085
while buildExpression 1085
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'price6'
    [2] => 468
)
while buildExpression 1085
]
testing leave from buildExpression 1085
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1085 next token value = )
NEW ==== testing leave from buildExpression AT END 1085
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1085
]
NEW ==== bye bye from buildExpression AT END 1085
while buildExpression 1083
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1083 next token value = )
NEW ==== testing leave from buildExpression AT END 1083
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1083
)
HITTING RPARENS 1083
NEW ==== testing leave from buildExpression AT END 1083
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1083
)
NEW ==== bye bye from buildExpression AT END 1083
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'price6'
                )

        )

)
LEAVING case T_VARIABLE 1082
]
NEW ==== testing leave from buildExpression AT END 1082
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1082
)
HITTING RPARENS 1082
NEW ==== testing leave from buildExpression AT END 1082
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1082
)
NEW ==== bye bye from buildExpression AT END 1082
while buildFunctionCall
)
LEAVING case T_STRING 1079
NEW ==== testing leave from buildExpression AT END 1079
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1079
;
testing leave from buildExpression 1079
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1079
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'price6'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'price6'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1079
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
  
    [2] => 468
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 470
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 470
)
buildExpression 1086
while buildExpression 1086
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 470
)
buildExpression 1087
while buildExpression 1087
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1087 next token value = 'discount'
buildExpression 1088
while buildExpression 1088
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'discount'
    [2] => 470
)
while buildExpression 1088
]
testing leave from buildExpression 1088
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1088 next token value =  
NEW ==== testing leave from buildExpression AT END 1088
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1088
]
NEW ==== bye bye from buildExpression AT END 1088
while buildExpression 1087
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1087 next token value =  
NEW ==== testing leave from buildExpression AT END 1087
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1087
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 470
)
while buildExpression 1087
=
testing leave from buildExpression 1087
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1087
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
PREVIOUS in buildExpression 1087
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
LEAVING case T_VARIABLE 1086
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 470
)
while buildExpression 1086
=
while buildExpression 1086
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 470
)
while buildExpression 1086
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 470
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'discount'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1089
while buildExpression 1089
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 470
)
buildExpression 1090
while buildExpression 1090
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1090 next token value = 'form'
buildExpression 1091
while buildExpression 1091
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 470
)
while buildExpression 1091
]
testing leave from buildExpression 1091
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1091 next token value = [
NEW ==== testing leave from buildExpression AT END 1091
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1091
]
NEW ==== bye bye from buildExpression AT END 1091
while buildExpression 1090
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1090 next token value = [
NEW ==== testing leave from buildExpression AT END 1090
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1090
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1090 next token value = 'discount'
buildExpression 1092
while buildExpression 1092
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'discount'
    [2] => 470
)
while buildExpression 1092
]
testing leave from buildExpression 1092
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1092 next token value = )
NEW ==== testing leave from buildExpression AT END 1092
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1092
]
NEW ==== bye bye from buildExpression AT END 1092
while buildExpression 1090
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1090 next token value = )
NEW ==== testing leave from buildExpression AT END 1090
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1090
)
HITTING RPARENS 1090
NEW ==== testing leave from buildExpression AT END 1090
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1090
)
NEW ==== bye bye from buildExpression AT END 1090
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'discount'
                )

        )

)
LEAVING case T_VARIABLE 1089
]
NEW ==== testing leave from buildExpression AT END 1089
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1089
)
HITTING RPARENS 1089
NEW ==== testing leave from buildExpression AT END 1089
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1089
)
NEW ==== bye bye from buildExpression AT END 1089
while buildFunctionCall
)
LEAVING case T_STRING 1086
NEW ==== testing leave from buildExpression AT END 1086
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1086
;
testing leave from buildExpression 1086
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1086
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'discount'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'discount'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1086
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
  
    [2] => 470
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 472
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 472
)
buildExpression 1093
while buildExpression 1093
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 472
)
buildExpression 1094
while buildExpression 1094
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1094 next token value = 'e_phone_1'
buildExpression 1095
while buildExpression 1095
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 472
)
while buildExpression 1095
]
testing leave from buildExpression 1095
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1095 next token value =  
NEW ==== testing leave from buildExpression AT END 1095
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1095
]
NEW ==== bye bye from buildExpression AT END 1095
while buildExpression 1094
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1094 next token value =  
NEW ==== testing leave from buildExpression AT END 1094
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1094
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 472
)
while buildExpression 1094
=
testing leave from buildExpression 1094
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1094
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
PREVIOUS in buildExpression 1094
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
LEAVING case T_VARIABLE 1093
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 472
)
while buildExpression 1093
=
while buildExpression 1093
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 472
)
while buildExpression 1093
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 472
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_1'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1096
while buildExpression 1096
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 472
)
buildExpression 1097
while buildExpression 1097
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1097 next token value = 'form'
buildExpression 1098
while buildExpression 1098
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 472
)
while buildExpression 1098
]
testing leave from buildExpression 1098
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1098 next token value = [
NEW ==== testing leave from buildExpression AT END 1098
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1098
]
NEW ==== bye bye from buildExpression AT END 1098
while buildExpression 1097
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1097 next token value = [
NEW ==== testing leave from buildExpression AT END 1097
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1097
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1097 next token value = 'e_phone_1'
buildExpression 1099
while buildExpression 1099
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_1'
    [2] => 472
)
while buildExpression 1099
]
testing leave from buildExpression 1099
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1099 next token value = )
NEW ==== testing leave from buildExpression AT END 1099
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1099
]
NEW ==== bye bye from buildExpression AT END 1099
while buildExpression 1097
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1097 next token value = )
NEW ==== testing leave from buildExpression AT END 1097
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1097
)
HITTING RPARENS 1097
NEW ==== testing leave from buildExpression AT END 1097
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1097
)
NEW ==== bye bye from buildExpression AT END 1097
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_1'
                )

        )

)
LEAVING case T_VARIABLE 1096
]
NEW ==== testing leave from buildExpression AT END 1096
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1096
)
HITTING RPARENS 1096
NEW ==== testing leave from buildExpression AT END 1096
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1096
)
NEW ==== bye bye from buildExpression AT END 1096
while buildFunctionCall
)
LEAVING case T_STRING 1093
NEW ==== testing leave from buildExpression AT END 1093
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1093
;
testing leave from buildExpression 1093
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1093
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'e_phone_1'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1093
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 472
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 473
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 473
)
buildExpression 1100
while buildExpression 1100
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 473
)
buildExpression 1101
while buildExpression 1101
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1101 next token value = 'e_phone_2'
buildExpression 1102
while buildExpression 1102
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_2'
    [2] => 473
)
while buildExpression 1102
]
testing leave from buildExpression 1102
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1102 next token value =  
NEW ==== testing leave from buildExpression AT END 1102
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1102
]
NEW ==== bye bye from buildExpression AT END 1102
while buildExpression 1101
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1101 next token value =  
NEW ==== testing leave from buildExpression AT END 1101
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1101
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 473
)
while buildExpression 1101
=
testing leave from buildExpression 1101
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1101
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
PREVIOUS in buildExpression 1101
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
LEAVING case T_VARIABLE 1100
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 473
)
while buildExpression 1100
=
while buildExpression 1100
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 473
)
while buildExpression 1100
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 473
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_2'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1103
while buildExpression 1103
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 473
)
buildExpression 1104
while buildExpression 1104
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1104 next token value = 'form'
buildExpression 1105
while buildExpression 1105
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 473
)
while buildExpression 1105
]
testing leave from buildExpression 1105
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1105 next token value = [
NEW ==== testing leave from buildExpression AT END 1105
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1105
]
NEW ==== bye bye from buildExpression AT END 1105
while buildExpression 1104
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1104 next token value = [
NEW ==== testing leave from buildExpression AT END 1104
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1104
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1104 next token value = 'e_phone_2'
buildExpression 1106
while buildExpression 1106
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_2'
    [2] => 473
)
while buildExpression 1106
]
testing leave from buildExpression 1106
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1106 next token value = )
NEW ==== testing leave from buildExpression AT END 1106
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1106
]
NEW ==== bye bye from buildExpression AT END 1106
while buildExpression 1104
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1104 next token value = )
NEW ==== testing leave from buildExpression AT END 1104
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1104
)
HITTING RPARENS 1104
NEW ==== testing leave from buildExpression AT END 1104
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1104
)
NEW ==== bye bye from buildExpression AT END 1104
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_2'
                )

        )

)
LEAVING case T_VARIABLE 1103
]
NEW ==== testing leave from buildExpression AT END 1103
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1103
)
HITTING RPARENS 1103
NEW ==== testing leave from buildExpression AT END 1103
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1103
)
NEW ==== bye bye from buildExpression AT END 1103
while buildFunctionCall
)
LEAVING case T_STRING 1100
NEW ==== testing leave from buildExpression AT END 1100
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1100
;
testing leave from buildExpression 1100
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1100
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'e_phone_2'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1100
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 473
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 474
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 474
)
buildExpression 1107
while buildExpression 1107
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 474
)
buildExpression 1108
while buildExpression 1108
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1108 next token value = 'e_phone_3'
buildExpression 1109
while buildExpression 1109
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_3'
    [2] => 474
)
while buildExpression 1109
]
testing leave from buildExpression 1109
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1109 next token value =  
NEW ==== testing leave from buildExpression AT END 1109
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1109
]
NEW ==== bye bye from buildExpression AT END 1109
while buildExpression 1108
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1108 next token value =  
NEW ==== testing leave from buildExpression AT END 1108
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1108
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 474
)
while buildExpression 1108
=
testing leave from buildExpression 1108
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1108
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
PREVIOUS in buildExpression 1108
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
LEAVING case T_VARIABLE 1107
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 474
)
while buildExpression 1107
=
while buildExpression 1107
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 474
)
while buildExpression 1107
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 474
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_3'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1110
while buildExpression 1110
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 474
)
buildExpression 1111
while buildExpression 1111
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1111 next token value = 'form'
buildExpression 1112
while buildExpression 1112
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 474
)
while buildExpression 1112
]
testing leave from buildExpression 1112
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1112 next token value = [
NEW ==== testing leave from buildExpression AT END 1112
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1112
]
NEW ==== bye bye from buildExpression AT END 1112
while buildExpression 1111
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1111 next token value = [
NEW ==== testing leave from buildExpression AT END 1111
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1111
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1111 next token value = 'e_phone_3'
buildExpression 1113
while buildExpression 1113
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'e_phone_3'
    [2] => 474
)
while buildExpression 1113
]
testing leave from buildExpression 1113
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1113 next token value = )
NEW ==== testing leave from buildExpression AT END 1113
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1113
]
NEW ==== bye bye from buildExpression AT END 1113
while buildExpression 1111
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1111 next token value = )
NEW ==== testing leave from buildExpression AT END 1111
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1111
)
HITTING RPARENS 1111
NEW ==== testing leave from buildExpression AT END 1111
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1111
)
NEW ==== bye bye from buildExpression AT END 1111
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'e_phone_3'
                )

        )

)
LEAVING case T_VARIABLE 1110
]
NEW ==== testing leave from buildExpression AT END 1110
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1110
)
HITTING RPARENS 1110
NEW ==== testing leave from buildExpression AT END 1110
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1110
)
NEW ==== bye bye from buildExpression AT END 1110
while buildFunctionCall
)
LEAVING case T_STRING 1107
NEW ==== testing leave from buildExpression AT END 1107
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1107
;
testing leave from buildExpression 1107
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1107
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'e_phone_3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'e_phone_3'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1107
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
  
    [2] => 474
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 476
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 476
)
buildExpression 1114
while buildExpression 1114
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 476
)
buildExpression 1115
while buildExpression 1115
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1115 next token value = 'map'
buildExpression 1116
while buildExpression 1116
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'map'
    [2] => 476
)
while buildExpression 1116
]
testing leave from buildExpression 1116
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1116 next token value =  
NEW ==== testing leave from buildExpression AT END 1116
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1116
]
NEW ==== bye bye from buildExpression AT END 1116
while buildExpression 1115
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1115 next token value =  
NEW ==== testing leave from buildExpression AT END 1115
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1115
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 476
)
while buildExpression 1115
=
testing leave from buildExpression 1115
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1115
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'map'
                )

        )

)
PREVIOUS in buildExpression 1115
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'map'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'map'
                )

        )

)
LEAVING case T_VARIABLE 1114
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 476
)
while buildExpression 1114
=
while buildExpression 1114
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 476
)
while buildExpression 1114
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 476
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'map'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1117
while buildExpression 1117
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 476
)
buildExpression 1118
while buildExpression 1118
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1118 next token value = 'form'
buildExpression 1119
while buildExpression 1119
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 476
)
while buildExpression 1119
]
testing leave from buildExpression 1119
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1119 next token value = [
NEW ==== testing leave from buildExpression AT END 1119
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1119
]
NEW ==== bye bye from buildExpression AT END 1119
while buildExpression 1118
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1118 next token value = [
NEW ==== testing leave from buildExpression AT END 1118
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1118
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1118 next token value = 'map'
buildExpression 1120
while buildExpression 1120
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'map'
    [2] => 476
)
while buildExpression 1120
]
testing leave from buildExpression 1120
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1120 next token value = )
NEW ==== testing leave from buildExpression AT END 1120
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1120
]
NEW ==== bye bye from buildExpression AT END 1120
while buildExpression 1118
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1118 next token value = )
NEW ==== testing leave from buildExpression AT END 1118
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1118
)
HITTING RPARENS 1118
NEW ==== testing leave from buildExpression AT END 1118
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1118
)
NEW ==== bye bye from buildExpression AT END 1118
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'map'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'map'
                )

        )

)
LEAVING case T_VARIABLE 1117
]
NEW ==== testing leave from buildExpression AT END 1117
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1117
)
HITTING RPARENS 1117
NEW ==== testing leave from buildExpression AT END 1117
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1117
)
NEW ==== bye bye from buildExpression AT END 1117
while buildFunctionCall
)
LEAVING case T_STRING 1114
NEW ==== testing leave from buildExpression AT END 1114
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1114
;
testing leave from buildExpression 1114
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1114
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'map'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'map'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1114
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 476
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 477
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 477
)
buildExpression 1121
while buildExpression 1121
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 477
)
buildExpression 1122
while buildExpression 1122
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1122 next token value = 'surname'
buildExpression 1123
while buildExpression 1123
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'surname'
    [2] => 477
)
while buildExpression 1123
]
testing leave from buildExpression 1123
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1123 next token value =  
NEW ==== testing leave from buildExpression AT END 1123
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1123
]
NEW ==== bye bye from buildExpression AT END 1123
while buildExpression 1122
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1122 next token value =  
NEW ==== testing leave from buildExpression AT END 1122
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1122
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 477
)
while buildExpression 1122
=
testing leave from buildExpression 1122
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1122
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
PREVIOUS in buildExpression 1122
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
LEAVING case T_VARIABLE 1121
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 477
)
while buildExpression 1121
=
while buildExpression 1121
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 477
)
while buildExpression 1121
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 477
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'surname'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1124
while buildExpression 1124
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 477
)
buildExpression 1125
while buildExpression 1125
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1125 next token value = 'form'
buildExpression 1126
while buildExpression 1126
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 477
)
while buildExpression 1126
]
testing leave from buildExpression 1126
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1126 next token value = [
NEW ==== testing leave from buildExpression AT END 1126
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1126
]
NEW ==== bye bye from buildExpression AT END 1126
while buildExpression 1125
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1125 next token value = [
NEW ==== testing leave from buildExpression AT END 1125
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1125
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1125 next token value = 'surname'
buildExpression 1127
while buildExpression 1127
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'surname'
    [2] => 477
)
while buildExpression 1127
]
testing leave from buildExpression 1127
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1127 next token value = )
NEW ==== testing leave from buildExpression AT END 1127
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1127
]
NEW ==== bye bye from buildExpression AT END 1127
while buildExpression 1125
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1125 next token value = )
NEW ==== testing leave from buildExpression AT END 1125
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1125
)
HITTING RPARENS 1125
NEW ==== testing leave from buildExpression AT END 1125
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1125
)
NEW ==== bye bye from buildExpression AT END 1125
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'surname'
                )

        )

)
LEAVING case T_VARIABLE 1124
]
NEW ==== testing leave from buildExpression AT END 1124
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1124
)
HITTING RPARENS 1124
NEW ==== testing leave from buildExpression AT END 1124
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1124
)
NEW ==== bye bye from buildExpression AT END 1124
while buildFunctionCall
)
LEAVING case T_STRING 1121
NEW ==== testing leave from buildExpression AT END 1121
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1121
;
testing leave from buildExpression 1121
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1121
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'surname'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'surname'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1121
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 477
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 478
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 478
)
buildExpression 1128
while buildExpression 1128
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 478
)
buildExpression 1129
while buildExpression 1129
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1129 next token value = 'mail'
buildExpression 1130
while buildExpression 1130
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 478
)
while buildExpression 1130
]
testing leave from buildExpression 1130
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1130 next token value =  
NEW ==== testing leave from buildExpression AT END 1130
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1130
]
NEW ==== bye bye from buildExpression AT END 1130
while buildExpression 1129
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1129 next token value =  
NEW ==== testing leave from buildExpression AT END 1129
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1129
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 478
)
while buildExpression 1129
=
testing leave from buildExpression 1129
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1129
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
PREVIOUS in buildExpression 1129
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
LEAVING case T_VARIABLE 1128
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 478
)
while buildExpression 1128
=
while buildExpression 1128
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 478
)
while buildExpression 1128
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 478
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1131
while buildExpression 1131
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 478
)
buildExpression 1132
while buildExpression 1132
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1132 next token value = 'form'
buildExpression 1133
while buildExpression 1133
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 478
)
while buildExpression 1133
]
testing leave from buildExpression 1133
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1133 next token value = [
NEW ==== testing leave from buildExpression AT END 1133
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1133
]
NEW ==== bye bye from buildExpression AT END 1133
while buildExpression 1132
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1132 next token value = [
NEW ==== testing leave from buildExpression AT END 1132
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1132
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1132 next token value = 'mail'
buildExpression 1134
while buildExpression 1134
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'mail'
    [2] => 478
)
while buildExpression 1134
]
testing leave from buildExpression 1134
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1134 next token value = )
NEW ==== testing leave from buildExpression AT END 1134
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1134
]
NEW ==== bye bye from buildExpression AT END 1134
while buildExpression 1132
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1132 next token value = )
NEW ==== testing leave from buildExpression AT END 1132
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1132
)
HITTING RPARENS 1132
NEW ==== testing leave from buildExpression AT END 1132
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1132
)
NEW ==== bye bye from buildExpression AT END 1132
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'mail'
                )

        )

)
LEAVING case T_VARIABLE 1131
]
NEW ==== testing leave from buildExpression AT END 1131
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1131
)
HITTING RPARENS 1131
NEW ==== testing leave from buildExpression AT END 1131
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1131
)
NEW ==== bye bye from buildExpression AT END 1131
while buildFunctionCall
)
LEAVING case T_STRING 1128
NEW ==== testing leave from buildExpression AT END 1128
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1128
;
testing leave from buildExpression 1128
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1128
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'mail'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'mail'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1128
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 478
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 479
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 479
)
buildExpression 1135
while buildExpression 1135
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 479
)
buildExpression 1136
while buildExpression 1136
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1136 next token value = 'pass'
buildExpression 1137
while buildExpression 1137
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 479
)
while buildExpression 1137
]
testing leave from buildExpression 1137
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1137 next token value =  
NEW ==== testing leave from buildExpression AT END 1137
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1137
]
NEW ==== bye bye from buildExpression AT END 1137
while buildExpression 1136
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1136 next token value =  
NEW ==== testing leave from buildExpression AT END 1136
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1136
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 479
)
while buildExpression 1136
=
testing leave from buildExpression 1136
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1136
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
PREVIOUS in buildExpression 1136
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
LEAVING case T_VARIABLE 1135
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 479
)
while buildExpression 1135
=
while buildExpression 1135
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 479
)
while buildExpression 1135
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 479
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1138
while buildExpression 1138
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 479
)
buildExpression 1139
while buildExpression 1139
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1139 next token value = 'form'
buildExpression 1140
while buildExpression 1140
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 479
)
while buildExpression 1140
]
testing leave from buildExpression 1140
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1140 next token value = [
NEW ==== testing leave from buildExpression AT END 1140
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1140
]
NEW ==== bye bye from buildExpression AT END 1140
while buildExpression 1139
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1139 next token value = [
NEW ==== testing leave from buildExpression AT END 1139
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1139
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1139 next token value = 'pass'
buildExpression 1141
while buildExpression 1141
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass'
    [2] => 479
)
while buildExpression 1141
]
testing leave from buildExpression 1141
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1141 next token value = )
NEW ==== testing leave from buildExpression AT END 1141
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1141
]
NEW ==== bye bye from buildExpression AT END 1141
while buildExpression 1139
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1139 next token value = )
NEW ==== testing leave from buildExpression AT END 1139
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1139
)
HITTING RPARENS 1139
NEW ==== testing leave from buildExpression AT END 1139
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1139
)
NEW ==== bye bye from buildExpression AT END 1139
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass'
                )

        )

)
LEAVING case T_VARIABLE 1138
]
NEW ==== testing leave from buildExpression AT END 1138
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1138
)
HITTING RPARENS 1138
NEW ==== testing leave from buildExpression AT END 1138
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1138
)
NEW ==== bye bye from buildExpression AT END 1138
while buildFunctionCall
)
LEAVING case T_STRING 1135
NEW ==== testing leave from buildExpression AT END 1135
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1135
;
testing leave from buildExpression 1135
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1135
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'pass'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1135
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 479
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 480
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 480
)
buildExpression 1142
while buildExpression 1142
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 480
)
buildExpression 1143
while buildExpression 1143
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1143 next token value = 'pass2'
buildExpression 1144
while buildExpression 1144
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass2'
    [2] => 480
)
while buildExpression 1144
]
testing leave from buildExpression 1144
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1144 next token value =  
NEW ==== testing leave from buildExpression AT END 1144
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1144
]
NEW ==== bye bye from buildExpression AT END 1144
while buildExpression 1143
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1143 next token value =  
NEW ==== testing leave from buildExpression AT END 1143
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1143
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 480
)
while buildExpression 1143
=
testing leave from buildExpression 1143
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1143
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
PREVIOUS in buildExpression 1143
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
LEAVING case T_VARIABLE 1142
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 480
)
while buildExpression 1142
=
while buildExpression 1142
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 480
)
while buildExpression 1142
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 480
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass2'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1145
while buildExpression 1145
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 480
)
buildExpression 1146
while buildExpression 1146
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1146 next token value = 'form'
buildExpression 1147
while buildExpression 1147
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 480
)
while buildExpression 1147
]
testing leave from buildExpression 1147
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1147 next token value = [
NEW ==== testing leave from buildExpression AT END 1147
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1147
]
NEW ==== bye bye from buildExpression AT END 1147
while buildExpression 1146
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1146 next token value = [
NEW ==== testing leave from buildExpression AT END 1146
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1146
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1146 next token value = 'pass2'
buildExpression 1148
while buildExpression 1148
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'pass2'
    [2] => 480
)
while buildExpression 1148
]
testing leave from buildExpression 1148
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1148 next token value = )
NEW ==== testing leave from buildExpression AT END 1148
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1148
]
NEW ==== bye bye from buildExpression AT END 1148
while buildExpression 1146
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1146 next token value = )
NEW ==== testing leave from buildExpression AT END 1146
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1146
)
HITTING RPARENS 1146
NEW ==== testing leave from buildExpression AT END 1146
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1146
)
NEW ==== bye bye from buildExpression AT END 1146
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'pass2'
                )

        )

)
LEAVING case T_VARIABLE 1145
]
NEW ==== testing leave from buildExpression AT END 1145
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1145
)
HITTING RPARENS 1145
NEW ==== testing leave from buildExpression AT END 1145
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1145
)
NEW ==== bye bye from buildExpression AT END 1145
while buildFunctionCall
)
LEAVING case T_STRING 1142
NEW ==== testing leave from buildExpression AT END 1142
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1142
;
testing leave from buildExpression 1142
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1142
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'pass2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'pass2'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1142
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 480
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 481
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 481
)
buildExpression 1149
while buildExpression 1149
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 481
)
buildExpression 1150
while buildExpression 1150
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1150 next token value = 'company_name'
buildExpression 1151
while buildExpression 1151
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'company_name'
    [2] => 481
)
while buildExpression 1151
]
testing leave from buildExpression 1151
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1151 next token value =  
NEW ==== testing leave from buildExpression AT END 1151
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1151
]
NEW ==== bye bye from buildExpression AT END 1151
while buildExpression 1150
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1150 next token value =  
NEW ==== testing leave from buildExpression AT END 1150
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1150
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 481
)
while buildExpression 1150
=
testing leave from buildExpression 1150
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1150
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
PREVIOUS in buildExpression 1150
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
LEAVING case T_VARIABLE 1149
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 481
)
while buildExpression 1149
=
while buildExpression 1149
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 481
)
while buildExpression 1149
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 481
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'company_name'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1152
while buildExpression 1152
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 481
)
buildExpression 1153
while buildExpression 1153
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1153 next token value = 'form'
buildExpression 1154
while buildExpression 1154
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 481
)
while buildExpression 1154
]
testing leave from buildExpression 1154
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1154 next token value = [
NEW ==== testing leave from buildExpression AT END 1154
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1154
]
NEW ==== bye bye from buildExpression AT END 1154
while buildExpression 1153
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1153 next token value = [
NEW ==== testing leave from buildExpression AT END 1153
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1153
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1153 next token value = 'company_name'
buildExpression 1155
while buildExpression 1155
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'company_name'
    [2] => 481
)
while buildExpression 1155
]
testing leave from buildExpression 1155
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1155 next token value = )
NEW ==== testing leave from buildExpression AT END 1155
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1155
]
NEW ==== bye bye from buildExpression AT END 1155
while buildExpression 1153
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1153 next token value = )
NEW ==== testing leave from buildExpression AT END 1153
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1153
)
HITTING RPARENS 1153
NEW ==== testing leave from buildExpression AT END 1153
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1153
)
NEW ==== bye bye from buildExpression AT END 1153
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'company_name'
                )

        )

)
LEAVING case T_VARIABLE 1152
]
NEW ==== testing leave from buildExpression AT END 1152
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1152
)
HITTING RPARENS 1152
NEW ==== testing leave from buildExpression AT END 1152
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1152
)
NEW ==== bye bye from buildExpression AT END 1152
while buildFunctionCall
)
LEAVING case T_STRING 1149
NEW ==== testing leave from buildExpression AT END 1149
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1149
;
testing leave from buildExpression 1149
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1149
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'company_name'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'company_name'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1149
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 481
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 482
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 482
)
buildExpression 1156
while buildExpression 1156
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 482
)
buildExpression 1157
while buildExpression 1157
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1157 next token value = 'site'
buildExpression 1158
while buildExpression 1158
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site'
    [2] => 482
)
while buildExpression 1158
]
testing leave from buildExpression 1158
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1158 next token value =  
NEW ==== testing leave from buildExpression AT END 1158
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1158
]
NEW ==== bye bye from buildExpression AT END 1158
while buildExpression 1157
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1157 next token value =  
NEW ==== testing leave from buildExpression AT END 1157
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1157
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 482
)
while buildExpression 1157
=
testing leave from buildExpression 1157
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1157
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
PREVIOUS in buildExpression 1157
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
LEAVING case T_VARIABLE 1156
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 482
)
while buildExpression 1156
=
while buildExpression 1156
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 482
)
while buildExpression 1156
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 482
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'site'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1159
while buildExpression 1159
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 482
)
buildExpression 1160
while buildExpression 1160
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1160 next token value = 'form'
buildExpression 1161
while buildExpression 1161
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 482
)
while buildExpression 1161
]
testing leave from buildExpression 1161
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1161 next token value = [
NEW ==== testing leave from buildExpression AT END 1161
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1161
]
NEW ==== bye bye from buildExpression AT END 1161
while buildExpression 1160
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1160 next token value = [
NEW ==== testing leave from buildExpression AT END 1160
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1160
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1160 next token value = 'site'
buildExpression 1162
while buildExpression 1162
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'site'
    [2] => 482
)
while buildExpression 1162
]
testing leave from buildExpression 1162
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1162 next token value = )
NEW ==== testing leave from buildExpression AT END 1162
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1162
]
NEW ==== bye bye from buildExpression AT END 1162
while buildExpression 1160
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1160 next token value = )
NEW ==== testing leave from buildExpression AT END 1160
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1160
)
HITTING RPARENS 1160
NEW ==== testing leave from buildExpression AT END 1160
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1160
)
NEW ==== bye bye from buildExpression AT END 1160
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'site'
                )

        )

)
LEAVING case T_VARIABLE 1159
]
NEW ==== testing leave from buildExpression AT END 1159
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1159
)
HITTING RPARENS 1159
NEW ==== testing leave from buildExpression AT END 1159
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1159
)
NEW ==== bye bye from buildExpression AT END 1159
while buildFunctionCall
)
LEAVING case T_STRING 1156
NEW ==== testing leave from buildExpression AT END 1156
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1156
;
testing leave from buildExpression 1156
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1156
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'site'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'site'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1156
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 482
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 483
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 483
)
buildExpression 1163
while buildExpression 1163
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 483
)
buildExpression 1164
while buildExpression 1164
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1164 next token value = 'phone_1'
buildExpression 1165
while buildExpression 1165
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_1'
    [2] => 483
)
while buildExpression 1165
]
testing leave from buildExpression 1165
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1165 next token value =  
NEW ==== testing leave from buildExpression AT END 1165
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1165
]
NEW ==== bye bye from buildExpression AT END 1165
while buildExpression 1164
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1164 next token value =  
NEW ==== testing leave from buildExpression AT END 1164
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1164
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 483
)
while buildExpression 1164
=
testing leave from buildExpression 1164
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1164
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
PREVIOUS in buildExpression 1164
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
LEAVING case T_VARIABLE 1163
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 483
)
while buildExpression 1163
=
while buildExpression 1163
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 483
)
while buildExpression 1163
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 483
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_1'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1166
while buildExpression 1166
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 483
)
buildExpression 1167
while buildExpression 1167
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1167 next token value = 'form'
buildExpression 1168
while buildExpression 1168
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 483
)
while buildExpression 1168
]
testing leave from buildExpression 1168
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1168 next token value = [
NEW ==== testing leave from buildExpression AT END 1168
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1168
]
NEW ==== bye bye from buildExpression AT END 1168
while buildExpression 1167
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1167 next token value = [
NEW ==== testing leave from buildExpression AT END 1167
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1167
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1167 next token value = 'phone_1'
buildExpression 1169
while buildExpression 1169
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_1'
    [2] => 483
)
while buildExpression 1169
]
testing leave from buildExpression 1169
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1169 next token value = )
NEW ==== testing leave from buildExpression AT END 1169
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1169
]
NEW ==== bye bye from buildExpression AT END 1169
while buildExpression 1167
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1167 next token value = )
NEW ==== testing leave from buildExpression AT END 1167
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1167
)
HITTING RPARENS 1167
NEW ==== testing leave from buildExpression AT END 1167
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1167
)
NEW ==== bye bye from buildExpression AT END 1167
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_1'
                )

        )

)
LEAVING case T_VARIABLE 1166
]
NEW ==== testing leave from buildExpression AT END 1166
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1166
)
HITTING RPARENS 1166
NEW ==== testing leave from buildExpression AT END 1166
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1166
)
NEW ==== bye bye from buildExpression AT END 1166
while buildFunctionCall
)
LEAVING case T_STRING 1163
NEW ==== testing leave from buildExpression AT END 1163
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1163
;
testing leave from buildExpression 1163
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1163
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_1'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_1'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1163
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 483
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 484
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 484
)
buildExpression 1170
while buildExpression 1170
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 484
)
buildExpression 1171
while buildExpression 1171
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1171 next token value = 'phone_2'
buildExpression 1172
while buildExpression 1172
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_2'
    [2] => 484
)
while buildExpression 1172
]
testing leave from buildExpression 1172
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1172 next token value =  
NEW ==== testing leave from buildExpression AT END 1172
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1172
]
NEW ==== bye bye from buildExpression AT END 1172
while buildExpression 1171
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1171 next token value =  
NEW ==== testing leave from buildExpression AT END 1171
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1171
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 484
)
while buildExpression 1171
=
testing leave from buildExpression 1171
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1171
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
PREVIOUS in buildExpression 1171
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
LEAVING case T_VARIABLE 1170
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 484
)
while buildExpression 1170
=
while buildExpression 1170
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 484
)
while buildExpression 1170
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 484
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_2'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1173
while buildExpression 1173
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 484
)
buildExpression 1174
while buildExpression 1174
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1174 next token value = 'form'
buildExpression 1175
while buildExpression 1175
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 484
)
while buildExpression 1175
]
testing leave from buildExpression 1175
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1175 next token value = [
NEW ==== testing leave from buildExpression AT END 1175
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1175
]
NEW ==== bye bye from buildExpression AT END 1175
while buildExpression 1174
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1174 next token value = [
NEW ==== testing leave from buildExpression AT END 1174
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1174
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1174 next token value = 'phone_2'
buildExpression 1176
while buildExpression 1176
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_2'
    [2] => 484
)
while buildExpression 1176
]
testing leave from buildExpression 1176
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1176 next token value = )
NEW ==== testing leave from buildExpression AT END 1176
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1176
]
NEW ==== bye bye from buildExpression AT END 1176
while buildExpression 1174
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1174 next token value = )
NEW ==== testing leave from buildExpression AT END 1174
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1174
)
HITTING RPARENS 1174
NEW ==== testing leave from buildExpression AT END 1174
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1174
)
NEW ==== bye bye from buildExpression AT END 1174
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_2'
                )

        )

)
LEAVING case T_VARIABLE 1173
]
NEW ==== testing leave from buildExpression AT END 1173
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1173
)
HITTING RPARENS 1173
NEW ==== testing leave from buildExpression AT END 1173
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1173
)
NEW ==== bye bye from buildExpression AT END 1173
while buildFunctionCall
)
LEAVING case T_STRING 1170
NEW ==== testing leave from buildExpression AT END 1170
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1170
;
testing leave from buildExpression 1170
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1170
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_2'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_2'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1170
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 484
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 485
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 485
)
buildExpression 1177
while buildExpression 1177
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 485
)
buildExpression 1178
while buildExpression 1178
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1178 next token value = 'phone_3'
buildExpression 1179
while buildExpression 1179
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_3'
    [2] => 485
)
while buildExpression 1179
]
testing leave from buildExpression 1179
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1179 next token value =  
NEW ==== testing leave from buildExpression AT END 1179
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1179
]
NEW ==== bye bye from buildExpression AT END 1179
while buildExpression 1178
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1178 next token value =  
NEW ==== testing leave from buildExpression AT END 1178
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1178
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 485
)
while buildExpression 1178
=
testing leave from buildExpression 1178
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1178
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
PREVIOUS in buildExpression 1178
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
LEAVING case T_VARIABLE 1177
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 485
)
while buildExpression 1177
=
while buildExpression 1177
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 485
)
while buildExpression 1177
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 485
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_3'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1180
while buildExpression 1180
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 485
)
buildExpression 1181
while buildExpression 1181
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1181 next token value = 'form'
buildExpression 1182
while buildExpression 1182
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 485
)
while buildExpression 1182
]
testing leave from buildExpression 1182
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1182 next token value = [
NEW ==== testing leave from buildExpression AT END 1182
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1182
]
NEW ==== bye bye from buildExpression AT END 1182
while buildExpression 1181
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1181 next token value = [
NEW ==== testing leave from buildExpression AT END 1181
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1181
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1181 next token value = 'phone_3'
buildExpression 1183
while buildExpression 1183
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'phone_3'
    [2] => 485
)
while buildExpression 1183
]
testing leave from buildExpression 1183
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1183 next token value = )
NEW ==== testing leave from buildExpression AT END 1183
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1183
]
NEW ==== bye bye from buildExpression AT END 1183
while buildExpression 1181
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1181 next token value = )
NEW ==== testing leave from buildExpression AT END 1181
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1181
)
HITTING RPARENS 1181
NEW ==== testing leave from buildExpression AT END 1181
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1181
)
NEW ==== bye bye from buildExpression AT END 1181
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'phone_3'
                )

        )

)
LEAVING case T_VARIABLE 1180
]
NEW ==== testing leave from buildExpression AT END 1180
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1180
)
HITTING RPARENS 1180
NEW ==== testing leave from buildExpression AT END 1180
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1180
)
NEW ==== bye bye from buildExpression AT END 1180
while buildFunctionCall
)
LEAVING case T_STRING 1177
NEW ==== testing leave from buildExpression AT END 1177
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1177
;
testing leave from buildExpression 1177
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1177
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'phone_3'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'phone_3'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1177
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 485
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 486
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 486
)
buildExpression 1184
while buildExpression 1184
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 486
)
buildExpression 1185
while buildExpression 1185
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1185 next token value = 'description'
buildExpression 1186
while buildExpression 1186
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 486
)
while buildExpression 1186
]
testing leave from buildExpression 1186
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1186 next token value =  
NEW ==== testing leave from buildExpression AT END 1186
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1186
]
NEW ==== bye bye from buildExpression AT END 1186
while buildExpression 1185
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1185 next token value =  
NEW ==== testing leave from buildExpression AT END 1185
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1185
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 486
)
while buildExpression 1185
=
testing leave from buildExpression 1185
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1185
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
PREVIOUS in buildExpression 1185
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
LEAVING case T_VARIABLE 1184
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 486
)
while buildExpression 1184
=
while buildExpression 1184
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 486
)
while buildExpression 1184
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 486
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'description'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1187
while buildExpression 1187
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 486
)
buildExpression 1188
while buildExpression 1188
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1188 next token value = 'form'
buildExpression 1189
while buildExpression 1189
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 486
)
while buildExpression 1189
]
testing leave from buildExpression 1189
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1189 next token value = [
NEW ==== testing leave from buildExpression AT END 1189
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1189
]
NEW ==== bye bye from buildExpression AT END 1189
while buildExpression 1188
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1188 next token value = [
NEW ==== testing leave from buildExpression AT END 1188
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1188
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1188 next token value = 'description'
buildExpression 1190
while buildExpression 1190
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'description'
    [2] => 486
)
while buildExpression 1190
]
testing leave from buildExpression 1190
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1190 next token value = )
NEW ==== testing leave from buildExpression AT END 1190
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1190
]
NEW ==== bye bye from buildExpression AT END 1190
while buildExpression 1188
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1188 next token value = )
NEW ==== testing leave from buildExpression AT END 1188
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1188
)
HITTING RPARENS 1188
NEW ==== testing leave from buildExpression AT END 1188
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1188
)
NEW ==== bye bye from buildExpression AT END 1188
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'description'
                )

        )

)
LEAVING case T_VARIABLE 1187
]
NEW ==== testing leave from buildExpression AT END 1187
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1187
)
HITTING RPARENS 1187
NEW ==== testing leave from buildExpression AT END 1187
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1187
)
NEW ==== bye bye from buildExpression AT END 1187
while buildFunctionCall
)
LEAVING case T_STRING 1184
NEW ==== testing leave from buildExpression AT END 1184
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1184
;
testing leave from buildExpression 1184
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1184
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'description'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'description'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1184
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 486
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 487
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 487
)
buildExpression 1191
while buildExpression 1191
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 487
)
buildExpression 1192
while buildExpression 1192
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1192 next token value = 'submit'
buildExpression 1193
while buildExpression 1193
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'submit'
    [2] => 487
)
while buildExpression 1193
]
testing leave from buildExpression 1193
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1193 next token value =  
NEW ==== testing leave from buildExpression AT END 1193
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1193
]
NEW ==== bye bye from buildExpression AT END 1193
while buildExpression 1192
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1192 next token value =  
NEW ==== testing leave from buildExpression AT END 1192
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1192
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 487
)
while buildExpression 1192
=
testing leave from buildExpression 1192
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1192
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
PREVIOUS in buildExpression 1192
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
LEAVING case T_VARIABLE 1191
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 487
)
while buildExpression 1191
=
while buildExpression 1191
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 487
)
while buildExpression 1191
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 487
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'submit'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1194
while buildExpression 1194
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 487
)
buildExpression 1195
while buildExpression 1195
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1195 next token value = 'form'
buildExpression 1196
while buildExpression 1196
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 487
)
while buildExpression 1196
]
testing leave from buildExpression 1196
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1196 next token value = [
NEW ==== testing leave from buildExpression AT END 1196
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1196
]
NEW ==== bye bye from buildExpression AT END 1196
while buildExpression 1195
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1195 next token value = [
NEW ==== testing leave from buildExpression AT END 1195
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1195
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1195 next token value = 'submit'
buildExpression 1197
while buildExpression 1197
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'submit'
    [2] => 487
)
while buildExpression 1197
]
testing leave from buildExpression 1197
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1197 next token value = )
NEW ==== testing leave from buildExpression AT END 1197
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1197
]
NEW ==== bye bye from buildExpression AT END 1197
while buildExpression 1195
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1195 next token value = )
NEW ==== testing leave from buildExpression AT END 1195
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1195
)
HITTING RPARENS 1195
NEW ==== testing leave from buildExpression AT END 1195
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1195
)
NEW ==== bye bye from buildExpression AT END 1195
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'submit'
                )

        )

)
LEAVING case T_VARIABLE 1194
]
NEW ==== testing leave from buildExpression AT END 1194
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1194
)
HITTING RPARENS 1194
NEW ==== testing leave from buildExpression AT END 1194
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1194
)
NEW ==== bye bye from buildExpression AT END 1194
while buildFunctionCall
)
LEAVING case T_STRING 1191
NEW ==== testing leave from buildExpression AT END 1191
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1191
;
testing leave from buildExpression 1191
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1191
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'submit'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'submit'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1191
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 487
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 488
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 488
)
buildExpression 1198
while buildExpression 1198
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 488
)
buildExpression 1199
while buildExpression 1199
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1199 next token value = 'latFld'
buildExpression 1200
while buildExpression 1200
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'latFld'
    [2] => 488
)
while buildExpression 1200
]
testing leave from buildExpression 1200
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1200 next token value =  
NEW ==== testing leave from buildExpression AT END 1200
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1200
]
NEW ==== bye bye from buildExpression AT END 1200
while buildExpression 1199
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1199 next token value =  
NEW ==== testing leave from buildExpression AT END 1199
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1199
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 488
)
while buildExpression 1199
=
testing leave from buildExpression 1199
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1199
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
PREVIOUS in buildExpression 1199
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
LEAVING case T_VARIABLE 1198
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 488
)
while buildExpression 1198
=
while buildExpression 1198
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 488
)
while buildExpression 1198
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 488
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'latFld'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1201
while buildExpression 1201
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 488
)
buildExpression 1202
while buildExpression 1202
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1202 next token value = 'form'
buildExpression 1203
while buildExpression 1203
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 488
)
while buildExpression 1203
]
testing leave from buildExpression 1203
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1203 next token value = [
NEW ==== testing leave from buildExpression AT END 1203
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1203
]
NEW ==== bye bye from buildExpression AT END 1203
while buildExpression 1202
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1202 next token value = [
NEW ==== testing leave from buildExpression AT END 1202
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1202
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1202 next token value = 'latFld'
buildExpression 1204
while buildExpression 1204
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'latFld'
    [2] => 488
)
while buildExpression 1204
]
testing leave from buildExpression 1204
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1204 next token value = )
NEW ==== testing leave from buildExpression AT END 1204
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1204
]
NEW ==== bye bye from buildExpression AT END 1204
while buildExpression 1202
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1202 next token value = )
NEW ==== testing leave from buildExpression AT END 1202
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1202
)
HITTING RPARENS 1202
NEW ==== testing leave from buildExpression AT END 1202
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1202
)
NEW ==== bye bye from buildExpression AT END 1202
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'latFld'
                )

        )

)
LEAVING case T_VARIABLE 1201
]
NEW ==== testing leave from buildExpression AT END 1201
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1201
)
HITTING RPARENS 1201
NEW ==== testing leave from buildExpression AT END 1201
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1201
)
NEW ==== bye bye from buildExpression AT END 1201
while buildFunctionCall
)
LEAVING case T_STRING 1198
NEW ==== testing leave from buildExpression AT END 1198
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1198
;
testing leave from buildExpression 1198
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1198
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'latFld'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'latFld'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1198
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 488
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 489
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 489
)
buildExpression 1205
while buildExpression 1205
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 489
)
buildExpression 1206
while buildExpression 1206
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1206 next token value = 'lngFld'
buildExpression 1207
while buildExpression 1207
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'lngFld'
    [2] => 489
)
while buildExpression 1207
]
testing leave from buildExpression 1207
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1207 next token value =  
NEW ==== testing leave from buildExpression AT END 1207
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1207
]
NEW ==== bye bye from buildExpression AT END 1207
while buildExpression 1206
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1206 next token value =  
NEW ==== testing leave from buildExpression AT END 1206
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1206
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 489
)
while buildExpression 1206
=
testing leave from buildExpression 1206
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1206
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
PREVIOUS in buildExpression 1206
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
LEAVING case T_VARIABLE 1205
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 489
)
while buildExpression 1205
=
while buildExpression 1205
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 489
)
while buildExpression 1205
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 489
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'lngFld'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1208
while buildExpression 1208
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 489
)
buildExpression 1209
while buildExpression 1209
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1209 next token value = 'form'
buildExpression 1210
while buildExpression 1210
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 489
)
while buildExpression 1210
]
testing leave from buildExpression 1210
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1210 next token value = [
NEW ==== testing leave from buildExpression AT END 1210
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1210
]
NEW ==== bye bye from buildExpression AT END 1210
while buildExpression 1209
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1209 next token value = [
NEW ==== testing leave from buildExpression AT END 1209
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1209
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1209 next token value = 'lngFld'
buildExpression 1211
while buildExpression 1211
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'lngFld'
    [2] => 489
)
while buildExpression 1211
]
testing leave from buildExpression 1211
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1211 next token value = )
NEW ==== testing leave from buildExpression AT END 1211
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1211
]
NEW ==== bye bye from buildExpression AT END 1211
while buildExpression 1209
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1209 next token value = )
NEW ==== testing leave from buildExpression AT END 1209
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1209
)
HITTING RPARENS 1209
NEW ==== testing leave from buildExpression AT END 1209
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1209
)
NEW ==== bye bye from buildExpression AT END 1209
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'lngFld'
                )

        )

)
LEAVING case T_VARIABLE 1208
]
NEW ==== testing leave from buildExpression AT END 1208
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1208
)
HITTING RPARENS 1208
NEW ==== testing leave from buildExpression AT END 1208
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1208
)
NEW ==== bye bye from buildExpression AT END 1208
while buildFunctionCall
)
LEAVING case T_STRING 1205
NEW ==== testing leave from buildExpression AT END 1205
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1205
;
testing leave from buildExpression 1205
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1205
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'lngFld'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'lngFld'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1205
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 489
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 490
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 490
)
buildExpression 1212
while buildExpression 1212
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 490
)
buildExpression 1213
while buildExpression 1213
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1213 next token value = 'gps_eq'
buildExpression 1214
while buildExpression 1214
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'gps_eq'
    [2] => 490
)
while buildExpression 1214
]
testing leave from buildExpression 1214
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1214 next token value =  
NEW ==== testing leave from buildExpression AT END 1214
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1214
]
NEW ==== bye bye from buildExpression AT END 1214
while buildExpression 1213
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1213 next token value =  
NEW ==== testing leave from buildExpression AT END 1213
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1213
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 490
)
while buildExpression 1213
=
testing leave from buildExpression 1213
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1213
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
PREVIOUS in buildExpression 1213
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
LEAVING case T_VARIABLE 1212
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 490
)
while buildExpression 1212
=
while buildExpression 1212
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 490
)
while buildExpression 1212
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 490
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'gps_eq'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1215
while buildExpression 1215
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 490
)
buildExpression 1216
while buildExpression 1216
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1216 next token value = 'form'
buildExpression 1217
while buildExpression 1217
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 490
)
while buildExpression 1217
]
testing leave from buildExpression 1217
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1217 next token value = [
NEW ==== testing leave from buildExpression AT END 1217
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1217
]
NEW ==== bye bye from buildExpression AT END 1217
while buildExpression 1216
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1216 next token value = [
NEW ==== testing leave from buildExpression AT END 1216
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1216
[
LEFT  lbrackets = 1 <=> rbrackets = 1 in 1216 next token value = 'gps_eq'
buildExpression 1218
while buildExpression 1218
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'gps_eq'
    [2] => 490
)
while buildExpression 1218
]
testing leave from buildExpression 1218
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1218 next token value = )
NEW ==== testing leave from buildExpression AT END 1218
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1218
]
NEW ==== bye bye from buildExpression AT END 1218
while buildExpression 1216
]
RIGHT lbrackets = 2 <=> rbrackets = 1 in 1216 next token value = )
NEW ==== testing leave from buildExpression AT END 1216
lparens = 0 <=> rparens = 0 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1216
)
HITTING RPARENS 1216
NEW ==== testing leave from buildExpression AT END 1216
lparens = 0 <=> rparens = 1 <=> lbrackets = 2 <=> rbrackets = 2 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1216
)
NEW ==== bye bye from buildExpression AT END 1216
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'gps_eq'
                )

        )

)
LEAVING case T_VARIABLE 1215
]
NEW ==== testing leave from buildExpression AT END 1215
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1215
)
HITTING RPARENS 1215
NEW ==== testing leave from buildExpression AT END 1215
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1215
)
NEW ==== bye bye from buildExpression AT END 1215
while buildFunctionCall
)
LEAVING case T_STRING 1212
NEW ==== testing leave from buildExpression AT END 1212
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1212
;
testing leave from buildExpression 1212
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1212
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'gps_eq'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'gps_eq'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1212
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 
  
    [2] => 490
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 491
)
buildAssignment
XXXXXX type = 371 (T_WHITESPACE)
while buildAssignment
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 491
)
buildExpression 1219
while buildExpression 1219
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 491
)
buildExpression 1220
while buildExpression 1220
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1220 next token value = 'other_elements'
buildExpression 1221
while buildExpression 1221
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'other_elements'
    [2] => 491
)
while buildExpression 1221
]
testing leave from buildExpression 1221
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1221 next token value =  
NEW ==== testing leave from buildExpression AT END 1221
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1221
]
NEW ==== bye bye from buildExpression AT END 1221
while buildExpression 1220
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1220 next token value =  
NEW ==== testing leave from buildExpression AT END 1220
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1220
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 491
)
while buildExpression 1220
=
testing leave from buildExpression 1220
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1220
=
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'other_elements'
                )

        )

)
PREVIOUS in buildExpression 1220
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'other_elements'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'other_elements'
                )

        )

)
LEAVING case T_VARIABLE 1219
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 491
)
while buildExpression 1219
=
while buildExpression 1219
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] =>  
    [2] => 491
)
while buildExpression 1219
Array
(
    [0] => 307 (T_STRING)
    [1] => drupal_render
    [2] => 491
)
ABOUT TO FORK TO FUNCTION CALL
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'other_elements'
                        )

                )

        )

    [assign] => =
    [2] => 
)
buildFunctionCall
while buildFunctionCall
(
buildExpression 1222
while buildExpression 1222
Array
(
    [0] => 309 (T_VARIABLE)
    [1] => $vars
    [2] => 491
)
buildExpression 1223
while buildExpression 1223
[
LEFT  lbrackets = 0 <=> rbrackets = 0 in 1223 next token value = 'form'
buildExpression 1224
while buildExpression 1224
Array
(
    [0] => 315 (T_CONSTANT_ENCAPSED_STRING)
    [1] => 'form'
    [2] => 491
)
while buildExpression 1224
]
testing leave from buildExpression 1224
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
RIGHT lbrackets = 0 <=> rbrackets = 0 in 1224 next token value = )
NEW ==== testing leave from buildExpression AT END 1224
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1224
]
NEW ==== bye bye from buildExpression AT END 1224
while buildExpression 1223
]
RIGHT lbrackets = 1 <=> rbrackets = 0 in 1223 next token value = )
NEW ==== testing leave from buildExpression AT END 1223
lparens = 0 <=> rparens = 0 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1223
)
HITTING RPARENS 1223
NEW ==== testing leave from buildExpression AT END 1223
lparens = 0 <=> rparens = 1 <=> lbrackets = 1 <=> rbrackets = 1 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1223
)
NEW ==== bye bye from buildExpression AT END 1223
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

)
component
PGPOperand
(
    [type] => 309 (T_VARIABLE)
    [value] => $vars
    [index] => PGPExpression
        (
            [operand] => Array
                (
                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                    [value] => 'form'
                )

        )

)
LEAVING case T_VARIABLE 1222
]
NEW ==== testing leave from buildExpression AT END 1222
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1222
)
HITTING RPARENS 1222
NEW ==== testing leave from buildExpression AT END 1222
lparens = 0 <=> rparens = 1 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
NEW ==== leaving buildExpression AT END 1222
)
NEW ==== bye bye from buildExpression AT END 1222
while buildFunctionCall
)
LEAVING case T_STRING 1219
NEW ==== testing leave from buildExpression AT END 1219
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
while buildExpression 1219
;
testing leave from buildExpression 1219
lparens = 0 <=> rparens = 0 <=> lbrackets = 0 <=> rbrackets = 0 <=> lbraces = 0 <=> rbraces = 0
leaving buildExpression 1219
;
PGPExpression
(
    [operand] => PGPOperand
        (
            [type] => 309 (T_VARIABLE)
            [value] => $vars
            [index] => PGPExpression
                (
                    [operand] => Array
                        (
                            [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                            [value] => 'other_elements'
                        )

                )

        )

    [assign] => =
    [operand] => PGPFunctionCall
        (
            [parent] => PGPNode
                (
                    [type-3] => 
                )

            [type] => 601
            [name] => Array
                (
                    [type] => 307 (T_STRING)
                    [value] => drupal_render
                )

            [noparens] => 0
            [parameters] => PGPList
                (
                    [0] => PGPExpression
                        (
                            [operand] => PGPOperand
                                (
                                    [type] => 309 (T_VARIABLE)
                                    [value] => $vars
                                    [index] => PGPExpression
                                        (
                                            [operand] => Array
                                                (
                                                    [type] => 315 (T_CONSTANT_ENCAPSED_STRING)
                                                    [value] => 'form'
                                                )

                                        )

                                )

                        )

                )

            [parentExpression] => PGPExpression
                (
                    [type-1] => 
                )

            [debug] => 
        )

)
PREVIOUS in buildExpression 1219
while buildAssignment
;
ONE expression in buildAssign
hitting funky type check in buildAssign
LEAVING case T_VARIABLE after buildAssignment call from buildBody
statements_to_return = 0 in buildBody
while buildBody
;
Hitting semi-colon in PGPReader::buildBody
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 

  
    [2] => 491
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 366 (T_COMMENT)
    [1] => //$vars[''] = drupal_render($vars['form']['']);

    [2] => 493
)
statements_to_return = 0 in buildBody
while buildBody
}
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 371 (T_WHITESPACE)
    [1] => 


    [2] => 494
)
statements_to_return = 0 in buildBody
while buildBody
Array
(
    [0] => 370 (T_CLOSE_TAG)
    [1] => ?>
    [2] => 496
)
